{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Oasys SDK",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/Oasys.Common.EngineManager.html": {
    "href": "api/Oasys.Common.EngineManager.html",
    "title": "Class EngineManager | Oasys SDK",
    "keywords": "Class EngineManager Inheritance System.Object EngineManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common Assembly : Oasys.Common.dll Syntax public class EngineManager Properties ChatClient Declaration public static ChatClient ChatClient { get; } Property Value Type Description ChatClient GamePing Declaration public static int GamePing { get; } Property Value Type Description System.Int32 GameStatus Declaration public static GameStatusFlag GameStatus { get; } Property Value Type Description GameStatusFlag GameTick Declaration public static int GameTick { get; } Property Value Type Description System.Int32 GameTime Declaration public static float GameTime { get; } Property Value Type Description System.Single GameVersion Declaration public static string GameVersion { get; } Property Value Type Description System.String MaxZoomValue Declaration public static float MaxZoomValue { get; } Property Value Type Description System.Single MinimapInfo Declaration public static MinimapInfo MinimapInfo { get; } Property Value Type Description MinimapInfo MissionInfo Declaration public static MissionInfo MissionInfo { get; } Property Value Type Description MissionInfo ObjectUnderMouse Declaration public static AIBaseClient ObjectUnderMouse { get; } Property Value Type Description AIBaseClient ScreenMousePosition Declaration public static Vector2 ScreenMousePosition { get; } Property Value Type Description SharpDX.Vector2 WorldMousePosition Declaration public static Vector3 WorldMousePosition { get; } Property Value Type Description SharpDX.Vector3 ZoomValue Declaration public static float ZoomValue { get; } Property Value Type Description System.Single Methods IssueOrder(EngineManager.OrderType, Vector2) Declaration public static void IssueOrder(EngineManager.OrderType issuedOrder, Vector2 positionOrdered) Parameters Type Name Description EngineManager.OrderType issuedOrder SharpDX.Vector2 positionOrdered IssueOrder(EngineManager.OrderType, Vector3) Declaration public static void IssueOrder(EngineManager.OrderType issuedOrder, Vector3 positionOrdered) Parameters Type Name Description EngineManager.OrderType issuedOrder SharpDX.Vector3 positionOrdered IsWall(Vector3) Declaration public static bool IsWall(Vector3 vec3Pos) Parameters Type Name Description SharpDX.Vector3 vec3Pos Returns Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EngineManager.OrderType.html": {
    "href": "api/Oasys.Common.EngineManager.OrderType.html",
    "title": "Enum EngineManager.OrderType | Oasys SDK",
    "keywords": "Enum EngineManager.OrderType Namespace : Oasys.Common Assembly : Oasys.Common.dll Syntax public enum OrderType Fields Name Description MoveTo Recall Stop Extension Methods Extensions.ClearFlags<EngineManager.OrderType>(EngineManager.OrderType) Extensions.GetFlagDescription<EngineManager.OrderType>() Extensions.GetFlags<EngineManager.OrderType>() Extensions.In<EngineManager.OrderType>(EngineManager.OrderType[]) Extensions.SetFlags<EngineManager.OrderType>(EngineManager.OrderType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.BuffType.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.BuffType.html",
    "title": "Enum BuffType | Oasys SDK",
    "keywords": "Enum BuffType Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum BuffType : byte Fields Name Description Asleep Aura Berserk Blind Charm CombatDehancer CombatEnchancer Counter Currency Damage Disarm Drowsy Fear Flee Grounded Haste Heal Internal Invisibility Invulnerability Knockback Knockup NearSight Obscured PhysicalImmunity Poison Polymorph Shred Silence Sleep Slow Snare SpellImmunity SpellShield Stun Suppression Taunt Unkillable Unknown UnSelectableToEnemies Extension Methods Extensions.ClearFlags<BuffType>(BuffType) Extensions.GetFlagDescription<BuffType>() Extensions.GetFlags<BuffType>() Extensions.In<BuffType>(BuffType[]) Extensions.SetFlags<BuffType>(BuffType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.CastType.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.CastType.html",
    "title": "Enum CastType | Oasys SDK",
    "keywords": "Enum CastType Indicates how a spell can be casted Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum CastType Fields Name Description Activate The spell is activable AllyChampions The spell can be casted on an ally champion AllyMinions The spell can be casted on an ally minion AllyTurrets The spell can be casted on an ally turret Channel The spell is a channel Charging The spell is a charging spell Direction The spell can be casted in a direction EnemyChampions The spell can be casted on an enemy champion EnemyMinions The spell can be casted on an enemy minion EnemyTurrets The spell can be casted on an enemy tower HeroPets The spell can be casted only on pets. ImpossibleToCast The spell can't be casted Position The spell can be casted on a position Self The spell can be casted on self Toggle The spell is a toggleable spell Extension Methods Extensions.ClearFlags<CastType>(CastType) Extensions.GetFlagDescription<CastType>() Extensions.GetFlags<CastType>() Extensions.In<CastType>(CastType[]) Extensions.SetFlags<CastType>(CastType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.CollisionableObjects.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.CollisionableObjects.html",
    "title": "Enum CollisionableObjects | Oasys SDK",
    "keywords": "Enum CollisionableObjects Collision-able Objects Flags Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax [Flags] public enum CollisionableObjects Fields Name Description BraumShield Braum's Shield Collision-able Flag Heroes Hero Collision-able Flag Minions Minion Collision-able Flag Walls Wall Collision-able Flag YasuoWall Yasuo's Wall Collision-able Flag Extension Methods Extensions.ClearFlags<CollisionableObjects>(CollisionableObjects) Extensions.GetFlagDescription<CollisionableObjects>() Extensions.GetFlags<CollisionableObjects>() Extensions.In<CollisionableObjects>(CollisionableObjects[]) Extensions.SetFlags<CollisionableObjects>(CollisionableObjects, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.CollisionFlags.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.CollisionFlags.html",
    "title": "Enum CollisionFlags | Oasys SDK",
    "keywords": "Enum CollisionFlags Collision Flags, are used to define certain position in the game which hold a collision. Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax [Flags] public enum CollisionFlags : ushort Fields Name Description Building Building Collision Grass Grass Collision None No Collision Prop Prop (Object) Collision Wall Wall Collision Extension Methods Extensions.ClearFlags<CollisionFlags>(CollisionFlags) Extensions.GetFlagDescription<CollisionFlags>() Extensions.GetFlags<CollisionFlags>() Extensions.In<CollisionFlags>(CollisionFlags[]) Extensions.SetFlags<CollisionFlags>(CollisionFlags, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.CombatTypes.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.CombatTypes.html",
    "title": "Enum CombatTypes | Oasys SDK",
    "keywords": "Enum CombatTypes Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum CombatTypes Fields Name Description Melee Ranged Extension Methods Extensions.ClearFlags<CombatTypes>(CombatTypes) Extensions.GetFlagDescription<CombatTypes>() Extensions.GetFlags<CombatTypes>() Extensions.In<CombatTypes>(CombatTypes[]) Extensions.SetFlags<CombatTypes>(CombatTypes, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.GameStatusFlag.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.GameStatusFlag.html",
    "title": "Enum GameStatusFlag | Oasys SDK",
    "keywords": "Enum GameStatusFlag Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum GameStatusFlag Fields Name Description ConnectingInLobby Disconnecting GameFinished GamePaused GameRunning Extension Methods Extensions.ClearFlags<GameStatusFlag>(GameStatusFlag) Extensions.GetFlagDescription<GameStatusFlag>() Extensions.GetFlags<GameStatusFlag>() Extensions.In<GameStatusFlag>(GameStatusFlag[]) Extensions.SetFlags<GameStatusFlag>(GameStatusFlag, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.GameTypes.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.GameTypes.html",
    "title": "Enum GameTypes | Oasys SDK",
    "keywords": "Enum GameTypes Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum GameTypes : uint Fields Name Description Ascension Assassinate Classic DarkStar DoomBotsTeemo FirstBlood KingPoro Odin PracticeTool Siege StarGuardian Tutorial Urf Extension Methods Extensions.ClearFlags<GameTypes>(GameTypes) Extensions.GetFlagDescription<GameTypes>() Extensions.GetFlags<GameTypes>() Extensions.In<GameTypes>(GameTypes[]) Extensions.SetFlags<GameTypes>(GameTypes, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.GapcloserType.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.GapcloserType.html",
    "title": "Enum GapcloserType | Oasys SDK",
    "keywords": "Enum GapcloserType Gapcloser Spell Type Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum GapcloserType Fields Name Description Skillshot Skillshot Spell Targeted Targeted Spell Extension Methods Extensions.ClearFlags<GapcloserType>(GapcloserType) Extensions.GetFlagDescription<GapcloserType>() Extensions.GetFlags<GapcloserType>() Extensions.In<GapcloserType>(GapcloserType[]) Extensions.SetFlags<GapcloserType>(GapcloserType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.html",
    "title": "Namespace Oasys.Common.Enums.GameEnums | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Enums.GameEnums Enums BuffType CastType Indicates how a spell can be casted CollisionableObjects Collision-able Objects Flags CollisionFlags Collision Flags, are used to define certain position in the game which hold a collision. CombatTypes GameStatusFlag GameTypes GapcloserType Gapcloser Spell Type ItemID ItemSlot MapIDFlag ObjectTypeFlag ResourceType SkillshotDetectionType SkillshotType Skillshot Type Enumeration SpellCastSlot SpellSlot SpellTags Properties that a spell can have SpellType SpellType enumeration TeamFlag TurretType The turret type."
  },
  "api/Oasys.Common.Enums.GameEnums.ItemID.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.ItemID.html",
    "title": "Enum ItemID | Oasys SDK",
    "keywords": "Enum ItemID Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum ItemID Fields Name Description Abyssal_Mask Aegis_of_the_Legion Aether_Wisp Amplifying_Tome Anathemas_Chains Anti_tower_Socks Archangels_Staff Ardent_Censer Axiom_Arc B_F_Sword Bamis_Cinder Bandleglass_Mirror Banshees_Veil Berserkers_Greaves Black_Cleaver Black_Mist_Scythe Blade_of_The_Ruined_King Blasting_Wand Blighting_Jewel Bloodthirster Bloodward Boots Boots_of_Swiftness Bramble_Vest Broken_Stopwatch Broken_Stopwatch2 Bulwark_of_the_Mountain Caesura Caulfields_Warhammer CeaselessHunger Chain_Vest Chempunk_Chainsword Chemtech_Putrifier Cloak_of_Agility Cloth_Armor Commencing_Stopwatch Control_Ward Corrupting_Potion Cosmic_Drive Crown_of_the_Shattered_Queen Crystalline_Bracer Cull Dagger Dark_Seal Dead_Mans_Plate Deaths_Dance Deaths_Daughter_Silver_Serpents Deicide Demonic_Embrace Divine_Sunderer Dorans_Blade Dorans_Ring Dorans_Shield DraktharrsShadowcarver Dreamshatter Duskblade_of_Draktharr Eclipse Edge_of_Night Elixir_of_Iron Elixir_of_Sorcery Elixir_of_Wrath Emberknife Equinox Essence_Reaver EternalWinter Evenshroud Everfrost Executioners_Calling Eye_of_the_Herald EyeofLuden Faerie_Charm Farsight_Alteration Fiendish_Codex Fimbulwinter Fire_at_Will_Silver_Serpents Forbidden_Idol Force_of_Nature ForgefireCrest Fortification Frostfang Frostfire_Gauntlet Frozen_Heart Galeforce Gangplank_Placeholder Gargoyle_Stoneplate Giants_Belt Glacial_Buckler Goredrinker Guardian_Angel Guardians_Blade Guardians_Hammer Guardians_Horn Guardians_Orb Guinsoos_Rageblade Gusto Hailblade Harrowing_Crescent Health_Potion Hearthbound_Axe Hexdrinker Hextech_Alternator Hextech_Rocketbelt Horizon_Focus Hullbreaker IcathiasCurse Immortal_Shieldbow Imperial_Mandate Infinity_Edge InfinityForce Ionian_Boots_of_Lucidity Ironspike_Whip Kalistas_Black_Spear Kalistas_Black_Spear2 Kindlegem Kircheis_Shard Knights_Vow Kraken_Slayer Last_Whisper Leeching_Leer Liandrys_Anguish LiandrysLament Lich_Bane Lightning_Rod Locket_of_the_Iron_Solari Long_Sword Lord_Dominiks_Regards Lost_Chapter Ludens_Tempest Manamune Maw_of_Malmortius Mejais_Soulstealer Mercurial_Scimitar Mercurys_Treads Mikaels_Blessing Minion_Dematerializer Mobility_Boots Moonstone_Renewer Morellonomicon Mortal_Reminder Muramana Nashors_Tooth Navori_Quickblades Needlessly_Large_Rod Negatron_Cloak Night_Harvester Noonquiver Null_Magic_Mantle Oblivion_Orb Obsidian_Edge Oracle_Lens Overcharged Pauldrons_of_Whiterock Penetrating_Bullets Perfectly_Timed_Stopwatch Phage Phantom_Dancer Phreakish_Gusto Pickaxe Plated_Steelcaps Poro_Snax Prowlers_Claw Quicksilver_Sash Rabadons_Deathcap Rageknife Raise_Morale_Silver_Serpents Randuins_Omen Rapid_Firecannon Ravenous_Hydra Recall Recurve_Bow Redemption Refillable_Potion Reinforced_Armor Reinforced_Armor2 Rejuvenation_Bead Relic_Shield ReliquaryoftheGoldenDawn Riftmaker RimeforgedGrasp Ruby_Crystal Runaans_Hurricane Runesteel_Spaulders Rylais_Crystal_Scepter SandshrikesClaw Sapphire_Crystal Scarecrow_Effigy SeatofCommand Seekers_Armguard Seraphs_Embrace Serpents_Fang Serrated_Dirk Seryldas_Grudge Shadowflame Shard_of_True_Ice Sheen Shurelyas_Battlesong ShurelyasRequiem Silvermere_Dawn Slightly_Magical_Footwear Sorcerers_Shoes Spectral_Sickle Spectres_Cowl Spellthiefs_Edge Spirit_Visage Staff_of_Flowing_Water Starcaster Stealth_Ward Steel_Shoulderguards Steraks_Gage Stirring_Wardstone Stopwatch Stormrazor Stridebreaker Structure_Bounty Structure_Bounty1 Structure_Bounty2 Structure_Bounty3 Sunfire_Aegis Super_Mech_Armor Super_Mech_Power_Field Syzygy Targons_Buckler Tear_of_the_Goddess The_Collector The_Golden_Spatula Thornmail Tiamat Titanic_Hydra Total_Biscuit_of_Everlasting_Will Trinity_Force Turbo_Chemtank TurbochargedHexperiment Turret_Plating Typhoon Umbral_Glaive UnknownItem UpgradedAeropack Vampiric_Scepter Vanguard Verdant_Barrier Vespertide Vigilant_Wardstone Void_Staff Wardens_Eye Wardens_Mail Warmogs_Armor Watchful_Wardstone Winged_Moonplate Winters_Approach Wits_End WyrmfallenSacrifice Youmuus_Ghostblade Your_Cut Zeal Zekes_Convergence Zhonyas_Hourglass Extension Methods Extensions.ClearFlags<ItemID>(ItemID) Extensions.GetFlagDescription<ItemID>() Extensions.GetFlags<ItemID>() Extensions.In<ItemID>(ItemID[]) Extensions.SetFlags<ItemID>(ItemID, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.ItemSlot.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.ItemSlot.html",
    "title": "Enum ItemSlot | Oasys SDK",
    "keywords": "Enum ItemSlot Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum ItemSlot Fields Name Description Five Null One Seven Six Three Trinket Two Extension Methods Extensions.ClearFlags<ItemSlot>(ItemSlot) Extensions.GetFlagDescription<ItemSlot>() Extensions.GetFlags<ItemSlot>() Extensions.In<ItemSlot>(ItemSlot[]) Extensions.SetFlags<ItemSlot>(ItemSlot, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.MapIDFlag.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.MapIDFlag.html",
    "title": "Enum MapIDFlag | Oasys SDK",
    "keywords": "Enum MapIDFlag Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum MapIDFlag Fields Name Description HowlingAbyss SummonersRift Extension Methods Extensions.ClearFlags<MapIDFlag>(MapIDFlag) Extensions.GetFlagDescription<MapIDFlag>() Extensions.GetFlags<MapIDFlag>() Extensions.In<MapIDFlag>(MapIDFlag[]) Extensions.SetFlags<MapIDFlag>(MapIDFlag, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.ObjectTypeFlag.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.ObjectTypeFlag.html",
    "title": "Enum ObjectTypeFlag | Oasys SDK",
    "keywords": "Enum ObjectTypeFlag Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum ObjectTypeFlag Fields Name Description AIBaseClient AIBaseCommon AIGameObject AIHeroClient AIMinionClient AIMissileClient AITurretClient AttackableUnitIdentifier BuildingProps DeadObjectIdentifier InvalidObject NeutralCampClient UnknownClient_1 UnknownClient_2 UnknownClient_3 Extension Methods Extensions.ClearFlags<ObjectTypeFlag>(ObjectTypeFlag) Extensions.GetFlagDescription<ObjectTypeFlag>() Extensions.GetFlags<ObjectTypeFlag>() Extensions.In<ObjectTypeFlag>(ObjectTypeFlag[]) Extensions.SetFlags<ObjectTypeFlag>(ObjectTypeFlag, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.ResourceType.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.ResourceType.html",
    "title": "Enum ResourceType | Oasys SDK",
    "keywords": "Enum ResourceType Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum ResourceType Fields Name Description BloodThirst BloodWell Courage Energy Ferocity Flow Fury Grit Heat Mana None Rage Shield Extension Methods Extensions.ClearFlags<ResourceType>(ResourceType) Extensions.GetFlagDescription<ResourceType>() Extensions.GetFlags<ResourceType>() Extensions.In<ResourceType>(ResourceType[]) Extensions.SetFlags<ResourceType>(ResourceType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.SkillshotDetectionType.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.SkillshotDetectionType.html",
    "title": "Enum SkillshotDetectionType | Oasys SDK",
    "keywords": "Enum SkillshotDetectionType Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum SkillshotDetectionType Fields Name Description CreateObject MissileCreate ProcessSpell Extension Methods Extensions.ClearFlags<SkillshotDetectionType>(SkillshotDetectionType) Extensions.GetFlagDescription<SkillshotDetectionType>() Extensions.GetFlags<SkillshotDetectionType>() Extensions.In<SkillshotDetectionType>(SkillshotDetectionType[]) Extensions.SetFlags<SkillshotDetectionType>(SkillshotDetectionType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.SkillshotType.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.SkillshotType.html",
    "title": "Enum SkillshotType | Oasys SDK",
    "keywords": "Enum SkillshotType Skillshot Type Enumeration Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum SkillshotType Fields Name Description SkillshotCircle Determines that the skillshot is a circle skillshot . SkillshotCone Determines that the skillshot is a cone skillshot . SkillshotLine Determines that the skillshot is a linear skillshot . Extension Methods Extensions.ClearFlags<SkillshotType>(SkillshotType) Extensions.GetFlagDescription<SkillshotType>() Extensions.GetFlags<SkillshotType>() Extensions.In<SkillshotType>(SkillshotType[]) Extensions.SetFlags<SkillshotType>(SkillshotType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.SpellCastSlot.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.SpellCastSlot.html",
    "title": "Enum SpellCastSlot | Oasys SDK",
    "keywords": "Enum SpellCastSlot Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum SpellCastSlot : short Fields Name Description E Q R Summoner1 Summoner2 W Extension Methods Extensions.ClearFlags<SpellCastSlot>(SpellCastSlot) Extensions.GetFlagDescription<SpellCastSlot>() Extensions.GetFlags<SpellCastSlot>() Extensions.In<SpellCastSlot>(SpellCastSlot[]) Extensions.SetFlags<SpellCastSlot>(SpellCastSlot, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.SpellSlot.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.SpellSlot.html",
    "title": "Enum SpellSlot | Oasys SDK",
    "keywords": "Enum SpellSlot Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum SpellSlot Fields Name Description BasicAttack E Item1 Item2 Item3 Item4 Item5 Item6 NullSpell Passive Q R Recall Summoner1 Summoner2 Trinket W Extension Methods Extensions.ClearFlags<SpellSlot>(SpellSlot) Extensions.GetFlagDescription<SpellSlot>() Extensions.GetFlags<SpellSlot>() Extensions.In<SpellSlot>(SpellSlot[]) Extensions.SetFlags<SpellSlot>(SpellSlot, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.SpellTags.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.SpellTags.html",
    "title": "Enum SpellTags | Oasys SDK",
    "keywords": "Enum SpellTags Properties that a spell can have Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum SpellTags Fields Name Description AoE The spell's effects are AoE AppliesOnHitEffects The spell applies on-hit effects. AttackRangeModifier The spell increases the target's Attack Range AttackSpeedAmplifier The spell increases the target's Attack Speed Blink The spell is a blink CanDetonateMark The spell can detonate a previously left mark. CrowdControl The spell applies CC Damage The spell deals damage DamageAmplifier The spell amplifies the damage dealt by attacks or spells Dash The spell is a dash DefensiveBuff The spell increases health/armor/mr GrantsVision The spell grants vision of the target area. Heal The spell can heal Interruptable The spell can be interrupted LeavesMark The spell leaves a mark than can subsequently be proc'd to deal additional damage MovementSpeedAmplifier The spell increases the target's movement speed RemoveCrowdControl The spell removes all CC from target Shield The spell applies a shield on the target SpellShield The spell applies a spellshield Stasis The spell makes the target enter a stasis state (invulnerable) Teleport The spell teleports the champion Transformation The spell modifies the champion's other spells (nida/jayce/elise ult) Extension Methods Extensions.ClearFlags<SpellTags>(SpellTags) Extensions.GetFlagDescription<SpellTags>() Extensions.GetFlags<SpellTags>() Extensions.In<SpellTags>(SpellTags[]) Extensions.SetFlags<SpellTags>(SpellTags, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.SpellType.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.SpellType.html",
    "title": "Enum SpellType | Oasys SDK",
    "keywords": "Enum SpellType SpellType enumeration Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum SpellType Fields Name Description Activated The spell can be activated, after which it lasts for a while (Vayne R, Olaf R) Passive The spell does nothing else but contain a passive (Vayne W, Mini Gnar W) Position The spell is casted to a position like a skillshot but does undodgeable / random damage. Ezreal E, Ahri R... SkillshotArc The spell is an Arc Skillshot SkillshotCircle The spell is a Circle Skillshot SkillshotCone The spell is a Cone Skillshot SkillshotLine The spell is a Line Skillshot SkillshotMissileArc The spell is an Arc Skillshot (Diana Q) SkillshotMissileCircle The spell is a Circle Skillshot that leaves a Missile SkillshotMissileCone The spell is a Cone Skillshot that leaves a Missile SkillshotMissileLine The spell is a Line Skillshot that creates a Missile SkillshotRing The spell is a Ring Skillshot (Veigar E) Targeted The spell is Targeted TargetedMissile The spell is Targeted and has a missile. Toggled The spell can be toggled on/off Vector The spell must specify a start point and an end point (Viktor E, Rumble R) Extension Methods Extensions.ClearFlags<SpellType>(SpellType) Extensions.GetFlagDescription<SpellType>() Extensions.GetFlags<SpellType>() Extensions.In<SpellType>(SpellType[]) Extensions.SetFlags<SpellType>(SpellType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.TeamFlag.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.TeamFlag.html",
    "title": "Enum TeamFlag | Oasys SDK",
    "keywords": "Enum TeamFlag Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum TeamFlag Fields Name Description All Chaos Neutral Order Unknown Extension Methods Extensions.ClearFlags<TeamFlag>(TeamFlag) Extensions.GetFlagDescription<TeamFlag>() Extensions.GetFlags<TeamFlag>() Extensions.In<TeamFlag>(TeamFlag[]) Extensions.SetFlags<TeamFlag>(TeamFlag, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Enums.GameEnums.TurretType.html": {
    "href": "api/Oasys.Common.Enums.GameEnums.TurretType.html",
    "title": "Enum TurretType | Oasys SDK",
    "keywords": "Enum TurretType The turret type. Namespace : Oasys.Common.Enums.GameEnums Assembly : Oasys.Common.dll Syntax public enum TurretType Fields Name Description TierFour The tier four. TierOne The tier one. TierThree The tier three. TierTwo The tier two. Unknown The unknown tier. Extension Methods Extensions.ClearFlags<TurretType>(TurretType) Extensions.GetFlagDescription<TurretType>() Extensions.GetFlags<TurretType>() Extensions.In<TurretType>(TurretType[]) Extensions.SetFlags<TurretType>(TurretType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.EventsProvider.CoreEvents.AsyncEventHandler.html": {
    "href": "api/Oasys.Common.EventsProvider.CoreEvents.AsyncEventHandler.html",
    "title": "Delegate CoreEvents.AsyncEventHandler | Oasys SDK",
    "keywords": "Delegate CoreEvents.AsyncEventHandler Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate Task AsyncEventHandler(); Returns Type Description System.Threading.Tasks.Task Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.CoreEvents.CoreEventTemplate.html": {
    "href": "api/Oasys.Common.EventsProvider.CoreEvents.CoreEventTemplate.html",
    "title": "Delegate CoreEvents.CoreEventTemplate | Oasys SDK",
    "keywords": "Delegate CoreEvents.CoreEventTemplate Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate Task CoreEventTemplate(); Returns Type Description System.Threading.Tasks.Task Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.CoreEvents.html": {
    "href": "api/Oasys.Common.EventsProvider.CoreEvents.html",
    "title": "Class CoreEvents | Oasys SDK",
    "keywords": "Class CoreEvents Inheritance System.Object CoreEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public class CoreEvents Events OnCoreHarassInputAsync Declaration public static event CoreEvents.AsyncEventHandler OnCoreHarassInputAsync Event Type Type Description CoreEvents.AsyncEventHandler OnCoreInputRegister Declaration public static event CoreEvents.InputRegisterTemplate OnCoreInputRegister Event Type Type Description CoreEvents.InputRegisterTemplate OnCoreLaneclearInputAsync Declaration public static event CoreEvents.AsyncEventHandler OnCoreLaneclearInputAsync Event Type Type Description CoreEvents.AsyncEventHandler OnCoreLasthitInputAsync Declaration public static event CoreEvents.AsyncEventHandler OnCoreLasthitInputAsync Event Type Type Description CoreEvents.AsyncEventHandler OnCoreMainInputAsync Declaration public static event CoreEvents.AsyncEventHandler OnCoreMainInputAsync Event Type Type Description CoreEvents.AsyncEventHandler OnCoreMainInputRelease Declaration public static event CoreEvents.CoreEventTemplate OnCoreMainInputRelease Event Type Type Description CoreEvents.CoreEventTemplate OnCoreMainTick Declaration public static event CoreEvents.CoreEventTemplate OnCoreMainTick Event Type Type Description CoreEvents.CoreEventTemplate OnCoreRender Declaration public static event CoreEvents.RenderEventTemplate OnCoreRender Event Type Type Description CoreEvents.RenderEventTemplate Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.CoreEvents.InputRegisterTemplate.html": {
    "href": "api/Oasys.Common.EventsProvider.CoreEvents.InputRegisterTemplate.html",
    "title": "Delegate CoreEvents.InputRegisterTemplate | Oasys SDK",
    "keywords": "Delegate CoreEvents.InputRegisterTemplate Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate Task InputRegisterTemplate(Keys keyBeingPressed, Keyboard.KeyPressState pressState); Parameters Type Name Description System.Windows.Forms.Keys keyBeingPressed Keyboard.KeyPressState pressState Returns Type Description System.Threading.Tasks.Task Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.CoreEvents.RenderEventTemplate.html": {
    "href": "api/Oasys.Common.EventsProvider.CoreEvents.RenderEventTemplate.html",
    "title": "Delegate CoreEvents.RenderEventTemplate | Oasys SDK",
    "keywords": "Delegate CoreEvents.RenderEventTemplate Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate void RenderEventTemplate(); Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.GameEvents.DashEventTemplate.html": {
    "href": "api/Oasys.Common.EventsProvider.GameEvents.DashEventTemplate.html",
    "title": "Delegate GameEvents.DashEventTemplate | Oasys SDK",
    "keywords": "Delegate GameEvents.DashEventTemplate Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate Task DashEventTemplate(AIBaseClient obj, Vector3 begin, Vector3 end); Parameters Type Name Description AIBaseClient obj SharpDX.Vector3 begin SharpDX.Vector3 end Returns Type Description System.Threading.Tasks.Task Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.GameEvents.GameEventTemplate.html": {
    "href": "api/Oasys.Common.EventsProvider.GameEvents.GameEventTemplate.html",
    "title": "Delegate GameEvents.GameEventTemplate | Oasys SDK",
    "keywords": "Delegate GameEvents.GameEventTemplate Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate Task GameEventTemplate(); Returns Type Description System.Threading.Tasks.Task Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.GameEvents.HeroItemEventTemplate.html": {
    "href": "api/Oasys.Common.EventsProvider.GameEvents.HeroItemEventTemplate.html",
    "title": "Delegate GameEvents.HeroItemEventTemplate | Oasys SDK",
    "keywords": "Delegate GameEvents.HeroItemEventTemplate Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate Task HeroItemEventTemplate(Hero heroUpdatingItem, List<HeroInventory.Item> updatedItemList, HeroInventory.Item updatedItem, float updatedGametime); Parameters Type Name Description Hero heroUpdatingItem System.Collections.Generic.List < HeroInventory.Item > updatedItemList HeroInventory.Item updatedItem System.Single updatedGametime Returns Type Description System.Threading.Tasks.Task Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.GameEvents.html": {
    "href": "api/Oasys.Common.EventsProvider.GameEvents.html",
    "title": "Class GameEvents | Oasys SDK",
    "keywords": "Class GameEvents Inheritance System.Object GameEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public class GameEvents Events OnBuyItem Declaration public static event GameEvents.HeroItemEventTemplate OnBuyItem Event Type Type Description GameEvents.HeroItemEventTemplate OnCreateObject Declaration public static event GameEvents.ObjectManagerCallbackDelegate OnCreateObject Event Type Type Description GameEvents.ObjectManagerCallbackDelegate OnDeleteObject Declaration public static event GameEvents.ObjectManagerCallbackDelegate OnDeleteObject Event Type Type Description GameEvents.ObjectManagerCallbackDelegate OnGameDash Declaration public static event GameEvents.DashEventTemplate OnGameDash Event Type Type Description GameEvents.DashEventTemplate OnGameLoadComplete Declaration public static event GameEvents.GameEventTemplate OnGameLoadComplete Event Type Type Description GameEvents.GameEventTemplate OnGameMatchComplete Declaration public static event GameEvents.GameEventTemplate OnGameMatchComplete Event Type Type Description GameEvents.GameEventTemplate OnGameNewPath Declaration public static event GameEvents.PathChangeEventTemplate OnGameNewPath Event Type Type Description GameEvents.PathChangeEventTemplate OnGameProcessRecall Declaration public static event GameEvents.RecallEventTemplate OnGameProcessRecall Event Type Type Description GameEvents.RecallEventTemplate OnGameProcessSpell Declaration public static event GameEvents.SpellEventTemplate OnGameProcessSpell Event Type Type Description GameEvents.SpellEventTemplate OnItemSlotChanged Declaration public static event GameEvents.HeroItemEventTemplate OnItemSlotChanged Event Type Type Description GameEvents.HeroItemEventTemplate OnItemUpgrade Declaration public static event GameEvents.HeroItemEventTemplate OnItemUpgrade Event Type Type Description GameEvents.HeroItemEventTemplate OnSellItem Declaration public static event GameEvents.HeroItemEventTemplate OnSellItem Event Type Type Description GameEvents.HeroItemEventTemplate Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.GameEvents.ObjectManagerCallbackDelegate.html": {
    "href": "api/Oasys.Common.EventsProvider.GameEvents.ObjectManagerCallbackDelegate.html",
    "title": "Delegate GameEvents.ObjectManagerCallbackDelegate | Oasys SDK",
    "keywords": "Delegate GameEvents.ObjectManagerCallbackDelegate Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate Task ObjectManagerCallbackDelegate(List<AIBaseClient> callbackObjectList, AIBaseClient callbackObject, float callbackGameTime); Parameters Type Name Description System.Collections.Generic.List < AIBaseClient > callbackObjectList AIBaseClient callbackObject System.Single callbackGameTime Returns Type Description System.Threading.Tasks.Task Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.GameEvents.PathChangeEventTemplate.html": {
    "href": "api/Oasys.Common.EventsProvider.GameEvents.PathChangeEventTemplate.html",
    "title": "Delegate GameEvents.PathChangeEventTemplate | Oasys SDK",
    "keywords": "Delegate GameEvents.PathChangeEventTemplate Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate Task PathChangeEventTemplate(AIBaseClient obj, IEnumerable<Vector3> oldPath, IEnumerable<Vector3> newPath); Parameters Type Name Description AIBaseClient obj System.Collections.Generic.IEnumerable < SharpDX.Vector3 > oldPath System.Collections.Generic.IEnumerable < SharpDX.Vector3 > newPath Returns Type Description System.Threading.Tasks.Task Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.GameEvents.RecallEventTemplate.html": {
    "href": "api/Oasys.Common.EventsProvider.GameEvents.RecallEventTemplate.html",
    "title": "Delegate GameEvents.RecallEventTemplate | Oasys SDK",
    "keywords": "Delegate GameEvents.RecallEventTemplate Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate Task RecallEventTemplate(AIHeroClient heroProcessingRecall); Parameters Type Name Description AIHeroClient heroProcessingRecall Returns Type Description System.Threading.Tasks.Task Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.GameEvents.SpellEventTemplate.html": {
    "href": "api/Oasys.Common.EventsProvider.GameEvents.SpellEventTemplate.html",
    "title": "Delegate GameEvents.SpellEventTemplate | Oasys SDK",
    "keywords": "Delegate GameEvents.SpellEventTemplate Namespace : Oasys.Common.EventsProvider Assembly : Oasys.Common.dll Syntax public delegate Task SpellEventTemplate(AIBaseClient objectProcessingSpell, SpellActiveEntry processingSpellEntry); Parameters Type Name Description AIBaseClient objectProcessingSpell SpellActiveEntry processingSpellEntry Returns Type Description System.Threading.Tasks.Task Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.EventsProvider.html": {
    "href": "api/Oasys.Common.EventsProvider.html",
    "title": "Namespace Oasys.Common.EventsProvider | Oasys SDK",
    "keywords": "Namespace Oasys.Common.EventsProvider Classes CoreEvents GameEvents Delegates CoreEvents.AsyncEventHandler CoreEvents.CoreEventTemplate CoreEvents.InputRegisterTemplate CoreEvents.RenderEventTemplate GameEvents.DashEventTemplate GameEvents.GameEventTemplate GameEvents.HeroItemEventTemplate GameEvents.ObjectManagerCallbackDelegate GameEvents.PathChangeEventTemplate GameEvents.RecallEventTemplate GameEvents.SpellEventTemplate"
  },
  "api/Oasys.Common.Extensions.Extensions.html": {
    "href": "api/Oasys.Common.Extensions.Extensions.html",
    "title": "Class Extensions | Oasys SDK",
    "keywords": "Class Extensions Enumerable Extensions. Inheritance System.Object Extensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Extensions Assembly : Oasys.Common.dll Syntax public static class Extensions Methods AngleBetween(Vector2, Vector2) Returns the angle between two vectors. Declaration public static float AngleBetween(this Vector2 vector2, Vector2 toVector2) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 SharpDX.Vector2 toVector2 SharpDX Vector2 Returns Type Description System.Single Angle between two vectors in float-units AngleBetween(Vector2, Vector3) Returns the angle between two vectors. Declaration public static float AngleBetween(this Vector2 vector2, Vector3 toVector3) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 SharpDX.Vector3 toVector3 SharpDX Vector3 Returns Type Description System.Single Angle between two vectors in float-units AngleBetween(Vector3, Vector2) Returns the angle between two vectors. Declaration public static float AngleBetween(this Vector3 vector3, Vector2 toVector2) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 SharpDX.Vector2 toVector2 SharpDX Vector2 Returns Type Description System.Single Angle between two vectors in float-units AngleBetween(Vector3, Vector3) Returns the angle between two vectors. Declaration public static float AngleBetween(this Vector3 vector3, Vector3 toVector3) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 SharpDX.Vector3 toVector3 SharpDX Vector3 Returns Type Description System.Single Angle between two vectors in float-units CircleCircleIntersection(Vector2, Vector2, Single, Single) Returns the two intersection points between two circles. Declaration public static Vector2[] CircleCircleIntersection(this Vector2 center1, Vector2 center2, float radius1, float radius2) Parameters Type Name Description SharpDX.Vector2 center1 Center of Circle 1 SharpDX.Vector2 center2 Center of Circle 2 System.Single radius1 Circle 1 Radius System.Single radius2 Circle 2 Radius Returns Type Description SharpDX.Vector2 [] Array of SharpDX.Vector2 that contains the intersection points. ClearFlags<T>(T, T) Clears all given flags from a specific struct source. Declaration public static T ClearFlags<T>(this T value, T flags) where T : struct Parameters Type Name Description T value The enumeration T flags Flags to be cleared Returns Type Description T Enumeration with Flag Attributes (struct) Type Parameters Name Description T Flag with Attributes type. Closest(Vector2, IEnumerable<Vector2>) Seeks for the closest Vector2 to the extended Vector2. Declaration public static Vector2 Closest(this Vector2 vector2, IEnumerable<Vector2> array) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 System.Collections.Generic.IEnumerable < SharpDX.Vector2 > array Vector2 Collection Returns Type Description SharpDX.Vector2 Closest Vector2 Closest(Vector2, IEnumerable<Vector3>) Seeks for the closest Vector3 to the extended Vector2. Declaration public static Vector3 Closest(this Vector2 vector2, IEnumerable<Vector3> array) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 System.Collections.Generic.IEnumerable < SharpDX.Vector3 > array Vector3 Collection Returns Type Description SharpDX.Vector3 Closest Vector3 Closest(Vector3, IEnumerable<Vector2>) Seeks for the closest Vector2 to the extended Vector3. Declaration public static Vector2 Closest(this Vector3 vector3, IEnumerable<Vector2> array) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 System.Collections.Generic.IEnumerable < SharpDX.Vector2 > array Vector2 Collection Returns Type Description SharpDX.Vector2 Closest Vector2 Closest(Vector3, IEnumerable<Vector3>) Seeks for the closest Vector3 to the extended Vector3. Declaration public static Vector3 Closest(this Vector3 vector3, IEnumerable<Vector3> array) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 System.Collections.Generic.IEnumerable < SharpDX.Vector3 > array Vector3 Collection Returns Type Description SharpDX.Vector3 Closest Vector3 CombineFlags<T>(IEnumerable<T>) Combines flags from an enumerable list to a new given struct source. Declaration public static T CombineFlags<T>(this IEnumerable<T> flags) where T : struct Parameters Type Name Description System.Collections.Generic.IEnumerable <T> flags The flags Returns Type Description T Enumeration with Flag Attributes (struct) Type Parameters Name Description T Flag with Attributes type. CrossProduct(Vector2, Vector2) Returns the cross product Z value. Declaration public static float CrossProduct(this Vector2 self, Vector2 other) Parameters Type Name Description SharpDX.Vector2 self The self Vector2. SharpDX.Vector2 other The other Vector2. Returns Type Description System.Single The System.Single cross product. Distance(GameObjectBase, GameObjectBase) Gets the distance between two GameObjects Declaration public static float Distance(this GameObjectBase source, GameObjectBase target) Parameters Type Name Description GameObjectBase source The Source GameObjectBase target The Target Returns Type Description System.Single The distance between the two objects Distance(GameObjectBase, Vector2) Gets the distance between a Oasys.Common.GameObject and a SharpDX.Vector2 Declaration public static float Distance(this GameObjectBase source, Vector2 position) Parameters Type Name Description GameObjectBase source The Source SharpDX.Vector2 position The Position Returns Type Description System.Single The distance between a Oasys.Common.GameObject and a SharpDX.Vector2 Distance(GameObjectBase, Vector3) Gets the distance between a Oasys.Common.GameObject and a SharpDX.Vector3 Declaration public static float Distance(this GameObjectBase source, Vector3 position) Parameters Type Name Description GameObjectBase source The Source SharpDX.Vector3 position The Position Returns Type Description System.Single The distance between a Oasys.Common.GameObject and a SharpDX.Vector3 Distance(Vector2, Vector2) Calculates the distance between the extended Vector2 and a Vector2. Declaration public static float Distance(this Vector2 vector2, Vector2 toVector2) Parameters Type Name Description SharpDX.Vector2 vector2 SharpDX Vector2 (From) SharpDX.Vector2 toVector2 SharpDX Vector2 (To) Returns Type Description System.Single Float Units Distance(Vector2, Vector2, Vector2, Boolean) Returns the distance to the line segment. Declaration public static float Distance(this Vector2 point, Vector2 segmentStart, Vector2 segmentEnd, bool onlyIfOnSegment = false) Parameters Type Name Description SharpDX.Vector2 point Extended SharpDX Vector2 SharpDX.Vector2 segmentStart Vector2 Segment Start SharpDX.Vector2 segmentEnd Vector2 Segment End System.Boolean onlyIfOnSegment Only if Segment Returns Type Description System.Single The distance between the point and the segment. Distance(Vector2, Vector3) Calculates the distance between the extended Vector2 and a Vector3. Declaration public static float Distance(this Vector2 vector2, Vector3 toVector3) Parameters Type Name Description SharpDX.Vector2 vector2 SharpDX Vector2 (From) SharpDX.Vector3 toVector3 SharpDX Vector3 (To) Returns Type Description System.Single Float Units Distance(Vector3, Vector2) Calculates the distance between the extended Vector3 and a Vector3. Declaration public static float Distance(this Vector3 vector3, Vector2 toVector2) Parameters Type Name Description SharpDX.Vector3 vector3 SharpDX Vector3 (From) SharpDX.Vector2 toVector2 SharpDX Vector2 (To) Returns Type Description System.Single Float Units Distance(Vector3, Vector3) Calculates the distance between the extended Vector3 and a Vector3. Declaration public static float Distance(this Vector3 vector3, Vector3 toVector3) Parameters Type Name Description SharpDX.Vector3 vector3 SharpDX Vector3 (From) SharpDX.Vector3 toVector3 SharpDX Vector3 (To) Returns Type Description System.Single Float Units DistanceSquared(GameObjectBase, GameObjectBase) Gets the distance squared between two GameObjects Declaration public static float DistanceSquared(this GameObjectBase source, GameObjectBase target) Parameters Type Name Description GameObjectBase source The Source GameObjectBase target The Target Returns Type Description System.Single The squared distance between the two objects DistanceSquared(GameObjectBase, Vector2) Gets the distance squared between a Oasys.Common.GameObject and a SharpDX.Vector2 Declaration public static float DistanceSquared(this GameObjectBase source, Vector2 position) Parameters Type Name Description GameObjectBase source The Source SharpDX.Vector2 position The Position Returns Type Description System.Single The distance squared between a Oasys.Common.GameObject and a SharpDX.Vector2 DistanceSquared(GameObjectBase, Vector3) Gets the distance squared between a Oasys.Common.GameObject and a SharpDX.Vector3 Declaration public static float DistanceSquared(this GameObjectBase source, Vector3 position) Parameters Type Name Description GameObjectBase source The Source SharpDX.Vector3 position The Position Returns Type Description System.Single The distance squared between a Oasys.Common.GameObject and a SharpDX.Vector3 DistanceSquared(Vector2, Vector2) Calculates the squared distance between two vectors. Declaration public static float DistanceSquared(this Vector2 vector2, Vector2 toVector2) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 SharpDX.Vector2 toVector2 SharpDX Vector2 Returns Type Description System.Single The squared distance between the two vectors. DistanceSquared(Vector2, Vector2, Vector2, Boolean) Returns the squared distance to the line segment. Declaration public static float DistanceSquared(this Vector2 point, Vector2 segmentStart, Vector2 segmentEnd, bool onlyIfOnSegment = false) Parameters Type Name Description SharpDX.Vector2 point Extended SharpDX Vector2 SharpDX.Vector2 segmentStart Vector2 Segment Start SharpDX.Vector2 segmentEnd Vector2 Segment End System.Boolean onlyIfOnSegment Only if Segment Returns Type Description System.Single The squared distance between the point and the segment. DistanceSquared(Vector2, Vector3) Calculates the squared distance between two vectors. Declaration public static float DistanceSquared(this Vector2 vector2, Vector3 toVector3) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 SharpDX.Vector3 toVector3 SharpDX Vector3 Returns Type Description System.Single The squared distance between the two vectors. DistanceSquared(Vector3, Vector2) Calculates the squared distance between two vectors. Declaration public static float DistanceSquared(this Vector3 vector3, Vector2 toVector2) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 SharpDX.Vector2 toVector2 SharpDX Vector2 Returns Type Description System.Single The squared distance between the two vectors. DistanceSquared(Vector3, Vector3) Calculates the squared distance between two vectors. Declaration public static float DistanceSquared(this Vector3 vector3, Vector3 toVector3) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 SharpDX.Vector3 toVector3 SharpDX Vector3 Returns Type Description System.Single The squared distance between the two vectors. DistanceToPlayer(GameObjectBase) Gets the distance between Obj_AI_Base source and Player Declaration public static float DistanceToPlayer(this GameObjectBase source) Parameters Type Name Description GameObjectBase source The Source Returns Type Description System.Single The distance between a and the Player DistanceToPlayer(Vector2) Gets the distance between the point and the Player Declaration public static float DistanceToPlayer(this Vector2 position) Parameters Type Name Description SharpDX.Vector2 position The Position Returns Type Description System.Single The distance between the position and the Player DistanceToPlayer(Vector3) Gets the distance between the point and the Player Declaration public static float DistanceToPlayer(this Vector3 position) Parameters Type Name Description SharpDX.Vector3 position The Position Returns Type Description System.Single The distance between the position and the Player Extend(Vector2, Vector2, Single) Extends a Vector2 to another Vector2. Declaration public static Vector2 Extend(this Vector2 vector2, Vector2 toVector2, float distance) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 (From) SharpDX.Vector2 toVector2 SharpDX Vector2 (To) System.Single distance Distance (float units) Returns Type Description SharpDX.Vector2 Extended Vector2 Extend(Vector2, Vector3, Single) Extends a Vector2 to a Vector3. Declaration public static Vector2 Extend(this Vector2 vector2, Vector3 toVector3, float distance) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 (From) SharpDX.Vector3 toVector3 SharpDX Vector3 (To) System.Single distance Distance (float units) Returns Type Description SharpDX.Vector2 Extended Vector2 Extend(Vector3, Vector2, Single) Extends a Vector3 to a Vector2. Declaration public static Vector3 Extend(this Vector3 vector3, Vector2 toVector2, float distance) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 (From) SharpDX.Vector2 toVector2 SharpDX Vector2 (To) System.Single distance Distance (float units) Returns Type Description SharpDX.Vector3 Extended Vector3 Extend(Vector3, Vector3, Single) Extends a Vector3 to another Vector3. Declaration public static Vector3 Extend(this Vector3 vector3, Vector3 toVector3, float distance) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 (From) SharpDX.Vector3 toVector3 SharpDX Vector3 (To) System.Single distance Distance (float units) Returns Type Description SharpDX.Vector3 Extended Vector3 Find<TSource>(IEnumerable<TSource>, Predicate<TSource>) Finds match in a container of values. Declaration public static TSource Find<TSource>(this IEnumerable<TSource> source, Predicate<TSource> match) Parameters Type Name Description System.Collections.Generic.IEnumerable <TSource> source List of all the values System.Predicate <TSource> match Method that determines whether the specified object meets the criteria Returns Type Description TSource Matches based on the predicate Type Parameters Name Description TSource Given source ForEach<T>(IEnumerable<T>, Action<T>) Does an action over a list of types. Declaration public static void ForEach<T>(this IEnumerable<T> list, Action<T> action) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> list List of values System.Action <T> action Function to call foreach value Type Parameters Name Description T Type of value GetCombinations(IReadOnlyCollection<Vector2>) Returns all the subgroup combinations that can be made from a group Declaration public static IEnumerable<List<Vector2>> GetCombinations(this IReadOnlyCollection<Vector2> allValues) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection < SharpDX.Vector2 > allValues List of SharpDX.Vector2 Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.List < SharpDX.Vector2 >> Double list of vectors. GetFlagDescription<T>(T) Gets a flag attribute description. Declaration public static string GetFlagDescription<T>(this T value) where T : struct Parameters Type Name Description T value The enumeration Returns Type Description System.String Enumeration with Flag Attributes (struct) Type Parameters Name Description T Flag with Attributes type. GetFlags<T>(T) Retrieves all of the flags from a specific struct source. Declaration public static IEnumerable<T> GetFlags<T>(this T value) where T : struct Parameters Type Name Description T value The enumeration Returns Type Description System.Collections.Generic.IEnumerable <T> Enumeration with Flag Attributes (struct) Type Parameters Name Description T Flag with Attributes type. GetPathLength(List<Vector2>) Gets the total distance of a list of vectors. Declaration public static float GetPathLength(this List<Vector2> path) Parameters Type Name Description System.Collections.Generic.List < SharpDX.Vector2 > path The path Returns Type Description System.Single Total distance of the path GetPathLength(List<Vector3>) Gets the total distance of a list of vectors. Declaration public static float GetPathLength(this List<Vector3> path) Parameters Type Name Description System.Collections.Generic.List < SharpDX.Vector3 > path The path Returns Type Description System.Single Total distance of the path GetRecallTime(AIHeroClient) Returns the recall time duration for a specified AIHeroClient Declaration public static int GetRecallTime(this AIHeroClient hero) Parameters Type Name Description AIHeroClient hero The Hero Returns Type Description System.Int32 Recall Time Duration GetRecallTime(String) Returns the recall time duration for a specific recall type by name. Declaration public static int GetRecallTime(string recallName) Parameters Type Name Description System.String recallName Recall type name Returns Type Description System.Int32 Recall Time Duration GetTurretType(Turret) Gets the turret tier type. Declaration public static TurretType GetTurretType(this Turret turret) Parameters Type Name Description Turret turret The turret. Returns Type Description TurretType The TurretType . In<T>(T, T[]) Determines if a list contains any of the values. Declaration public static bool In<T>(this T source, params T[] list) Parameters Type Name Description T source Container of objects T[] list Any object that should be in the container Returns Type Description System.Boolean If the container contains any values. Type Parameters Name Description T Type of object to look for Intersection(Vector2, Vector2, Vector2, Vector2) Intersects two line segments. Declaration public static IntersectionResult Intersection(this Vector2 lineSegment1Start, Vector2 lineSegment1End, Vector2 lineSegment2Start, Vector2 lineSegment2End) Parameters Type Name Description SharpDX.Vector2 lineSegment1Start Line Segment 1 (Start) SharpDX.Vector2 lineSegment1End Line Segment 1 (End) SharpDX.Vector2 lineSegment2Start Line Segment 2 (Start)> SharpDX.Vector2 lineSegment2End Line Segment 2 (End) Returns Type Description IntersectionResult The intersection result, IntersectionResult IsBothFacing(GameObjectBase, GameObjectBase) Calculates if the source and the target are facing each-other. Declaration public static bool IsBothFacing(this GameObjectBase source, GameObjectBase target) Parameters Type Name Description GameObjectBase source Extended source GameObjectBase target The Target Returns Type Description System.Boolean Returns if the source and target are facing each-other (boolean) IsFacing(GameObjectBase, GameObjectBase) Calculates if the source is facing the target. Declaration public static bool IsFacing(this GameObjectBase source, GameObjectBase target) Parameters Type Name Description GameObjectBase source Extended source GameObjectBase target The Target Returns Type Description System.Boolean Returns if the source is facing the target (boolean) IsMelee(GameObjectBase) Return whether the specific unit is melee Declaration public static bool IsMelee(this GameObjectBase unit) Parameters Type Name Description GameObjectBase unit Extended unit Returns Type Description System.Boolean Returns if the unit is melee IsOnScreen(Vector2, Single) Declaration public static bool IsOnScreen(this Vector2 vector2, float radius = 0F) Parameters Type Name Description SharpDX.Vector2 vector2 System.Single radius Returns Type Description System.Boolean IsOnScreen(Vector3, Single) Declaration public static bool IsOnScreen(this Vector3 vector3, float radius = 0F) Parameters Type Name Description SharpDX.Vector3 vector3 System.Single radius Returns Type Description System.Boolean IsOrthogonal(Vector2, Vector2) Returns if the angle is orthogonal. Declaration public static bool IsOrthogonal(this Vector2 vector2, Vector2 toVector2) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 SharpDX.Vector2 toVector2 SharpDX Vector2 Returns Type Description System.Boolean The System.Boolean . IsOrthogonal(Vector2, Vector3) Returns if the angle is orthogonal. Declaration public static bool IsOrthogonal(this Vector2 vector2, Vector3 toVector3) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 SharpDX.Vector3 toVector3 SharpDX Vector3 Returns Type Description System.Boolean The System.Boolean . IsOrthogonal(Vector3, Vector2) Returns if the angle is orthogonal. Declaration public static bool IsOrthogonal(Vector3 vector3, Vector2 toVector2) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 SharpDX.Vector2 toVector2 SharpDX Vector2 Returns Type Description System.Boolean Returns if the angle is orthogonal IsOrthogonal(Vector3, Vector3) Returns if the angle is orthogonal. Declaration public static bool IsOrthogonal(Vector3 vector3, Vector3 toVector3) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 SharpDX.Vector3 toVector3 SharpDX Vector3 Returns Type Description System.Boolean Returns if the angle is orthogonal IsRecalling(AIHeroClient) Returns if the unit is recalling. Declaration public static bool IsRecalling(this AIHeroClient unit) Parameters Type Name Description AIHeroClient unit Extended unit Returns Type Description System.Boolean Returns if the unit is recalling (boolean) IsUnderRectangle(Vector2, Single, Single, Single, Single) Returns true if the point is under the rectangle Declaration public static bool IsUnderRectangle(this Vector2 point, float x, float y, float width, float height) Parameters Type Name Description SharpDX.Vector2 point Extended SharpDX Vector2 System.Single x Rectangle X-axis System.Single y Rectangle Y-axis System.Single width Rectangle width System.Single height Rectangle height Returns Type Description System.Boolean The System.Boolean . IsValid(Vector2) Checks for if the extended Vector2 is valid. Declaration public static bool IsValid(this Vector2 vector2) Parameters Type Name Description SharpDX.Vector2 vector2 SharpDX Vector2 Returns Type Description System.Boolean The System.Boolean . IsValid(Vector3) Checks for if the extended Vector3 is valid. Declaration public static bool IsValid(this Vector3 vector3) Parameters Type Name Description SharpDX.Vector3 vector3 SharpDX Vector3 Returns Type Description System.Boolean The System.Boolean . IsValidTarget(GameObjectBase, Single, Boolean, Vector3) Checks if the target unit is valid. Declaration public static bool IsValidTarget(this GameObjectBase unit, float range = 3.40282347E+38F, bool checkTeam = true, Vector3 from = default(Vector3)) Parameters Type Name Description GameObjectBase unit The Unit System.Single range The Range System.Boolean checkTeam Checks if the target is an enemy from the Player's side SharpDX.Vector3 from Check From Returns Type Description System.Boolean The System.Boolean . Log(Exception) Logs an exception to the console and a file. Declaration public static void Log(this Exception exception) Parameters Type Name Description System.Exception exception Exception to log. Magnitude(Vector2) Returns the calculated magnitude of the given Vector2. Declaration public static float Magnitude(this Vector2 vector2) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 Returns Type Description System.Single Magnitude in float-units Magnitude(Vector3) Returns the calculated magnitude of the given Vector3. Declaration public static float Magnitude(this Vector3 vector3) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 Returns Type Description System.Single Magnitude in float-units MaxOrDefault<T, TR>(IEnumerable<T>, Func<T, TR>) Gets the maximum value of an IEnumerable by the comparer, or returns the default. Declaration public static T MaxOrDefault<T, TR>(this IEnumerable<T> container, Func<T, TR> comparer) where TR : IComparable Parameters Type Name Description System.Collections.Generic.IEnumerable <T> container Container of values to search through System.Func <T, TR> comparer Function to compare values Returns Type Description T The maximums of the objects Type Parameters Name Description T Type of object TR Type result of comparer MinOrDefault<T, TR>(IEnumerable<T>, Func<T, TR>) Gets the minimum value of an IEnumerable by the comparer, or returns the default. Declaration public static T MinOrDefault<T, TR>(this IEnumerable<T> container, Func<T, TR> comparer) where TR : IComparable Parameters Type Name Description System.Collections.Generic.IEnumerable <T> container Container of values to search through System.Func <T, TR> comparer Function to compare the values Returns Type Description T The minimum of the objects Type Parameters Name Description T Type of object TR Type result of comparer Normalized(Vector2) Normalizes a Vector2. Declaration public static Vector2 Normalized(this Vector2 vector2) Parameters Type Name Description SharpDX.Vector2 vector2 SharpDX Vector2 Returns Type Description SharpDX.Vector2 Normalized Vector2 Normalized(Vector3) Normalizes a Vector3. Declaration public static Vector3 Normalized(this Vector3 vector3) Parameters Type Name Description SharpDX.Vector3 vector3 SharpDX Vector3 Returns Type Description SharpDX.Vector3 Normalized Vector3 PathLength(List<Vector2>) Returns the total distance of a path. Declaration public static float PathLength(this List<Vector2> path) Parameters Type Name Description System.Collections.Generic.List < SharpDX.Vector2 > path The path. Returns Type Description System.Single The System.Single . PathLength(List<Vector3>) Returns the total distance of a path. Declaration public static float PathLength(this List<Vector3> path) Parameters Type Name Description System.Collections.Generic.List < SharpDX.Vector3 > path The path. Returns Type Description System.Single The System.Single . Perpendicular(Vector2, Int32) Returns the Perpendicular Vector2 to the Extended Vector2. Declaration public static Vector2 Perpendicular(this Vector2 vector2, int offset = 0) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 System.Int32 offset Axis Offset (0 = X, 1 = Y) Returns Type Description SharpDX.Vector2 Perpendicular Vector2 Perpendicular(Vector3, Int32) Returns the Perpendicular Vector3 to the Extended Vector3. Declaration public static Vector3 Perpendicular(this Vector3 vector3, int offset = 0) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector3 System.Int32 offset Axis Offset (0 = X, 1 = Y) Returns Type Description SharpDX.Vector3 Perpendicular Vector3 Polar(Vector2) Returns the polar for vector angle (in Degrees). Declaration public static float Polar(this Vector2 vector2) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 Returns Type Description System.Single Polar for Vector Angle (Degrees) Polar(Vector3) Returns the polar for vector angle (in Degrees). Declaration public static float Polar(this Vector3 vector3) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector2 Returns Type Description System.Single Polar for Vector Angle (Degrees) ProjectOn(Vector2, Vector2, Vector2) Returns the projection of the Vector2 on the segment. Declaration public static ProjectionInfo ProjectOn(this Vector2 point, Vector2 segmentStart, Vector2 segmentEnd) Parameters Type Name Description SharpDX.Vector2 point The Point SharpDX.Vector2 segmentStart Start of Segment SharpDX.Vector2 segmentEnd End of Segment Returns Type Description ProjectionInfo ProjectionInfo containing the projection. ProjectOn(Vector3, Vector3, Vector3) Converts the points to 2D, then returns the projection of the Vector2 on the segment. Declaration public static ProjectionInfo ProjectOn(this Vector3 point, Vector3 segmentStart, Vector3 segmentEnd) Parameters Type Name Description SharpDX.Vector3 point The point SharpDX.Vector3 segmentStart Start of Segment SharpDX.Vector3 segmentEnd End of Segment Returns Type Description ProjectionInfo ProjectionInfo containing the projection. Rotated(Vector2, Single) Rotates the Vector2 to a set angle. Declaration public static Vector2 Rotated(this Vector2 vector2, float angle) Parameters Type Name Description SharpDX.Vector2 vector2 Extended SharpDX Vector2 System.Single angle Angle (in radians) Returns Type Description SharpDX.Vector2 Rotated Vector2 Rotated(Vector3, Single) Rotates the Vector3 to a set angle. Declaration public static Vector3 Rotated(this Vector3 vector3, float angle) Parameters Type Name Description SharpDX.Vector3 vector3 Extended SharpDX Vector2 System.Single angle Angle (in radians) Returns Type Description SharpDX.Vector3 Rotated Vector3 SetFlags<T>(T, T, Boolean) Sets the given flags to the struct source, given struct must be an enumeration with flag attributes. Declaration public static T SetFlags<T>(this T value, T flags, bool status = true) where T : struct Parameters Type Name Description T value The enumeration T flags The flags to be set System.Boolean status Turn flags on or off Returns Type Description T Enumeration with Flag Attributes (struct) Type Parameters Name Description T Flag with Attributes type. Shorten(Vector2, Vector2, Single) Shortens the specified vector. Declaration public static Vector2 Shorten(this Vector2 v, Vector2 to, float distance) Parameters Type Name Description SharpDX.Vector2 v The vector. SharpDX.Vector2 to The vector to shorten from. System.Single distance The distance. Returns Type Description SharpDX.Vector2 Shorten(Vector3, Vector3, Single) Shortens the specified vector. Declaration public static Vector3 Shorten(this Vector3 v, Vector3 to, float distance) Parameters Type Name Description SharpDX.Vector3 v The vector. SharpDX.Vector3 to The vector to shorten from. System.Single distance The distance. Returns Type Description SharpDX.Vector3 StandardDeviation(IEnumerable<Int32>) Standard Deviation of the values list. Declaration public static double StandardDeviation(this IEnumerable<int> values) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Int32 > values Values list Returns Type Description System.Double Standard Deviation To<T>(IConvertible) Converts an item to another Type Declaration public static T To<T>(this IConvertible object) Parameters Type Name Description System.IConvertible object The object to convert to Returns Type Description T The converted object Type Parameters Name Description T Type to convert to ToVector2(Vector3) Transforms an extended Vector3 into a Vector2. Declaration public static Vector2 ToVector2(this Vector3 vector3) Parameters Type Name Description SharpDX.Vector3 vector3 SharpDX Vector3 Returns Type Description SharpDX.Vector2 The SharpDX.Vector2 ToVector2(List<Vector3>) Transforms an extended Vector3 List into a Vector2 List. Declaration public static List<Vector2> ToVector2(this List<Vector3> path) Parameters Type Name Description System.Collections.Generic.List < SharpDX.Vector3 > path The path. Returns Type Description System.Collections.Generic.List < SharpDX.Vector2 > Vector2 List ToVector3(Vector2, Single) Transforms an extended Vector2 into a Vector3. Declaration public static Vector3 ToVector3(this Vector2 vector2, float z = 0F) Parameters Type Name Description SharpDX.Vector2 vector2 SharpDX Vector2 System.Single z Float Z-axis (default = 0f) Returns Type Description SharpDX.Vector3 The SharpDX.Vector3 ToVector4(Vector2, Single, Single) Transforms an extended Vector2 into a Vector4. Declaration public static Vector4 ToVector4(this Vector2 vector2, float z = 0F, float w = 1F) Parameters Type Name Description SharpDX.Vector2 vector2 SharpDX Vector2 System.Single z Float Z-axis (default = 0f) System.Single w Float W-axis (default = 0f) Returns Type Description SharpDX.Vector4 The SharpDX.Vector4 ToVector4(Vector3, Single) Transforms an extended Vector3 into a Vector4. Declaration public static Vector4 ToVector4(this Vector3 vector3, float w = 1F) Parameters Type Name Description SharpDX.Vector3 vector3 SharpDX Vector3 System.Single w Float W-axis (default = 0f) Returns Type Description SharpDX.Vector4 The SharpDX.Vector4 ToVector4(List<Vector2>) Transforms an extended Vector2 List into a Vector4 List. Declaration public static List<Vector4> ToVector4(this List<Vector2> path) Parameters Type Name Description System.Collections.Generic.List < SharpDX.Vector2 > path The path. Returns Type Description System.Collections.Generic.List < SharpDX.Vector4 > Vector4 List ToVector4(List<Vector3>) Transforms an extended Vector3 List into a Vector4 List. Declaration public static List<Vector4> ToVector4(this List<Vector3> path) Parameters Type Name Description System.Collections.Generic.List < SharpDX.Vector3 > path The path. Returns Type Description System.Collections.Generic.List < SharpDX.Vector4 > Vector4 List ToW2S(Vector3) Convert vector3 position to world to screen position as vector2 Declaration public static Vector2 ToW2S(this Vector3 sourceVector3) Parameters Type Name Description SharpDX.Vector3 sourceVector3 Vector3 position Returns Type Description SharpDX.Vector2 World to screen position as vector2 VectorMovementCollision(Vector2, Vector2, Single, Vector2, Single, Single) Calculates movement collision between two vectors points. Declaration public static MovementCollisionInfo VectorMovementCollision(this Vector2 pointStartA, Vector2 pointEndA, float pointVelocityA, Vector2 pointB, float pointVelocityB, float delay = 0F) Parameters Type Name Description SharpDX.Vector2 pointStartA Point A Start. SharpDX.Vector2 pointEndA Point A End. System.Single pointVelocityA Point A Velocity. SharpDX.Vector2 pointB Point B. System.Single pointVelocityB Point B Velocity. System.Single delay Additional Delay. Returns Type Description MovementCollisionInfo The MovementCollisionInfo . VectorMovementCollision(Vector2[], Single, Vector2, Single, Single) Calculates movement collision between two vectors points. Declaration public static MovementCollisionInfo VectorMovementCollision(this Vector2[] pointA, float pointVelocityA, Vector2 pointB, float pointVelocityB, float delay = 0F) Parameters Type Name Description SharpDX.Vector2 [] pointA Point A. System.Single pointVelocityA Point A Velocity. SharpDX.Vector2 pointB Point B. System.Single pointVelocityB Point B Velocity. System.Single delay Additional Delay. Returns Type Description MovementCollisionInfo The MovementCollisionInfo ."
  },
  "api/Oasys.Common.Extensions.html": {
    "href": "api/Oasys.Common.Extensions.html",
    "title": "Namespace Oasys.Common.Extensions | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Extensions Classes Extensions Enumerable Extensions. Structs IntersectionResult Holds info for the Intersection(Vector2, Vector2, Vector2, Vector2) method. MovementCollisionInfo Holds info for the VectorMovementCollision method. ProjectionInfo Holds info for the ProjectOn method."
  },
  "api/Oasys.Common.Extensions.IntersectionResult.html": {
    "href": "api/Oasys.Common.Extensions.IntersectionResult.html",
    "title": "Struct IntersectionResult | Oasys SDK",
    "keywords": "Struct IntersectionResult Holds info for the Intersection(Vector2, Vector2, Vector2, Vector2) method. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.Extensions Assembly : Oasys.Common.dll Syntax public struct IntersectionResult Constructors IntersectionResult(Boolean, Vector2) Initializes a new instance of the IntersectionResult struct. Constructor for Intersection Result Declaration public IntersectionResult(bool intersects = false, Vector2 point = default(Vector2)) Parameters Type Name Description System.Boolean intersects Intersection of input SharpDX.Vector2 point Intersection Point Fields Intersects Returns if both of the points intersect. Declaration public bool Intersects Field Value Type Description System.Boolean Point Intersection point Declaration public Vector2 Point Field Value Type Description SharpDX.Vector2 Extension Methods Extensions.ClearFlags<T>(T, T) Extensions.GetFlagDescription<T>(T) Extensions.GetFlags<T>(T) Extensions.In<T>(T, T[]) Extensions.SetFlags<T>(T, T, Boolean)"
  },
  "api/Oasys.Common.Extensions.MovementCollisionInfo.html": {
    "href": "api/Oasys.Common.Extensions.MovementCollisionInfo.html",
    "title": "Struct MovementCollisionInfo | Oasys SDK",
    "keywords": "Struct MovementCollisionInfo Holds info for the VectorMovementCollision method. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.Extensions Assembly : Oasys.Common.dll Syntax public struct MovementCollisionInfo Fields CollisionPosition Collision position. Declaration public Vector2 CollisionPosition Field Value Type Description SharpDX.Vector2 CollisionTime Collision Time from calculation. Declaration public float CollisionTime Field Value Type Description System.Single Properties Item[Int32] Information accessor. Declaration public readonly object this[int i] { get; } Parameters Type Name Description System.Int32 i The Indexer. Property Value Type Description System.Object The System.Object . Extension Methods Extensions.ClearFlags<T>(T, T) Extensions.GetFlagDescription<T>(T) Extensions.GetFlags<T>(T) Extensions.In<T>(T, T[]) Extensions.SetFlags<T>(T, T, Boolean)"
  },
  "api/Oasys.Common.Extensions.ProjectionInfo.html": {
    "href": "api/Oasys.Common.Extensions.ProjectionInfo.html",
    "title": "Struct ProjectionInfo | Oasys SDK",
    "keywords": "Struct ProjectionInfo Holds info for the ProjectOn method. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.Extensions Assembly : Oasys.Common.dll Syntax public struct ProjectionInfo Fields IsOnSegment Returns if the point is on the segment Declaration public bool IsOnSegment Field Value Type Description System.Boolean LinePoint Line point Declaration public Vector2 LinePoint Field Value Type Description SharpDX.Vector2 SegmentPoint Segment point Declaration public Vector2 SegmentPoint Field Value Type Description SharpDX.Vector2 Extension Methods Extensions.ClearFlags<T>(T, T) Extensions.GetFlagDescription<T>(T) Extensions.GetFlags<T>(T) Extensions.In<T>(T, T[]) Extensions.SetFlags<T>(T, T, Boolean)"
  },
  "api/Oasys.Common.GameInstances.ChatClient.html": {
    "href": "api/Oasys.Common.GameInstances.ChatClient.html",
    "title": "Class ChatClient | Oasys SDK",
    "keywords": "Class ChatClient Inheritance System.Object ChatClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameInstances Assembly : Oasys.Common.dll Syntax public class ChatClient Properties ChatBoxEndPos Gets the X and Y corner Vector2 position of the chatbox. Declaration public Vector2 ChatBoxEndPos { get; } Property Value Type Description SharpDX.Vector2 ChatBoxStartPos Gets the X and Y origin Vector2 position of the chatbox. Declaration public Vector2 ChatBoxStartPos { get; } Property Value Type Description SharpDX.Vector2 IsChatBoxOpen Declaration public bool IsChatBoxOpen { get; } Property Value Type Description System.Boolean IsChatting Checks whether if the user is typing in the chatbox. Declaration public bool IsChatting { get; } Property Value Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameInstances.html": {
    "href": "api/Oasys.Common.GameInstances.html",
    "title": "Namespace Oasys.Common.GameInstances | Oasys SDK",
    "keywords": "Namespace Oasys.Common.GameInstances Classes ChatClient MinimapInfo MissionInfo"
  },
  "api/Oasys.Common.GameInstances.MinimapInfo.html": {
    "href": "api/Oasys.Common.GameInstances.MinimapInfo.html",
    "title": "Class MinimapInfo | Oasys SDK",
    "keywords": "Class MinimapInfo Inheritance System.Object MinimapInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameInstances Assembly : Oasys.Common.dll Syntax public class MinimapInfo Properties IsOnTheLeftSide Checks whether if the minimap is on the left side of the screen. Declaration public bool IsOnTheLeftSide { get; } Property Value Type Description System.Boolean IsVisible Checks whether if the minimap is visible. Declaration public bool IsVisible { get; } Property Value Type Description System.Boolean MinimapMaxSizeable Gets the minimap max sizeable vector2. Declaration public Vector2 MinimapMaxSizeable { get; } Property Value Type Description SharpDX.Vector2 MinimapScreenPosition Gets the minimap vector2 position on the screen. Declaration public Vector2 MinimapScreenPosition { get; } Property Value Type Description SharpDX.Vector2 MinimapScreenSize Gets the minimap vector2 size on the screen. Declaration public Vector2 MinimapScreenSize { get; } Property Value Type Description SharpDX.Vector2 Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameInstances.MissionInfo.html": {
    "href": "api/Oasys.Common.GameInstances.MissionInfo.html",
    "title": "Class MissionInfo | Oasys SDK",
    "keywords": "Class MissionInfo Inheritance System.Object MissionInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameInstances Assembly : Oasys.Common.dll Syntax public class MissionInfo Properties GameID Declaration public uint GameID { get; } Property Value Type Description System.UInt32 GameIndentifierName Declaration public string GameIndentifierName { get; } Property Value Type Description System.String GameMode Declaration public string GameMode { get; } Property Value Type Description System.String GameType Declaration public GameTypes GameType { get; } Property Value Type Description GameTypes LobbyName Declaration public string LobbyName { get; } Property Value Type Description System.String MainGameType Declaration public string MainGameType { get; } Property Value Type Description System.String MapConfigAsset Declaration public string MapConfigAsset { get; } Property Value Type Description System.String MapID Declaration public MapIDFlag MapID { get; } Property Value Type Description MapIDFlag MapName Declaration public string MapName { get; } Property Value Type Description System.String MatchTypeName Declaration public string MatchTypeName { get; } Property Value Type Description System.String RegionName Declaration public string RegionName { get; } Property Value Type Description System.String SubGameType Declaration public string SubGameType { get; } Property Value Type Description System.String Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.AIBaseClient.html": {
    "href": "api/Oasys.Common.GameObject.Clients.AIBaseClient.html",
    "title": "Class AIBaseClient | Oasys SDK",
    "keywords": "Class AIBaseClient Client specifically for all base objects. Inheritance System.Object GameObjectBase AIBaseClient AIHeroClient AIMinionClient AIMissileClient AIPlacementClient Inhibitor Nexus Turret Inherited Members GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.Clients Assembly : Oasys.Common.dll Syntax public class AIBaseClient : GameObjectBase Constructors AIBaseClient(Int32) Declaration public AIBaseClient(int handlePointer) Parameters Type Name Description System.Int32 handlePointer AIBaseClient(Int32, Single) Declaration public AIBaseClient(int handlePointer, float gameTime) Parameters Type Name Description System.Int32 handlePointer System.Single gameTime Properties AIManager Gets the navigation manager. Declaration public override AIManager AIManager { get; } Property Value Type Description AIManager Overrides GameObjectBase.AIManager Armor Gets the armor. Declaration public override float Armor { get; } Property Value Type Description System.Single Overrides GameObjectBase.Armor AttackRange Gets the attack range in 100th teemos. Declaration public override float AttackRange { get; } Property Value Type Description System.Single Overrides GameObjectBase.AttackRange BaseObjectTypesAssociated Gets the base object types the object is associated with. Declaration public List<ObjectTypeFlag> BaseObjectTypesAssociated { get; } Property Value Type Description System.Collections.Generic.List < ObjectTypeFlag > BasicAttackInfo Gets the information about the basic attack. Declaration public override SpellClassData BasicAttackInfo { get; } Property Value Type Description SpellClassData Overrides GameObjectBase.BasicAttackInfo BuffManager Gets the manager for the buffs. Declaration public override BuffManager BuffManager { get; } Property Value Type Description BuffManager Overrides GameObjectBase.BuffManager CombatType Gets the combat type. Declaration public override CombatTypes CombatType { get; } Property Value Type Description CombatTypes Overrides GameObjectBase.CombatType Direction Gets the direction it is facing towards/at. Declaration public override Vector3 Direction { get; } Property Value Type Description SharpDX.Vector3 Overrides GameObjectBase.Direction Distance Gets the distance between the player. Declaration public override float Distance { get; } Property Value Type Description System.Single Overrides GameObjectBase.Distance EffectiveArmorHealth Gets the health with armor. Declaration public override float EffectiveArmorHealth { get; } Property Value Type Description System.Single Overrides GameObjectBase.EffectiveArmorHealth EffectiveMagicHealth Gets the health with magic resist. Declaration public override float EffectiveMagicHealth { get; } Property Value Type Description System.Single Overrides GameObjectBase.EffectiveMagicHealth EncryptedID Gets the encryped server Object ID. Declaration public override int EncryptedID { get; } Property Value Type Description System.Int32 Overrides GameObjectBase.EncryptedID Gold Gets the amount of gold it has. Declaration public override float Gold { get; } Property Value Type Description System.Single Overrides GameObjectBase.Gold Health Gets the health. Declaration public override float Health { get; } Property Value Type Description System.Single Overrides GameObjectBase.Health HealthBarScreenPosition Gets the position of the health on the screen. Declaration public override Vector2 HealthBarScreenPosition { get; } Property Value Type Description SharpDX.Vector2 Overrides GameObjectBase.HealthBarScreenPosition Index Gets the index within the object manager. Declaration public override short Index { get; } Property Value Type Description System.Int16 Overrides GameObjectBase.Index IsAlive Checks whether if it is alive. /// Declaration public override bool IsAlive { get; } Property Value Type Description System.Boolean Overrides GameObjectBase.IsAlive IsCastingSpell Checks whether if it is casting a spell. Declaration public override bool IsCastingSpell { get; } Property Value Type Description System.Boolean Overrides GameObjectBase.IsCastingSpell IsNativeObjectPointerValid Checks whether if the object's native pointer in memory is valid. (Is NOT NullPtr) Declaration public bool IsNativeObjectPointerValid { get; } Property Value Type Description System.Boolean IsTargetable Checks whether if is targetable by the player. Declaration public override bool IsTargetable { get; } Property Value Type Description System.Boolean Overrides GameObjectBase.IsTargetable IsVisible Checks whether if it is visible to the player's sight in-game. Declaration public override bool IsVisible { get; } Property Value Type Description System.Boolean Overrides GameObjectBase.IsVisible Level Gets the current level. Declaration public override int Level { get; } Property Value Type Description System.Int32 Overrides GameObjectBase.Level MagicalShield Gets the amount of magical shield applied. Declaration public override float MagicalShield { get; } Property Value Type Description System.Single Overrides GameObjectBase.MagicalShield MagicResist Gets the magic resist. Declaration public override float MagicResist { get; } Property Value Type Description System.Single Overrides GameObjectBase.MagicResist Mana Gets the mana. Declaration public override float Mana { get; } Property Value Type Description System.Single Overrides GameObjectBase.Mana MaxHealth Gets the max health. Declaration public override float MaxHealth { get; } Property Value Type Description System.Single Overrides GameObjectBase.MaxHealth MaxMana Gets the max mana. Declaration public override float MaxMana { get; } Property Value Type Description System.Single Overrides GameObjectBase.MaxMana ModelName Gets the character model name. For champions, it is the champion name. Declaration public override string ModelName { get; } Property Value Type Description System.String Overrides GameObjectBase.ModelName Name Gets the object's name. For player, it is their username. Declaration public override string Name { get; } Property Value Type Description System.String Overrides GameObjectBase.Name NetworkID Gets the ID on the network stream. Declaration public override uint NetworkID { get; } Property Value Type Description System.UInt32 Overrides GameObjectBase.NetworkID NeutralShield Gets the amount of neutral shield applied. Declaration public override float NeutralShield { get; } Property Value Type Description System.Single Overrides GameObjectBase.NeutralShield PhysicalShield Gets the amount of physical shields applied. Declaration public override float PhysicalShield { get; } Property Value Type Description System.Single Overrides GameObjectBase.PhysicalShield Position Gets the current position. Declaration public override Vector3 Position { get; } Property Value Type Description SharpDX.Vector3 Overrides GameObjectBase.Position Team Gets the current team. Declaration public override TeamFlag Team { get; } Property Value Type Description TeamFlag Overrides GameObjectBase.Team TrueAttackRange Gets true attack range including bounding radius(hitbox radius) in 100th teemos. Declaration public override float TrueAttackRange { get; } Property Value Type Description System.Single Overrides GameObjectBase.TrueAttackRange UnitComponentInfo Gets the unit's component information. Declaration public override UnitComponentInfo UnitComponentInfo { get; } Property Value Type Description UnitComponentInfo Overrides GameObjectBase.UnitComponentInfo UnitStats Gets the statistical information about the unit. Statistical values shown next to the champion icon at the bottom. Declaration public override UnitStats UnitStats { get; } Property Value Type Description UnitStats Overrides GameObjectBase.UnitStats W2S Get the transformed WorldToScreen position. Declaration public override Vector2 W2S { get; } Property Value Type Description SharpDX.Vector2 Overrides GameObjectBase.W2S WorldToMap Gets the current position in map on screen. Declaration public override Vector2 WorldToMap { get; } Property Value Type Description SharpDX.Vector2 Overrides GameObjectBase.WorldToMap Methods DistanceTo(Vector3) Gets the distance between the given vector3 in-game position. Declaration public override float DistanceTo(Vector3 position) Parameters Type Name Description SharpDX.Vector3 position Returns Type Description System.Single Overrides GameObjectBase.DistanceTo(Vector3) GetAttackCastDelay() Gets the time between cast animation and the actual cast of the basic attack. Declaration public override float GetAttackCastDelay() Returns Type Description System.Single Overrides GameObjectBase.GetAttackCastDelay() GetAttackDelay() Gets the time delay between basic attacks. Declaration public override float GetAttackDelay() Returns Type Description System.Single Overrides GameObjectBase.GetAttackDelay() GetCalculatedAttackCastDelay(Single, Single) Declaration public static float GetCalculatedAttackCastDelay(float windupPercent, float windupModifier) Parameters Type Name Description System.Single windupPercent System.Single windupModifier Returns Type Description System.Single GetCurrentCastingSpell() Gets the currently casting spell. Declaration public override SpellActiveEntry GetCurrentCastingSpell() Returns Type Description SpellActiveEntry Overrides GameObjectBase.GetCurrentCastingSpell() GetSpellBook() Gets the spellbook. Declaration public override SpellBook GetSpellBook() Returns Type Description SpellBook Overrides GameObjectBase.GetSpellBook() IsCombatType(CombatTypes) Checks whether if combat type matches the one given. Declaration public bool IsCombatType(CombatTypes CType) Parameters Type Name Description CombatTypes CType Returns Type Description System.Boolean IsTeam(TeamFlag) Checks whether if it is on team flag given. Declaration public bool IsTeam(TeamFlag tFlag) Parameters Type Name Description TeamFlag tFlag Returns Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.Clients.AIHeroClient.html": {
    "href": "api/Oasys.Common.GameObject.Clients.AIHeroClient.html",
    "title": "Class AIHeroClient | Oasys SDK",
    "keywords": "Class AIHeroClient Client specifically for Heroes. Inheritance System.Object GameObjectBase AIBaseClient AIHeroClient Hero Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.Clients Assembly : Oasys.Common.dll Syntax public class AIHeroClient : AIBaseClient Constructors AIHeroClient(Int32) Declaration public AIHeroClient(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Properties ExperiencePoints Gets the curremt XP amount. Declaration public float ExperiencePoints { get; } Property Value Type Description System.Single Inventory Gets the item inventory. Declaration public HeroInventory Inventory { get; } Property Value Type Description HeroInventory IsEmpoweredRecalling Checks whether if the champion is recalling. Declaration public bool IsEmpoweredRecalling { get; } Property Value Type Description System.Boolean IsRecalling Checks whether if the champion is recalling. Declaration public bool IsRecalling { get; } Property Value Type Description System.Boolean ResourceType Declaration public ResourceType ResourceType { get; } Property Value Type Description ResourceType SpellUpgradePoints Gets the points in hand to upgrade spells. Declaration public int SpellUpgradePoints { get; } Property Value Type Description System.Int32 Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.GetRecallTime(AIHeroClient) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsRecalling(AIHeroClient) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.Clients.AIMinionClient.html": {
    "href": "api/Oasys.Common.GameObject.Clients.AIMinionClient.html",
    "title": "Class AIMinionClient | Oasys SDK",
    "keywords": "Class AIMinionClient Client specifically for all minion objects. Inheritance System.Object GameObjectBase AIBaseClient AIMinionClient JungleMob Minion Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.Clients Assembly : Oasys.Common.dll Syntax public class AIMinionClient : AIBaseClient Constructors AIMinionClient(Int32) Declaration public AIMinionClient(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.Clients.AIMissileClient.html": {
    "href": "api/Oasys.Common.GameObject.Clients.AIMissileClient.html",
    "title": "Class AIMissileClient | Oasys SDK",
    "keywords": "Class AIMissileClient Inheritance System.Object GameObjectBase AIBaseClient AIMissileClient Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.Clients Assembly : Oasys.Common.dll Syntax public class AIMissileClient : AIBaseClient Constructors AIMissileClient(Int32) Declaration public AIMissileClient(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Properties EndPosition Declaration public Vector3 EndPosition { get; } Property Value Type Description SharpDX.Vector3 Level Declaration public int Level { get; } Property Value Type Description System.Int32 Slot Declaration public int Slot { get; } Property Value Type Description System.Int32 SourceIndex Declaration public short SourceIndex { get; } Property Value Type Description System.Int16 SpellData Declaration public SpellClassData SpellData { get; } Property Value Type Description SpellClassData StartPosition Declaration public Vector3 StartPosition { get; } Property Value Type Description SharpDX.Vector3 TargetIndex Declaration public short TargetIndex { get; } Property Value Type Description System.Int16 Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.Clients.AIPlacementClient.html": {
    "href": "api/Oasys.Common.GameObject.Clients.AIPlacementClient.html",
    "title": "Class AIPlacementClient | Oasys SDK",
    "keywords": "Class AIPlacementClient Client specifically for all placeable objects. Inheritance System.Object GameObjectBase AIBaseClient AIPlacementClient Trap Ward Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.Clients Assembly : Oasys.Common.dll Syntax public class AIPlacementClient : AIBaseClient Constructors AIPlacementClient(Int32) Declaration public AIPlacementClient(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.AIManager.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.AIManager.html",
    "title": "Class AIManager | Oasys SDK",
    "keywords": "Class AIManager Navigation manager. Inheritance System.Object AIManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances Assembly : Oasys.Common.dll Syntax public class AIManager Constructors AIManager(Int32) Declaration public AIManager(int instanceOffset) Parameters Type Name Description System.Int32 instanceOffset Properties DashSpeed Gets the dashing speed. Declaration public float DashSpeed { get; } Property Value Type Description System.Single IsDashing Checks whether if it is dashing. Declaration public bool IsDashing { get; } Property Value Type Description System.Boolean IsMoving Checks whether if it is moving/walking. Declaration public bool IsMoving { get; } Property Value Type Description System.Boolean NavBeginPosition Gets the beginning position of the navigation. Declaration public Vector3 NavBeginPosition { get; } Property Value Type Description SharpDX.Vector3 NavEndPosition Gets the ending position of the navigation. Declaration public Vector3 NavEndPosition { get; } Property Value Type Description SharpDX.Vector3 NavTargetPosition Gets the position of where it is moving to. Declaration public Vector3 NavTargetPosition { get; } Property Value Type Description SharpDX.Vector3 ProcessedNavPointCount Gets the processed count of nav points. Declaration public int ProcessedNavPointCount { get; } Property Value Type Description System.Int32 ServerPosition Gets the server position. Declaration public Vector3 ServerPosition { get; } Property Value Type Description SharpDX.Vector3 Velocity Gets the velocity. Declaration public Vector3 Velocity { get; } Property Value Type Description SharpDX.Vector3 Methods GetNavPointCount() Gets the total count of navigation check points. Declaration public int GetNavPointCount() Returns Type Description System.Int32 GetNavPoints() Gets the position of each navigation check points. Declaration public List<Vector3> GetNavPoints() Returns Type Description System.Collections.Generic.List < SharpDX.Vector3 > Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.BuffEntry.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.BuffEntry.html",
    "title": "Class BuffEntry | Oasys SDK",
    "keywords": "Class BuffEntry Inheritance System.Object BuffEntry Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances Assembly : Oasys.Common.dll Syntax public class BuffEntry Constructors BuffEntry(Int32) Declaration public BuffEntry(int pBuffEntry) Parameters Type Name Description System.Int32 pBuffEntry Properties BuffCountAlt Gets the alternate buff count. Second buff account. Declaration public float BuffCountAlt { get; } Property Value Type Description System.Single BuffCountFloat Gets the buff count in float form. Declaration public float BuffCountFloat { get; } Property Value Type Description System.Single BuffCountInt Gets the buff count in int form. Declaration public int BuffCountInt { get; } Property Value Type Description System.Int32 Duration Declaration public float Duration { get; } Property Value Type Description System.Single DurationMs Declaration public float DurationMs { get; } Property Value Type Description System.Single EndTime Gets the end time. Declaration public float EndTime { get; } Property Value Type Description System.Single EntryType Declaration public BuffType EntryType { get; } Property Value Type Description BuffType IsActive Checks whether if the buff is active. Declaration public bool IsActive { get; } Property Value Type Description System.Boolean Name Gets the name of the buff. Declaration public string Name { get; } Property Value Type Description System.String OwnerObjectIndex Gets the buff owner's object index. Declaration public short OwnerObjectIndex { get; } Property Value Type Description System.Int16 OwnerObjectNetworkID Gets the buff owner's network ID; Declaration public uint OwnerObjectNetworkID { get; } Property Value Type Description System.UInt32 Stacks Gets the buff stacks. Declaration public float Stacks { get; } Property Value Type Description System.Single StartTime Gets the start time. Declaration public float StartTime { get; } Property Value Type Description System.Single Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() GetOwnerObject() Gets the buff owner object. Declaration public AIBaseClient GetOwnerObject() Returns Type Description AIBaseClient ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.BuffManager.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.BuffManager.html",
    "title": "Class BuffManager | Oasys SDK",
    "keywords": "Class BuffManager Object BuffManager instance. Inheritance System.Object BuffManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances Assembly : Oasys.Common.dll Syntax public class BuffManager Constructors BuffManager(Int32) Declaration public BuffManager(int instanceOffset) Parameters Type Name Description System.Int32 instanceOffset Methods GetBuffByName(String, Boolean, Boolean) Gets a buff by the name given. Declaration public BuffEntry GetBuffByName(string buffName, bool contains = true, bool equals = false) Parameters Type Name Description System.String buffName System.Boolean contains System.Boolean equals Returns Type Description BuffEntry GetBuffList() Gets all the buffs. Declaration public List<BuffEntry> GetBuffList() Returns Type Description System.Collections.Generic.List < BuffEntry > HasBuff(String) Checks whether if it has buff with the name given. Declaration public bool HasBuff(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean HasBuff(String, Boolean, Boolean) Checks whether if it has buff with the name given. Declaration public bool HasBuff(string name, bool contains = true, bool equals = false) Parameters Type Name Description System.String name System.Boolean contains System.Boolean equals Returns Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.HeroInventory.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.HeroInventory.html",
    "title": "Class HeroInventory | Oasys SDK",
    "keywords": "Class HeroInventory Heroes item inventory instance. Inheritance System.Object HeroInventory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances Assembly : Oasys.Common.dll Syntax public class HeroInventory Constructors HeroInventory(Int32) Declaration public HeroInventory(int instancePointer) Parameters Type Name Description System.Int32 instancePointer Methods GetItemByID(ItemID) Gets an item by the ID given. Declaration public HeroInventory.Item GetItemByID(ItemID id) Parameters Type Name Description ItemID id Returns Type Description HeroInventory.Item GetItemList() Gets the items in order from the item slots. Declaration public List<HeroInventory.Item> GetItemList() Returns Type Description System.Collections.Generic.List < HeroInventory.Item > HasItem(ItemID) Checks whether if it has an item by the ID given. Declaration public bool HasItem(ItemID id) Parameters Type Name Description ItemID id Returns Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.HeroInventory.Item.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.HeroInventory.Item.html",
    "title": "Class HeroInventory.Item | Oasys SDK",
    "keywords": "Class HeroInventory.Item Inheritance System.Object HeroInventory.Item Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances Assembly : Oasys.Common.dll Syntax public class Item Fields CreatedInListGameTime Gets the time when the item was created in the list. Declaration public float CreatedInListGameTime Field Value Type Description System.Single ID Gets the ID of the item. Declaration public ItemID ID Field Value Type Description ItemID OwnerHero Gets the item owner hero. Declaration public AIHeroClient OwnerHero Field Value Type Description AIHeroClient Properties Charges Gets the amount of charges the item has. Declaration public int Charges { get; } Property Value Type Description System.Int32 Cooldown Gets the item cooldown. Declaration public float Cooldown { get; } Property Value Type Description System.Single CooldownExpiry Gets the item cooldown expiry time. Declaration public float CooldownExpiry { get; } Property Value Type Description System.Single Cost Gets the item cost. Declaration public float Cost { get; } Property Value Type Description System.Single IsReady Checks whether if the item is ready. Declaration public bool IsReady { get; } Property Value Type Description System.Boolean Name Gets the name of the item. Declaration public string Name { get; } Property Value Type Description System.String Slot Gets the slot of the item. Declaration public ItemSlot Slot { get; } Property Value Type Description ItemSlot Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.html",
    "title": "Namespace Oasys.Common.GameObject.Clients.ExtendedInstances | Oasys SDK",
    "keywords": "Namespace Oasys.Common.GameObject.Clients.ExtendedInstances Classes AIManager Navigation manager. BuffEntry BuffManager Object BuffManager instance. HeroInventory Heroes item inventory instance. HeroInventory.Item UnitComponentInfo UnitStats Object stats/properties instance."
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.Spells.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.Spells.html",
    "title": "Namespace Oasys.Common.GameObject.Clients.ExtendedInstances.Spells | Oasys SDK",
    "keywords": "Namespace Oasys.Common.GameObject.Clients.ExtendedInstances.Spells Classes SpellActiveEntry SpellCastInfo | SpellBook + 0x20 -> ActiveSpellEntry SpellBook SpellClass SpellClassData"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.Spells.SpellActiveEntry.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.Spells.SpellActiveEntry.html",
    "title": "Class SpellActiveEntry | Oasys SDK",
    "keywords": "Class SpellActiveEntry SpellCastInfo | SpellBook + 0x20 -> ActiveSpellEntry Inheritance System.Object SpellActiveEntry MissileClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances.Spells Assembly : Oasys.Common.dll Syntax public class SpellActiveEntry Constructors SpellActiveEntry(Int32) Declaration public SpellActiveEntry(int instancePointer) Parameters Type Name Description System.Int32 instancePointer Properties CastEndTime Gets the cast end time. Declaration public float CastEndTime { get; } Property Value Type Description System.Single CasterName Gets the caster's name. Declaration public string CasterName { get; } Property Value Type Description System.String CastStartTime Gets the spell cast start time. Declaration public float CastStartTime { get; } Property Value Type Description System.Single Cooldown Gets the cooldown. Declaration public float Cooldown { get; } Property Value Type Description System.Single IsBasicAttack Checks whether if it is a basic attack. Declaration public bool IsBasicAttack { get; } Property Value Type Description System.Boolean IsSpecialAttack Checks whether if it is a special attack. Declaration public bool IsSpecialAttack { get; } Property Value Type Description System.Boolean MissileIndex Gets the index in the object manager. Declaration public int MissileIndex { get; } Property Value Type Description System.Int32 SpellCurrentPosition Gets the start position of the spell. Declaration public Vector3 SpellCurrentPosition { get; } Property Value Type Description SharpDX.Vector3 SpellData Gets the data about the spell. Declaration public SpellClassData SpellData { get; } Property Value Type Description SpellClassData SpellEndPosition Gets the end position of the spell. Declaration public Vector3 SpellEndPosition { get; } Property Value Type Description SharpDX.Vector3 SpellSlot Gets the slot in use. Declaration public SpellSlot SpellSlot { get; } Property Value Type Description SpellSlot SpellStartPosition Gets the start position of the spell. Declaration public Vector3 SpellStartPosition { get; } Property Value Type Description SharpDX.Vector3 WindupTime Gets the animation time. Declaration public float WindupTime { get; } Property Value Type Description System.Single Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.Spells.SpellBook.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.Spells.SpellBook.html",
    "title": "Class SpellBook | Oasys SDK",
    "keywords": "Class SpellBook Inheritance System.Object SpellBook Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances.Spells Assembly : Oasys.Common.dll Syntax public class SpellBook Constructors SpellBook(Int32) Declaration public SpellBook(int instanceOffset) Parameters Type Name Description System.Int32 instanceOffset Methods CastMultiSpell(SpellCastSlot[]) Declaration public static void CastMultiSpell(SpellCastSlot[] slotArray) Parameters Type Name Description SpellCastSlot [] slotArray CastMultiSpell(SpellCastSlot[], Vector2) Declaration public static void CastMultiSpell(SpellCastSlot[] slotArray, Vector2 screenPosition) Parameters Type Name Description SpellCastSlot [] slotArray SharpDX.Vector2 screenPosition CastMultiSpell(SpellCastSlot[], Vector3) Declaration public static void CastMultiSpell(SpellCastSlot[] slotArray, Vector3 objectPosition) Parameters Type Name Description SpellCastSlot [] slotArray SharpDX.Vector3 objectPosition CastMultiSpell(Tuple<SpellCastSlot, Vector2>[]) Declaration public static void CastMultiSpell(Tuple<SpellCastSlot, Vector2>[] respectiveSpells) Parameters Type Name Description System.Tuple < SpellCastSlot , SharpDX.Vector2 >[] respectiveSpells CastMultiSpell(Tuple<SpellCastSlot, Vector3>[]) Declaration public static void CastMultiSpell(Tuple<SpellCastSlot, Vector3>[] respectiveSpells) Parameters Type Name Description System.Tuple < SpellCastSlot , SharpDX.Vector3 >[] respectiveSpells CastSpell(SpellCastSlot) Declaration public static bool CastSpell(SpellCastSlot slot) Parameters Type Name Description SpellCastSlot slot Returns Type Description System.Boolean CastSpell(SpellCastSlot, Vector2) Declaration public static bool CastSpell(SpellCastSlot slot, Vector2 screenPosition) Parameters Type Name Description SpellCastSlot slot SharpDX.Vector2 screenPosition Returns Type Description System.Boolean CastSpell(SpellCastSlot, Vector2, Single) Declaration public static bool CastSpell(SpellCastSlot slot, Vector2 screenPosition, float castTime) Parameters Type Name Description SpellCastSlot slot SharpDX.Vector2 screenPosition System.Single castTime Returns Type Description System.Boolean CastSpell(SpellCastSlot, Vector3) Declaration public static bool CastSpell(SpellCastSlot slot, Vector3 objectPosition) Parameters Type Name Description SpellCastSlot slot SharpDX.Vector3 objectPosition Returns Type Description System.Boolean CastSpell(SpellCastSlot, Vector3, Single) Declaration public static bool CastSpell(SpellCastSlot slot, Vector3 objectPosition, float castTime) Parameters Type Name Description SpellCastSlot slot SharpDX.Vector3 objectPosition System.Single castTime Returns Type Description System.Boolean CastSpell(SpellCastSlot, Single) Declaration public static bool CastSpell(SpellCastSlot slot, float castTime) Parameters Type Name Description SpellCastSlot slot System.Single castTime Returns Type Description System.Boolean GetSpellClass(SpellSlot) Declaration public SpellClass GetSpellClass(SpellSlot sSlot) Parameters Type Name Description SpellSlot sSlot Returns Type Description SpellClass ReleaseChargeSpell(SpellCastSlot) Declaration public static bool ReleaseChargeSpell(SpellCastSlot slot) Parameters Type Name Description SpellCastSlot slot Returns Type Description System.Boolean ReleaseChargeSpell(SpellCastSlot, Vector2, Single) Declaration public static bool ReleaseChargeSpell(SpellCastSlot slot, Vector2 screenPosition, float castTime) Parameters Type Name Description SpellCastSlot slot SharpDX.Vector2 screenPosition System.Single castTime Returns Type Description System.Boolean ReleaseChargeSpell(SpellCastSlot, Vector3, Single) Declaration public static bool ReleaseChargeSpell(SpellCastSlot slot, Vector3 objectPosition, float castTime) Parameters Type Name Description SpellCastSlot slot SharpDX.Vector3 objectPosition System.Single castTime Returns Type Description System.Boolean ReleaseChargeSpell(SpellCastSlot, Single) Declaration public static bool ReleaseChargeSpell(SpellCastSlot slot, float castTime) Parameters Type Name Description SpellCastSlot slot System.Single castTime Returns Type Description System.Boolean StartChargeSpell(SpellCastSlot) Declaration public static bool StartChargeSpell(SpellCastSlot slot) Parameters Type Name Description SpellCastSlot slot Returns Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.Spells.SpellClass.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.Spells.SpellClass.html",
    "title": "Class SpellClass | Oasys SDK",
    "keywords": "Class SpellClass Inheritance System.Object SpellClass Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances.Spells Assembly : Oasys.Common.dll Syntax public class SpellClass Constructors SpellClass(Int32) Declaration public SpellClass(int classPointer) Parameters Type Name Description System.Int32 classPointer Properties Charges Gets the charges available. Declaration public int Charges { get; } Property Value Type Description System.Int32 Cooldown Gets the spell cooldown. Declaration public float Cooldown { get; } Property Value Type Description System.Single CooldownExpire Gets the cooldown expiry. Declaration public float CooldownExpire { get; } Property Value Type Description System.Single FinalCooldownExpire [OBSOLETE - Use CooldownExpire, will be removed in upcoming updates] Gets the cooldown expiry. Declaration public float FinalCooldownExpire { get; } Property Value Type Description System.Single IsSpellReady Checks whether if the spell is ready. Declaration public bool IsSpellReady { get; } Property Value Type Description System.Boolean Level Gets the spell level. Declaration public int Level { get; } Property Value Type Description System.Int32 SpellData Gets the data about the spell. Declaration public SpellClassData SpellData { get; } Property Value Type Description SpellClassData Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.Spells.SpellClassData.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.Spells.SpellClassData.html",
    "title": "Class SpellClassData | Oasys SDK",
    "keywords": "Class SpellClassData Inheritance System.Object SpellClassData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances.Spells Assembly : Oasys.Common.dll Syntax public class SpellClassData Constructors SpellClassData(Int32) Declaration public SpellClassData(int instancePointer) Parameters Type Name Description System.Int32 instancePointer Properties AmmoRechargeTime Gets the charging time of the ammos. Declaration public float AmmoRechargeTime { get; } Property Value Type Description System.Single AmmoUsed Gets the ammo used. Declaration public int AmmoUsed { get; } Property Value Type Description System.Int32 AOE Gets the area of effect. Declaration public float AOE { get; } Property Value Type Description System.Single AOEDuration Gets the duration of area of effect. Declaration public float AOEDuration { get; } Property Value Type Description System.Single CastRange Gets the cast range. Declaration public float CastRange { get; } Property Value Type Description System.Single MaxAmmo Gets the max ammo. Declaration public int MaxAmmo { get; } Property Value Type Description System.Int32 MissileAcceleration Gets the acceleration rate of the spell. Declaration public float MissileAcceleration { get; } Property Value Type Description System.Single MissileMaxSpeed Gets the spell's maximum speed of travel. Declaration public float MissileMaxSpeed { get; } Property Value Type Description System.Single MissileMinSpeed Gets the spell's minimum speed of travel. Declaration public float MissileMinSpeed { get; } Property Value Type Description System.Single MissileName Gets the missile name. This is often the spell object's name. Declaration public string MissileName { get; } Property Value Type Description System.String MissileSpeed Gets the speed of the spell. Declaration public float MissileSpeed { get; } Property Value Type Description System.Single ResourceCost Gets the cost of mana/fury/energy etc. Declaration public float ResourceCost { get; } Property Value Type Description System.Single SpellDuration Gets the duration of the spell. Declaration public float SpellDuration { get; } Property Value Type Description System.Single SpellName Gets the spell name. It is the official name of the spell provided by Riot. Declaration public string SpellName { get; } Property Value Type Description System.String SpellRadius Gets the radius of the spell. Declaration public float SpellRadius { get; } Property Value Type Description System.Single SpellWidth Gets the spell's width. Will return 0 or value around 0 when it is not a line spell. Declaration public float SpellWidth { get; } Property Value Type Description System.Single Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.UnitComponentInfo.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.UnitComponentInfo.html",
    "title": "Class UnitComponentInfo | Oasys SDK",
    "keywords": "Class UnitComponentInfo Inheritance System.Object UnitComponentInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances Assembly : Oasys.Common.dll Syntax public class UnitComponentInfo Constructors UnitComponentInfo(Int32) Declaration public UnitComponentInfo(int instancePointer) Parameters Type Name Description System.Int32 instancePointer Properties SkinID Gets the skin ID. Declaration public uint SkinID { get; } Property Value Type Description System.UInt32 SkinName Gets the skin name. Declaration public string SkinName { get; } Property Value Type Description System.String UnitAttackRange Gets the unit's attack range. Declaration public float UnitAttackRange { get; } Property Value Type Description System.Single UnitBaseAttackSpeed Gets the unit's base attack speed. Declaration public float UnitBaseAttackSpeed { get; } Property Value Type Description System.Single UnitBaseAttackSpeedAdditional Gets the unit's additional base attack speed. Declaration public float UnitBaseAttackSpeedAdditional { get; } Property Value Type Description System.Single UnitBaseMoveSpeed Gets the unit's base movement speed. Declaration public float UnitBaseMoveSpeed { get; } Property Value Type Description System.Single UnitBoundingRadius Gets the unit's hitbox radius. Declaration public float UnitBoundingRadius { get; } Property Value Type Description System.Single UnitMainClass Gets the unit's main type class. Declaration public string UnitMainClass { get; } Property Value Type Description System.String UnitMaxAttackSpeed Gets the unit's max attack speed. Declaration public float UnitMaxAttackSpeed { get; } Property Value Type Description System.Single UnitSubClass Gets the unit's sub type class. Declaration public string UnitSubClass { get; } Property Value Type Description System.String Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.ExtendedInstances.UnitStats.html": {
    "href": "api/Oasys.Common.GameObject.Clients.ExtendedInstances.UnitStats.html",
    "title": "Class UnitStats | Oasys SDK",
    "keywords": "Class UnitStats Object stats/properties instance. Inheritance System.Object UnitStats Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.Clients.ExtendedInstances Assembly : Oasys.Common.dll Syntax public class UnitStats Constructors UnitStats(Int32) Declaration public UnitStats(int instanceOffset) Parameters Type Name Description System.Int32 instanceOffset Properties AbilityHaste Gets the unit's ability haste. Declaration public float AbilityHaste { get; } Property Value Type Description System.Single Armor Gets the unit's armor. Declaration public float Armor { get; } Property Value Type Description System.Single ArmorPercentPentration Gets the unit's armor pentration in percentage. Declaration public float ArmorPercentPentration { get; } Property Value Type Description System.Single AttackRange Gets the unit's attack range. Declaration public float AttackRange { get; } Property Value Type Description System.Single AttackSpeedMod Gets the unit's attack speed modifier. Declaration public float AttackSpeedMod { get; } Property Value Type Description System.Single AttackSpeedModRaw Gets the unit's true/raw attack speed modifier. Declaration public float AttackSpeedModRaw { get; } Property Value Type Description System.Single BaseAbilityDamage Gets the unit's base ability damage. Declaration public float BaseAbilityDamage { get; } Property Value Type Description System.Single BaseAttackDamage Gets the unit's base attack damage. Declaration public float BaseAttackDamage { get; } Property Value Type Description System.Single BaseAttackDamageSansPercentScale Gets the unit's base attack damage in percentage. Declaration public float BaseAttackDamageSansPercentScale { get; } Property Value Type Description System.Single BaseHPRegenRate Gets the unit's base health regeneration rate. Declaration public float BaseHPRegenRate { get; } Property Value Type Description System.Single BonusArmor Gets the unit's bonus armor. Declaration public float BonusArmor { get; } Property Value Type Description System.Single BonusAttackDamage Gets the unit's bonus attack damage. Declaration public float BonusAttackDamage { get; } Property Value Type Description System.Single BonusMagicResist Gets the unit's bonus magic resist. Declaration public float BonusMagicResist { get; } Property Value Type Description System.Single CooldownReductionPercent Gets the unit's calculated cooldown reduction in percentage. Declaration public float CooldownReductionPercent { get; } Property Value Type Description System.Single Crit Gets the unit's critical. Declaration public float Crit { get; } Property Value Type Description System.Single CritBonusPerc Gets the unit's critical bonus in percentage. Declaration public float CritBonusPerc { get; } Property Value Type Description System.Single Dodge Declaration public float Dodge { get; } Property Value Type Description System.Single FlatArmorPenetration Gets the unit's armor penetration. Declaration public float FlatArmorPenetration { get; } Property Value Type Description System.Single FlatBaseAttackDamageMod Gets the unit's base attack damage modifier. Declaration public float FlatBaseAttackDamageMod { get; } Property Value Type Description System.Single FlatCastRangeMod Gets the unit's attack cast range modifier. Declaration public float FlatCastRangeMod { get; } Property Value Type Description System.Single FlatMagicDamageMod Gets the unit's magic damage modifier in int. Declaration public float FlatMagicDamageMod { get; } Property Value Type Description System.Single FlatMagicPenetration Gets the unit's magic penetration. Declaration public float FlatMagicPenetration { get; } Property Value Type Description System.Single FlatMagicReduction Gets the unit's magic reduction in int. Declaration public float FlatMagicReduction { get; } Property Value Type Description System.Single FlatPhysicalDamageMod Gets the unit's base physical damage modifier. Declaration public float FlatPhysicalDamageMod { get; } Property Value Type Description System.Single HPRegenRate Gets the unit's health regeneration rate. Declaration public float HPRegenRate { get; } Property Value Type Description System.Single MagicLethality Gets the unit's magic lethality. Declaration public float MagicLethality { get; } Property Value Type Description System.Single MagicPercentPenetration Gets the unit's magic penetration in percentage. Declaration public float MagicPercentPenetration { get; } Property Value Type Description System.Single MagicResist Gets the unit's magic resist. Declaration public float MagicResist { get; } Property Value Type Description System.Single MoveSpeed Gets the unit's movement speed. Declaration public float MoveSpeed { get; } Property Value Type Description System.Single PassiveCooldownEndTime Gets the unit's passive cooldown end time. Declaration public float PassiveCooldownEndTime { get; } Property Value Type Description System.Single PassiveCooldownTotalTime Gets the unit's total passive cooldown time Declaration public float PassiveCooldownTotalTime { get; } Property Value Type Description System.Single PercentAttackSpeedMod GEts the unit's attack speed modifier in percentage scale. Declaration public float PercentAttackSpeedMod { get; } Property Value Type Description System.Single PercentBaseAttackDamageMod Gets the unit's base attack damage modifier in percentage. Declaration public float PercentBaseAttackDamageMod { get; } Property Value Type Description System.Single PercentBasePhysicalDamageAsFlatBonusMod Declaration public float PercentBasePhysicalDamageAsFlatBonusMod { get; } Property Value Type Description System.Single PercentBonusArmorPenetration Gets the unit's bonus armor penetration in percentage. Declaration public float PercentBonusArmorPenetration { get; } Property Value Type Description System.Single PercentBonusMagicPenetration Gets the unit's bonus magic penetration in percentage. Declaration public float PercentBonusMagicPenetration { get; } Property Value Type Description System.Single PercentCCReduction Gets the unit's crowd control reduction in percentage. Declaration public float PercentCCReduction { get; } Property Value Type Description System.Single PercentCooldownCapMod Gets the unit's basic attack cooldown cap/max modifier in percentage. Declaration public float PercentCooldownCapMod { get; } Property Value Type Description System.Single PercentCooldownMod Gets the unit's basic attack cooldown modifier in percentage. Declaration public float PercentCooldownMod { get; } Property Value Type Description System.Single PercentCritBonusArmorPenetration Gets the unit's critical bonus armor penetration in percentage. Declaration public float PercentCritBonusArmorPenetration { get; } Property Value Type Description System.Single PercentCritTotalArmorPenetration Gets the unit's crtical total armor penetration in percentage. Declaration public float PercentCritTotalArmorPenetration { get; } Property Value Type Description System.Single PercentLifeStealMod Gets the unit's life steam modifier in percentage. Declaration public float PercentLifeStealMod { get; } Property Value Type Description System.Single PercentMagicDamageMod Gets the unit's magic damage modifier in percentage. Declaration public float PercentMagicDamageMod { get; } Property Value Type Description System.Single PercentMagicReduction Gets the unit's magic reduction in percentage. Declaration public float PercentMagicReduction { get; } Property Value Type Description System.Single PercentPhysicalDamageMod Gets the unit's physical damage modifier in percentage. Declaration public float PercentPhysicalDamageMod { get; } Property Value Type Description System.Single PercentSpellVampMod Gets the unit's spell vamp modifier in percentage. Declaration public float PercentSpellVampMod { get; } Property Value Type Description System.Single PhysicalLethality Gets the unit's physical lethality. Declaration public float PhysicalLethality { get; } Property Value Type Description System.Single ScaleSkinCoef Declaration public float ScaleSkinCoef { get; } Property Value Type Description System.Single TotalAbilityPower Gets the unit's total ability power. Declaration public float TotalAbilityPower { get; } Property Value Type Description System.Single TotalAttackDamage Gets the unit's total attack damage. Declaration public float TotalAttackDamage { get; } Property Value Type Description System.Single TotalMagicDamage Gets the unit's total magic damage. Declaration public float TotalMagicDamage { get; } Property Value Type Description System.Single TrueAttackSpeedMod Gets the unit's true attack speed modifier. Declaration [Obsolete(\"TrueAttackSpeedMod is deprecated, please use AttackSpeedModRaw instead.\")] public float TrueAttackSpeedMod { get; } Property Value Type Description System.Single Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.Clients.html": {
    "href": "api/Oasys.Common.GameObject.Clients.html",
    "title": "Namespace Oasys.Common.GameObject.Clients | Oasys SDK",
    "keywords": "Namespace Oasys.Common.GameObject.Clients Classes AIBaseClient Client specifically for all base objects. AIHeroClient Client specifically for Heroes. AIMinionClient Client specifically for all minion objects. AIMissileClient AIPlacementClient Client specifically for all placeable objects."
  },
  "api/Oasys.Common.GameObject.GameObjectBase.html": {
    "href": "api/Oasys.Common.GameObject.GameObjectBase.html",
    "title": "Class GameObjectBase | Oasys SDK",
    "keywords": "Class GameObjectBase Inheritance System.Object GameObjectBase AIBaseClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject Assembly : Oasys.Common.dll Syntax public abstract class GameObjectBase Constructors GameObjectBase() Declaration protected GameObjectBase() GameObjectBase(Single) Declaration protected GameObjectBase(float gameTime) Parameters Type Name Description System.Single gameTime Properties AIManager Declaration public abstract AIManager AIManager { get; } Property Value Type Description AIManager Armor Gets the armor. Declaration public abstract float Armor { get; } Property Value Type Description System.Single AttackRange Gets the attack Range in 100th teemos. Declaration public abstract float AttackRange { get; } Property Value Type Description System.Single AttackSpeed The attackspeed. Attacks per second. 1 / AttackDelay. Declaration public float AttackSpeed { get; } Property Value Type Description System.Single BasicAttackInfo Gets the information about the basic attack. Declaration public abstract SpellClassData BasicAttackInfo { get; } Property Value Type Description SpellClassData BuffManager Gets the manager for the buffs. Declaration public abstract BuffManager BuffManager { get; } Property Value Type Description BuffManager CombatType Gets the combat type. Declaration public abstract CombatTypes CombatType { get; } Property Value Type Description CombatTypes Direction Gets the direction it is facing towards/at. Declaration public abstract Vector3 Direction { get; } Property Value Type Description SharpDX.Vector3 Distance Gets the distance between the player. Declaration public abstract float Distance { get; } Property Value Type Description System.Single EffectiveArmorHealth Gets the health with armor. Declaration public abstract float EffectiveArmorHealth { get; } Property Value Type Description System.Single EffectiveMagicHealth Gets the health with magic resist. Declaration public abstract float EffectiveMagicHealth { get; } Property Value Type Description System.Single EncryptedID Gets the encryped server Object ID. Declaration public abstract int EncryptedID { get; } Property Value Type Description System.Int32 Gold Gets the amount of gold it has. Declaration public abstract float Gold { get; } Property Value Type Description System.Single Health Gets the health. Declaration public abstract float Health { get; } Property Value Type Description System.Single HealthBarScreenPosition Gets the position of the health on the screen. Declaration public abstract Vector2 HealthBarScreenPosition { get; } Property Value Type Description SharpDX.Vector2 Index Gets the index within the object manager. Declaration public abstract short Index { get; } Property Value Type Description System.Int16 IsAlive Checks whether if it is alive. Declaration public abstract bool IsAlive { get; } Property Value Type Description System.Boolean IsCastingSpell Checks whether if it is casting a spell. Declaration public abstract bool IsCastingSpell { get; } Property Value Type Description System.Boolean IsEnemy Declaration public bool IsEnemy { get; } Property Value Type Description System.Boolean IsJungle Declaration public bool IsJungle { get; } Property Value Type Description System.Boolean IsMe Checks whether if the champion is the player. Declaration public bool IsMe { get; } Property Value Type Description System.Boolean IsNeutral Declaration public bool IsNeutral { get; } Property Value Type Description System.Boolean IsTargetable Checks whether if is targetable by the player. Declaration public abstract bool IsTargetable { get; } Property Value Type Description System.Boolean IsVisible Checks whether if it is visible to the player's sight in-game. Declaration public abstract bool IsVisible { get; } Property Value Type Description System.Boolean Level Gets the current level. Declaration public abstract int Level { get; } Property Value Type Description System.Int32 MagicalShield Gets the amount of magical shield applied. Declaration public abstract float MagicalShield { get; } Property Value Type Description System.Single MagicResist Gets the magic resist. Declaration public abstract float MagicResist { get; } Property Value Type Description System.Single Mana Gets the mana. Declaration public abstract float Mana { get; } Property Value Type Description System.Single MaxHealth Gets the max health. Declaration public abstract float MaxHealth { get; } Property Value Type Description System.Single MaxMana Gets the max mana. Declaration public abstract float MaxMana { get; } Property Value Type Description System.Single ModelName Gets the character model name. For champions, it is the champion name. Declaration public abstract string ModelName { get; } Property Value Type Description System.String Name Gets the object's name. For player, it is their username. Declaration public abstract string Name { get; } Property Value Type Description System.String NetworkID Gets the ID on the network stream. Declaration public abstract uint NetworkID { get; } Property Value Type Description System.UInt32 NeutralShield Gets the amount of neutral shield applied. Declaration public abstract float NeutralShield { get; } Property Value Type Description System.Single OnMyTeam Declaration public bool OnMyTeam { get; } Property Value Type Description System.Boolean PhysicalShield Gets the amount of physical shields applied. Declaration public abstract float PhysicalShield { get; } Property Value Type Description System.Single Position Gets the current position. Declaration public abstract Vector3 Position { get; } Property Value Type Description SharpDX.Vector3 Team Gets the team. Declaration public abstract TeamFlag Team { get; } Property Value Type Description TeamFlag TrueAttackRange Gets the true attack range including bounding radius(hitbox radius) in 100th teemos. Declaration public abstract float TrueAttackRange { get; } Property Value Type Description System.Single UnitComponentInfo Gets the unit's component information. Declaration public abstract UnitComponentInfo UnitComponentInfo { get; } Property Value Type Description UnitComponentInfo UnitStats Gets the statistical information about the unit. Statistical values shown next to the champion icon at the bottom. Declaration public abstract UnitStats UnitStats { get; } Property Value Type Description UnitStats W2S Get the transformed WorldToScreen position. Declaration public abstract Vector2 W2S { get; } Property Value Type Description SharpDX.Vector2 WorldToMap Gets the current position in map on screen. Declaration public abstract Vector2 WorldToMap { get; } Property Value Type Description SharpDX.Vector2 Methods As<T>() Creates a new instance of desired type derived from GameObjectBase Declaration public T As<T>() where T : GameObjectBase Returns Type Description T Object of desired type T Type Parameters Name Description T Desired type DistanceTo(Vector3) Gets the distance between the given vector3 in-game position. Declaration public abstract float DistanceTo(Vector3 position) Parameters Type Name Description SharpDX.Vector3 position Returns Type Description System.Single GetAttackCastDelay() Gets the time between cast animation and the actual cast of the basic attack. Declaration public abstract float GetAttackCastDelay() Returns Type Description System.Single GetAttackDelay() Gets the time delay between basic attacks. Declaration public abstract float GetAttackDelay() Returns Type Description System.Single GetCurrentCastingSpell() Gets the current casting spell. Declaration public abstract SpellActiveEntry GetCurrentCastingSpell() Returns Type Description SpellActiveEntry GetSpellBook() Gets the spellbook. Declaration public abstract SpellBook GetSpellBook() Returns Type Description SpellBook IsObject(ObjectTypeFlag) Checks whether if it is an object type given. Declaration public bool IsObject(ObjectTypeFlag oTF) Parameters Type Name Description ObjectTypeFlag oTF Returns Type Description System.Boolean Log() Declaration public void Log() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.html": {
    "href": "api/Oasys.Common.GameObject.html",
    "title": "Namespace Oasys.Common.GameObject | Oasys SDK",
    "keywords": "Namespace Oasys.Common.GameObject Classes GameObjectBase"
  },
  "api/Oasys.Common.GameObject.ObjectClass.Hero.html": {
    "href": "api/Oasys.Common.GameObject.ObjectClass.Hero.html",
    "title": "Class Hero | Oasys SDK",
    "keywords": "Class Hero Inheritance System.Object GameObjectBase AIBaseClient AIHeroClient Hero Inherited Members AIHeroClient.ResourceType AIHeroClient.IsRecalling AIHeroClient.IsEmpoweredRecalling AIHeroClient.ExperiencePoints AIHeroClient.SpellUpgradePoints AIHeroClient.Inventory AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.ObjectClass Assembly : Oasys.Common.dll Syntax public class Hero : AIHeroClient Constructors Hero(Int32) Declaration public Hero(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.GetRecallTime(AIHeroClient) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsRecalling(AIHeroClient) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.ObjectClass.html": {
    "href": "api/Oasys.Common.GameObject.ObjectClass.html",
    "title": "Namespace Oasys.Common.GameObject.ObjectClass | Oasys SDK",
    "keywords": "Namespace Oasys.Common.GameObject.ObjectClass Classes Hero Inhibitor JungleMob Minion MissileClient Nexus Trap Turret Ward"
  },
  "api/Oasys.Common.GameObject.ObjectClass.Inhibitor.html": {
    "href": "api/Oasys.Common.GameObject.ObjectClass.Inhibitor.html",
    "title": "Class Inhibitor | Oasys SDK",
    "keywords": "Class Inhibitor Inheritance System.Object GameObjectBase AIBaseClient Inhibitor Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.ObjectClass Assembly : Oasys.Common.dll Syntax public class Inhibitor : AIBaseClient Constructors Inhibitor(Int32) Declaration public Inhibitor(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.ObjectClass.JungleMob.html": {
    "href": "api/Oasys.Common.GameObject.ObjectClass.JungleMob.html",
    "title": "Class JungleMob | Oasys SDK",
    "keywords": "Class JungleMob Inheritance System.Object GameObjectBase AIBaseClient AIMinionClient JungleMob Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.ObjectClass Assembly : Oasys.Common.dll Syntax public class JungleMob : AIMinionClient Constructors JungleMob(Int32) Declaration public JungleMob(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.ObjectClass.Minion.html": {
    "href": "api/Oasys.Common.GameObject.ObjectClass.Minion.html",
    "title": "Class Minion | Oasys SDK",
    "keywords": "Class Minion Inheritance System.Object GameObjectBase AIBaseClient AIMinionClient Minion Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.ObjectClass Assembly : Oasys.Common.dll Syntax public class Minion : AIMinionClient Constructors Minion(Int32) Declaration public Minion(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.ObjectClass.MissileClient.html": {
    "href": "api/Oasys.Common.GameObject.ObjectClass.MissileClient.html",
    "title": "Class MissileClient | Oasys SDK",
    "keywords": "Class MissileClient Inheritance System.Object SpellActiveEntry MissileClient Inherited Members SpellActiveEntry.SpellData SpellActiveEntry.SpellSlot SpellActiveEntry.MissileIndex SpellActiveEntry.CasterName SpellActiveEntry.SpellStartPosition SpellActiveEntry.SpellCurrentPosition SpellActiveEntry.SpellEndPosition SpellActiveEntry.WindupTime SpellActiveEntry.Cooldown SpellActiveEntry.IsBasicAttack SpellActiveEntry.IsSpecialAttack SpellActiveEntry.CastStartTime SpellActiveEntry.CastEndTime System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.GameObject.ObjectClass Assembly : Oasys.Common.dll Syntax public class MissileClient : SpellActiveEntry Constructors MissileClient(Int32) Declaration public MissileClient(int pointer) Parameters Type Name Description System.Int32 pointer Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.GameObject.ObjectClass.Nexus.html": {
    "href": "api/Oasys.Common.GameObject.ObjectClass.Nexus.html",
    "title": "Class Nexus | Oasys SDK",
    "keywords": "Class Nexus Inheritance System.Object GameObjectBase AIBaseClient Nexus Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.ObjectClass Assembly : Oasys.Common.dll Syntax public class Nexus : AIBaseClient Constructors Nexus(Int32) Declaration public Nexus(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.ObjectClass.Trap.html": {
    "href": "api/Oasys.Common.GameObject.ObjectClass.Trap.html",
    "title": "Class Trap | Oasys SDK",
    "keywords": "Class Trap Inheritance System.Object GameObjectBase AIBaseClient AIPlacementClient Trap Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.ObjectClass Assembly : Oasys.Common.dll Syntax public class Trap : AIPlacementClient Constructors Trap(Int32) Declaration public Trap(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.ObjectClass.Turret.html": {
    "href": "api/Oasys.Common.GameObject.ObjectClass.Turret.html",
    "title": "Class Turret | Oasys SDK",
    "keywords": "Class Turret Inheritance System.Object GameObjectBase AIBaseClient Turret Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.ObjectClass Assembly : Oasys.Common.dll Syntax public class Turret : AIBaseClient Constructors Turret(Int32) Declaration public Turret(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.GetTurretType(Turret) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.GameObject.ObjectClass.Ward.html": {
    "href": "api/Oasys.Common.GameObject.ObjectClass.Ward.html",
    "title": "Class Ward | Oasys SDK",
    "keywords": "Class Ward Inheritance System.Object GameObjectBase AIBaseClient AIPlacementClient Ward Inherited Members AIBaseClient.IsNativeObjectPointerValid AIBaseClient.AIManager AIBaseClient.GetSpellBook() AIBaseClient.GetAttackDelay() AIBaseClient.GetCalculatedAttackCastDelay(Single, Single) AIBaseClient.GetAttackCastDelay() AIBaseClient.IsCastingSpell AIBaseClient.GetCurrentCastingSpell() AIBaseClient.BasicAttackInfo AIBaseClient.EncryptedID AIBaseClient.Index AIBaseClient.Team AIBaseClient.BaseObjectTypesAssociated AIBaseClient.IsTeam(TeamFlag) AIBaseClient.Name AIBaseClient.NetworkID AIBaseClient.Position AIBaseClient.HealthBarScreenPosition AIBaseClient.IsVisible AIBaseClient.W2S AIBaseClient.WorldToMap AIBaseClient.Distance AIBaseClient.DistanceTo(Vector3) AIBaseClient.Mana AIBaseClient.MaxMana AIBaseClient.IsTargetable AIBaseClient.Health AIBaseClient.Armor AIBaseClient.MagicResist AIBaseClient.IsAlive AIBaseClient.EffectiveArmorHealth AIBaseClient.EffectiveMagicHealth AIBaseClient.MaxHealth AIBaseClient.NeutralShield AIBaseClient.MagicalShield AIBaseClient.PhysicalShield AIBaseClient.AttackRange AIBaseClient.TrueAttackRange AIBaseClient.UnitStats AIBaseClient.Gold AIBaseClient.Direction AIBaseClient.BuffManager AIBaseClient.CombatType AIBaseClient.IsCombatType(CombatTypes) AIBaseClient.UnitComponentInfo AIBaseClient.ModelName AIBaseClient.Level GameObjectBase.ToString() GameObjectBase.As<T>() GameObjectBase.Log() GameObjectBase.IsObject(ObjectTypeFlag) GameObjectBase.IsMe GameObjectBase.OnMyTeam GameObjectBase.IsEnemy GameObjectBase.IsNeutral GameObjectBase.IsJungle GameObjectBase.AttackSpeed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.GameObject.ObjectClass Assembly : Oasys.Common.dll Syntax public class Ward : AIPlacementClient Constructors Ward(Int32) Declaration public Ward(int handlePointer) Parameters Type Name Description System.Int32 handlePointer Extension Methods Extensions.In<T>(T, T[]) Extensions.Distance(GameObjectBase, GameObjectBase) Extensions.Distance(GameObjectBase, Vector3) Extensions.Distance(GameObjectBase, Vector2) Extensions.DistanceSquared(GameObjectBase, GameObjectBase) Extensions.DistanceSquared(GameObjectBase, Vector3) Extensions.DistanceSquared(GameObjectBase, Vector2) Extensions.DistanceToPlayer(GameObjectBase) Extensions.IsBothFacing(GameObjectBase, GameObjectBase) Extensions.IsFacing(GameObjectBase, GameObjectBase) Extensions.IsMelee(GameObjectBase) Extensions.IsValidTarget(GameObjectBase, Single, Boolean, Vector3)"
  },
  "api/Oasys.Common.html": {
    "href": "api/Oasys.Common.html",
    "title": "Namespace Oasys.Common | Oasys SDK",
    "keywords": "Namespace Oasys.Common Classes EngineManager LeagueNativeRendererManager OasysModuleEntryPoint ObjectManagerExport RenderFactoryProvider Enums EngineManager.OrderType LeagueNativeRendererManager.WindowState"
  },
  "api/Oasys.Common.LeagueNativeRendererManager.html": {
    "href": "api/Oasys.Common.LeagueNativeRendererManager.html",
    "title": "Class LeagueNativeRendererManager | Oasys SDK",
    "keywords": "Class LeagueNativeRendererManager Inheritance System.Object LeagueNativeRendererManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common Assembly : Oasys.Common.dll Syntax public class LeagueNativeRendererManager Properties IsWindowFocused Checks whether if the game window is focused. Declaration public static bool IsWindowFocused { get; } Property Value Type Description System.Boolean Methods GetGameScreenResolution() Gets the game's screen resolution with scalings applied. Declaration public static Vector2 GetGameScreenResolution() Returns Type Description SharpDX.Vector2 GetGameToWindowScreenScalingX() Gets the operating system's x scaling applied to the game. Declaration public static float GetGameToWindowScreenScalingX() Returns Type Description System.Single GetGameToWindowScreenScalingY() Gets the operating system's y scaling applied to the game. Declaration public static float GetGameToWindowScreenScalingY() Returns Type Description System.Single GetProjectionMatrix() Gets the game's projection matrix. Declaration public static Matrix GetProjectionMatrix() Returns Type Description SharpDX.Matrix GetViewMatrix() Gets the game's view matrix. Declaration public static Matrix GetViewMatrix() Returns Type Description SharpDX.Matrix GetViewProjectionMatrix() Gets the game's view projection matrix. Declaration public static Matrix GetViewProjectionMatrix() Returns Type Description SharpDX.Matrix GetWindowsScreenResolution() Gets the monitor screen resolution with scalings applied. Declaration public static Vector2 GetWindowsScreenResolution() Returns Type Description SharpDX.Vector2 GetWindowsScreenScalingFactor() Gets the operating system's scaling factor. Declaration public static double GetWindowsScreenScalingFactor() Returns Type Description System.Double GetWindowState() Gets the game's window state. Declaration public static LeagueNativeRendererManager.WindowState GetWindowState() Returns Type Description LeagueNativeRendererManager.WindowState WorldToScreen(Vector3) Performs world to screen coordinate translation. Declaration public static Vector2 WorldToScreen(Vector3 pos) Parameters Type Name Description SharpDX.Vector3 pos Returns Type Description SharpDX.Vector2 WorldToScreenSpell(Vector3) Performs world to screen coordinate translation for spell positions that goes beyond the screen resolution. Declaration public static Vector2 WorldToScreenSpell(Vector3 pos) Parameters Type Name Description SharpDX.Vector3 pos Returns Type Description SharpDX.Vector2 Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.LeagueNativeRendererManager.WindowState.html": {
    "href": "api/Oasys.Common.LeagueNativeRendererManager.WindowState.html",
    "title": "Enum LeagueNativeRendererManager.WindowState | Oasys SDK",
    "keywords": "Enum LeagueNativeRendererManager.WindowState Namespace : Oasys.Common Assembly : Oasys.Common.dll Syntax public enum WindowState Fields Name Description Borderless FullScreen Windowed Extension Methods Extensions.ClearFlags<LeagueNativeRendererManager.WindowState>(LeagueNativeRendererManager.WindowState) Extensions.GetFlagDescription<LeagueNativeRendererManager.WindowState>() Extensions.GetFlags<LeagueNativeRendererManager.WindowState>() Extensions.In<LeagueNativeRendererManager.WindowState>(LeagueNativeRendererManager.WindowState[]) Extensions.SetFlags<LeagueNativeRendererManager.WindowState>(LeagueNativeRendererManager.WindowState, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Logic.Alerts.BaronAlerter.html": {
    "href": "api/Oasys.Common.Logic.Alerts.BaronAlerter.html",
    "title": "Class BaronAlerter | Oasys SDK",
    "keywords": "Class BaronAlerter Inheritance System.Object BaronAlerter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic.Alerts Assembly : Oasys.Common.dll Syntax public class BaronAlerter Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.Alerts.DragonAlerter.html": {
    "href": "api/Oasys.Common.Logic.Alerts.DragonAlerter.html",
    "title": "Class DragonAlerter | Oasys SDK",
    "keywords": "Class DragonAlerter Inheritance System.Object DragonAlerter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic.Alerts Assembly : Oasys.Common.dll Syntax public class DragonAlerter Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.Alerts.GankAlerter.html": {
    "href": "api/Oasys.Common.Logic.Alerts.GankAlerter.html",
    "title": "Class GankAlerter | Oasys SDK",
    "keywords": "Class GankAlerter Inheritance System.Object GankAlerter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic.Alerts Assembly : Oasys.Common.dll Syntax public class GankAlerter Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.Alerts.html": {
    "href": "api/Oasys.Common.Logic.Alerts.html",
    "title": "Namespace Oasys.Common.Logic.Alerts | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Logic.Alerts Classes BaronAlerter DragonAlerter GankAlerter"
  },
  "api/Oasys.Common.Logic.DamageCalculator.BasicAttackDamage.html": {
    "href": "api/Oasys.Common.Logic.DamageCalculator.BasicAttackDamage.html",
    "title": "Enum DamageCalculator.BasicAttackDamage | Oasys SDK",
    "keywords": "Enum DamageCalculator.BasicAttackDamage Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public enum BasicAttackDamage Fields Name Description Maximum Minimum Next Extension Methods Extensions.ClearFlags<DamageCalculator.BasicAttackDamage>(DamageCalculator.BasicAttackDamage) Extensions.GetFlagDescription<DamageCalculator.BasicAttackDamage>() Extensions.GetFlags<DamageCalculator.BasicAttackDamage>() Extensions.In<DamageCalculator.BasicAttackDamage>(DamageCalculator.BasicAttackDamage[]) Extensions.SetFlags<DamageCalculator.BasicAttackDamage>(DamageCalculator.BasicAttackDamage, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Logic.DamageCalculator.DamageInfo-1.html": {
    "href": "api/Oasys.Common.Logic.DamageCalculator.DamageInfo-1.html",
    "title": "Class DamageCalculator.DamageInfo<TObject> | Oasys SDK",
    "keywords": "Class DamageCalculator.DamageInfo<TObject> Inheritance System.Object DamageCalculator.DamageInfo<TObject> DamageCalculator.MagicDamageInfo<TObject> DamageCalculator.MixedDamageInfo<TObject> DamageCalculator.PhysicalDamageInfo<TObject> DamageCalculator.TrueDamageInfo<TObject> Implements System.IEquatable < DamageCalculator.DamageInfo <TObject>> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public class DamageInfo<TObject> : IEquatable<DamageCalculator.DamageInfo<TObject>> where TObject : GameObjectBase Type Parameters Name Description TObject Constructors DamageInfo(TObject, TObject, Single, Single, Single) Declaration public DamageInfo(TObject attacker, TObject target, float physicalDamage, float magicDamage, float trueDamage) Parameters Type Name Description TObject attacker TObject target System.Single physicalDamage System.Single magicDamage System.Single trueDamage Properties attacker Declaration public TObject attacker { get; set; } Property Value Type Description TObject magicDamage Declaration public float magicDamage { get; set; } Property Value Type Description System.Single physicalDamage Declaration public float physicalDamage { get; set; } Property Value Type Description System.Single target Declaration public TObject target { get; set; } Property Value Type Description TObject trueDamage Declaration public float trueDamage { get; set; } Property Value Type Description System.Single Implements System.IEquatable<T> Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.DamageCalculator.html": {
    "href": "api/Oasys.Common.Logic.DamageCalculator.html",
    "title": "Class DamageCalculator | Oasys SDK",
    "keywords": "Class DamageCalculator Inheritance System.Object DamageCalculator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public static class DamageCalculator Methods CalculateActualDamage(Single, Single, Single, Single, Single, Single, Single, Single, Boolean, Int32) Declaration public static float CalculateActualDamage(float armorMod, float physicalDamageReductionMod, float magicResistMod, float magicDamageReductionMod, float physicalDamage, float magicDamage, float trueDamage, float generalDamageReductionMod, bool hasPtaBuff, int attackerLevel) Parameters Type Name Description System.Single armorMod System.Single physicalDamageReductionMod System.Single magicResistMod System.Single magicDamageReductionMod System.Single physicalDamage System.Single magicDamage System.Single trueDamage System.Single generalDamageReductionMod System.Boolean hasPtaBuff System.Int32 attackerLevel Returns Type Description System.Single CalculateActualDamage<TObject>(TObject, TObject, Single) Declaration public static float CalculateActualDamage<TObject>(TObject attacker, TObject target, float physicalDamage) where TObject : GameObjectBase Parameters Type Name Description TObject attacker TObject target System.Single physicalDamage Returns Type Description System.Single Type Parameters Name Description TObject CalculateActualDamage<TObject>(TObject, TObject, Single, Single, Single) Declaration public static float CalculateActualDamage<TObject>(TObject attacker, TObject target, float physicalDamage, float magicDamage, float trueDamage) where TObject : GameObjectBase Parameters Type Name Description TObject attacker TObject target System.Single physicalDamage System.Single magicDamage System.Single trueDamage Returns Type Description System.Single Type Parameters Name Description TObject CalculateActualDamage<TDamageInfo, TObject>(TDamageInfo) Declaration public static float CalculateActualDamage<TDamageInfo, TObject>(TDamageInfo damageInfo) where TDamageInfo : DamageCalculator.DamageInfo<TObject> where TObject : GameObjectBase Parameters Type Name Description TDamageInfo damageInfo Returns Type Description System.Single Type Parameters Name Description TDamageInfo TObject GetBasicAttackDamage(GameObjectBase, GameObjectBase, DamageCalculator.BasicAttackDamage) Declaration public static float GetBasicAttackDamage(GameObjectBase attacker, GameObjectBase target, DamageCalculator.BasicAttackDamage damagePossibility) Parameters Type Name Description GameObjectBase attacker GameObjectBase target DamageCalculator.BasicAttackDamage damagePossibility Returns Type Description System.Single GetGeneralDamageReductionModifier<T>(T) Declaration public static float GetGeneralDamageReductionModifier<T>(T target) where T : GameObjectBase Parameters Type Name Description T target Returns Type Description System.Single Type Parameters Name Description T GetMagicDamageReductionModifier<T>(T) Declaration public static float GetMagicDamageReductionModifier<T>(T target) where T : GameObjectBase Parameters Type Name Description T target Returns Type Description System.Single Type Parameters Name Description T GetMaximumBasicAttackDamage(GameObjectBase, GameObjectBase) Declaration public static float GetMaximumBasicAttackDamage(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single GetMedianBasicAttackDamage(GameObjectBase, GameObjectBase) Declaration public static float GetMedianBasicAttackDamage(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single GetMinimumBasicAttackDamage(GameObjectBase, GameObjectBase) Declaration public static float GetMinimumBasicAttackDamage(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single GetNextBasicAttackDamage(GameObjectBase, GameObjectBase) Declaration public static float GetNextBasicAttackDamage(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single GetPhysicalDamageReductionModifier<T>(T) Declaration public static float GetPhysicalDamageReductionModifier<T>(T target) where T : GameObjectBase Parameters Type Name Description T target Returns Type Description System.Single Type Parameters Name Description T GetTargetHealthAfterBasicAttack(GameObjectBase, GameObjectBase) Declaration public static float GetTargetHealthAfterBasicAttack(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single"
  },
  "api/Oasys.Common.Logic.DamageCalculator.MagicDamageInfo-1.html": {
    "href": "api/Oasys.Common.Logic.DamageCalculator.MagicDamageInfo-1.html",
    "title": "Class DamageCalculator.MagicDamageInfo<TObject> | Oasys SDK",
    "keywords": "Class DamageCalculator.MagicDamageInfo<TObject> Inheritance System.Object DamageCalculator.DamageInfo <TObject> DamageCalculator.MagicDamageInfo<TObject> Implements System.IEquatable < DamageCalculator.DamageInfo <TObject>> System.IEquatable < DamageCalculator.MagicDamageInfo <TObject>> Inherited Members DamageCalculator.DamageInfo<TObject>.attacker DamageCalculator.DamageInfo<TObject>.target DamageCalculator.DamageInfo<TObject>.physicalDamage DamageCalculator.DamageInfo<TObject>.magicDamage DamageCalculator.DamageInfo<TObject>.trueDamage System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public class MagicDamageInfo<TObject> : DamageCalculator.DamageInfo<TObject>, IEquatable<DamageCalculator.DamageInfo<TObject>>, IEquatable<DamageCalculator.MagicDamageInfo<TObject>> where TObject : GameObjectBase Type Parameters Name Description TObject Constructors MagicDamageInfo(TObject, TObject, Single) Declaration public MagicDamageInfo(TObject attacker, TObject target, float magicDamage) Parameters Type Name Description TObject attacker TObject target System.Single magicDamage Implements System.IEquatable<T> System.IEquatable<T> Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.DamageCalculator.MixedDamageInfo-1.html": {
    "href": "api/Oasys.Common.Logic.DamageCalculator.MixedDamageInfo-1.html",
    "title": "Class DamageCalculator.MixedDamageInfo<TObject> | Oasys SDK",
    "keywords": "Class DamageCalculator.MixedDamageInfo<TObject> Inheritance System.Object DamageCalculator.DamageInfo <TObject> DamageCalculator.MixedDamageInfo<TObject> Implements System.IEquatable < DamageCalculator.DamageInfo <TObject>> System.IEquatable < DamageCalculator.MixedDamageInfo <TObject>> Inherited Members DamageCalculator.DamageInfo<TObject>.attacker DamageCalculator.DamageInfo<TObject>.target DamageCalculator.DamageInfo<TObject>.physicalDamage DamageCalculator.DamageInfo<TObject>.magicDamage DamageCalculator.DamageInfo<TObject>.trueDamage System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public class MixedDamageInfo<TObject> : DamageCalculator.DamageInfo<TObject>, IEquatable<DamageCalculator.DamageInfo<TObject>>, IEquatable<DamageCalculator.MixedDamageInfo<TObject>> where TObject : GameObjectBase Type Parameters Name Description TObject Constructors MixedDamageInfo(TObject, TObject, Single, Single) Declaration public MixedDamageInfo(TObject attacker, TObject target, float physicalDamage, float magicDamage) Parameters Type Name Description TObject attacker TObject target System.Single physicalDamage System.Single magicDamage Implements System.IEquatable<T> System.IEquatable<T> Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.DamageCalculator.PhysicalDamageInfo-1.html": {
    "href": "api/Oasys.Common.Logic.DamageCalculator.PhysicalDamageInfo-1.html",
    "title": "Class DamageCalculator.PhysicalDamageInfo<TObject> | Oasys SDK",
    "keywords": "Class DamageCalculator.PhysicalDamageInfo<TObject> Inheritance System.Object DamageCalculator.DamageInfo <TObject> DamageCalculator.PhysicalDamageInfo<TObject> Implements System.IEquatable < DamageCalculator.DamageInfo <TObject>> System.IEquatable < DamageCalculator.PhysicalDamageInfo <TObject>> Inherited Members DamageCalculator.DamageInfo<TObject>.attacker DamageCalculator.DamageInfo<TObject>.target DamageCalculator.DamageInfo<TObject>.physicalDamage DamageCalculator.DamageInfo<TObject>.magicDamage DamageCalculator.DamageInfo<TObject>.trueDamage System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public class PhysicalDamageInfo<TObject> : DamageCalculator.DamageInfo<TObject>, IEquatable<DamageCalculator.DamageInfo<TObject>>, IEquatable<DamageCalculator.PhysicalDamageInfo<TObject>> where TObject : GameObjectBase Type Parameters Name Description TObject Constructors PhysicalDamageInfo(TObject, TObject, Single) Declaration public PhysicalDamageInfo(TObject attacker, TObject target, float physicalDamage) Parameters Type Name Description TObject attacker TObject target System.Single physicalDamage Implements System.IEquatable<T> System.IEquatable<T> Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.DamageCalculator.TrueDamageInfo-1.html": {
    "href": "api/Oasys.Common.Logic.DamageCalculator.TrueDamageInfo-1.html",
    "title": "Class DamageCalculator.TrueDamageInfo<TObject> | Oasys SDK",
    "keywords": "Class DamageCalculator.TrueDamageInfo<TObject> Inheritance System.Object DamageCalculator.DamageInfo <TObject> DamageCalculator.TrueDamageInfo<TObject> Implements System.IEquatable < DamageCalculator.DamageInfo <TObject>> System.IEquatable < DamageCalculator.TrueDamageInfo <TObject>> Inherited Members DamageCalculator.DamageInfo<TObject>.attacker DamageCalculator.DamageInfo<TObject>.target DamageCalculator.DamageInfo<TObject>.physicalDamage DamageCalculator.DamageInfo<TObject>.magicDamage DamageCalculator.DamageInfo<TObject>.trueDamage System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public class TrueDamageInfo<TObject> : DamageCalculator.DamageInfo<TObject>, IEquatable<DamageCalculator.DamageInfo<TObject>>, IEquatable<DamageCalculator.TrueDamageInfo<TObject>> where TObject : GameObjectBase Type Parameters Name Description TObject Constructors TrueDamageInfo(TObject, TObject, Single) Declaration public TrueDamageInfo(TObject attacker, TObject target, float trueDamage) Parameters Type Name Description TObject attacker TObject target System.Single trueDamage Implements System.IEquatable<T> System.IEquatable<T> Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.DamageType.html": {
    "href": "api/Oasys.Common.Logic.DamageType.html",
    "title": "Enum DamageType | Oasys SDK",
    "keywords": "Enum DamageType Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public enum DamageType Fields Name Description Magical Physical True Extension Methods Extensions.ClearFlags<DamageType>(DamageType) Extensions.GetFlagDescription<DamageType>() Extensions.GetFlags<DamageType>() Extensions.In<DamageType>(DamageType[]) Extensions.SetFlags<DamageType>(DamageType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Logic.Helpers.AllPlayerData.html": {
    "href": "api/Oasys.Common.Logic.Helpers.AllPlayerData.html",
    "title": "Class AllPlayerData | Oasys SDK",
    "keywords": "Class AllPlayerData Inheritance System.Object AllPlayerData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic.Helpers Assembly : Oasys.Common.dll Syntax public class AllPlayerData Properties AllPlayers Declaration public static IList<AllPlayerData.PlayerData> AllPlayers { get; set; } Property Value Type Description System.Collections.Generic.IList < AllPlayerData.PlayerData > Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.Helpers.AllPlayerData.PlayerData.html": {
    "href": "api/Oasys.Common.Logic.Helpers.AllPlayerData.PlayerData.html",
    "title": "Class AllPlayerData.PlayerData | Oasys SDK",
    "keywords": "Class AllPlayerData.PlayerData Inheritance System.Object AllPlayerData.PlayerData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic.Helpers Assembly : Oasys.Common.dll Syntax public class PlayerData Properties ChampionName Declaration public string ChampionName { get; set; } Property Value Type Description System.String IsBot Declaration public bool IsBot { get; set; } Property Value Type Description System.Boolean IsDead Declaration public bool IsDead { get; set; } Property Value Type Description System.Boolean Level Declaration public int Level { get; set; } Property Value Type Description System.Int32 RawChampionName Declaration public string RawChampionName { get; set; } Property Value Type Description System.String RespawnTimer Declaration public float RespawnTimer { get; set; } Property Value Type Description System.Single RolePosition Declaration public string RolePosition { get; set; } Property Value Type Description System.String SkinID Declaration public int SkinID { get; set; } Property Value Type Description System.Int32 SummonerName Declaration public string SummonerName { get; set; } Property Value Type Description System.String Team Declaration public string Team { get; set; } Property Value Type Description System.String Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.Helpers.AttackSpeedAPIHelper.html": {
    "href": "api/Oasys.Common.Logic.Helpers.AttackSpeedAPIHelper.html",
    "title": "Class AttackSpeedAPIHelper | Oasys SDK",
    "keywords": "Class AttackSpeedAPIHelper Inheritance System.Object AttackSpeedAPIHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic.Helpers Assembly : Oasys.Common.dll Syntax public static class AttackSpeedAPIHelper Methods RaiseAPIHelperEvent() Declaration public static void RaiseAPIHelperEvent()"
  },
  "api/Oasys.Common.Logic.Helpers.html": {
    "href": "api/Oasys.Common.Logic.Helpers.html",
    "title": "Namespace Oasys.Common.Logic.Helpers | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Logic.Helpers Classes AllPlayerData AllPlayerData.PlayerData AttackSpeedAPIHelper"
  },
  "api/Oasys.Common.Logic.html": {
    "href": "api/Oasys.Common.Logic.html",
    "title": "Namespace Oasys.Common.Logic | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Logic Classes DamageCalculator DamageCalculator.DamageInfo<TObject> DamageCalculator.MagicDamageInfo<TObject> DamageCalculator.MixedDamageInfo<TObject> DamageCalculator.PhysicalDamageInfo<TObject> DamageCalculator.TrueDamageInfo<TObject> Orbwalker Orbwalker.OrbSettings TargetSelector Enums DamageCalculator.BasicAttackDamage DamageType OrbwalkingMode Delegates Orbwalker.BasicAttackCommand"
  },
  "api/Oasys.Common.Logic.Orbwalker.BasicAttackCommand.html": {
    "href": "api/Oasys.Common.Logic.Orbwalker.BasicAttackCommand.html",
    "title": "Delegate Orbwalker.BasicAttackCommand | Oasys SDK",
    "keywords": "Delegate Orbwalker.BasicAttackCommand Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public delegate void BasicAttackCommand(float gameTime, GameObjectBase target); Parameters Type Name Description System.Single gameTime GameObjectBase target Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.Orbwalker.html": {
    "href": "api/Oasys.Common.Logic.Orbwalker.html",
    "title": "Class Orbwalker | Oasys SDK",
    "keywords": "Class Orbwalker Inheritance System.Object Orbwalker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public static class Orbwalker Methods GetTarget(OrbwalkingMode) Declaration public static GameObjectBase GetTarget(OrbwalkingMode orbwalkingMode) Parameters Type Name Description OrbwalkingMode orbwalkingMode Returns Type Description GameObjectBase GetTarget(OrbwalkingMode, Single) Declaration public static GameObjectBase GetTarget(OrbwalkingMode orbwalkingMode, float range = 0F) Parameters Type Name Description OrbwalkingMode orbwalkingMode System.Single range Returns Type Description GameObjectBase Events OnOrbwalkerAfterBasicAttack Declaration public static event Orbwalker.BasicAttackCommand OnOrbwalkerAfterBasicAttack Event Type Type Description Orbwalker.BasicAttackCommand OnOrbwalkerBasicAttack Declaration public static event Orbwalker.BasicAttackCommand OnOrbwalkerBasicAttack Event Type Type Description Orbwalker.BasicAttackCommand"
  },
  "api/Oasys.Common.Logic.Orbwalker.OrbSettings.html": {
    "href": "api/Oasys.Common.Logic.Orbwalker.OrbSettings.html",
    "title": "Class Orbwalker.OrbSettings | Oasys SDK",
    "keywords": "Class Orbwalker.OrbSettings Inheritance System.Object Orbwalker.OrbSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public static class OrbSettings Properties AllowAttacking Declaration public static bool AllowAttacking { get; set; } Property Value Type Description System.Boolean AllowMoving Declaration public static bool AllowMoving { get; set; } Property Value Type Description System.Boolean AttackCooldownRemaining Declaration public static float AttackCooldownRemaining { get; } Property Value Type Description System.Single CanBasicAttack Declaration public static bool CanBasicAttack { get; } Property Value Type Description System.Boolean CanMove Declaration public static bool CanMove { get; } Property Value Type Description System.Boolean ForceMovePosition Declaration public static Vector2 ForceMovePosition { get; set; } Property Value Type Description SharpDX.Vector2 HarassTarget Declaration public static GameObjectBase HarassTarget { get; } Property Value Type Description GameObjectBase HeroTarget Declaration public static Hero HeroTarget { get; } Property Value Type Description Hero LaneClearTarget Declaration public static GameObjectBase LaneClearTarget { get; set; } Property Value Type Description GameObjectBase LastBasicAttack Declaration public static float LastBasicAttack { get; set; } Property Value Type Description System.Single LastHitTarget Declaration public static GameObjectBase LastHitTarget { get; set; } Property Value Type Description GameObjectBase LastMove Declaration public static float LastMove { get; } Property Value Type Description System.Single MixedTarget Declaration public static GameObjectBase MixedTarget { get; set; } Property Value Type Description GameObjectBase OrbwalkingMode Declaration public static OrbwalkingMode OrbwalkingMode { get; set; } Property Value Type Description OrbwalkingMode PreviousMinion Declaration public static Minion PreviousMinion { get; } Property Value Type Description Minion SelectedHero Declaration public static GameObjectBase SelectedHero { get; set; } Property Value Type Description GameObjectBase SelectedTarget Declaration public static GameObjectBase SelectedTarget { get; set; } Property Value Type Description GameObjectBase TargetChampionsOnly Declaration public static bool TargetChampionsOnly { get; set; } Property Value Type Description System.Boolean TargetHero Declaration public static GameObjectBase TargetHero { get; } Property Value Type Description GameObjectBase"
  },
  "api/Oasys.Common.Logic.OrbwalkingMode.html": {
    "href": "api/Oasys.Common.Logic.OrbwalkingMode.html",
    "title": "Enum OrbwalkingMode | Oasys SDK",
    "keywords": "Enum OrbwalkingMode Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public enum OrbwalkingMode Fields Name Description Combo The orbwalker will only attack champions. Evade The orbwalker will not attack while evading. Freeze The orbwalker will only last hit minions as late as possible. LaneClear The orbwalker will clear the lane of minions as fast as possible while attempting to get the last hit. But also targetting champions, monsters, turrrets, etc... LastHit The orbwalker will only last hit minions. Mixed The orbwalker will alternate between last hitting and auto attacking champions. Move The orbwalker will only move. None The orbwalker does nothing. Extension Methods Extensions.ClearFlags<OrbwalkingMode>(OrbwalkingMode) Extensions.GetFlagDescription<OrbwalkingMode>() Extensions.GetFlags<OrbwalkingMode>() Extensions.In<OrbwalkingMode>(OrbwalkingMode[]) Extensions.SetFlags<OrbwalkingMode>(OrbwalkingMode, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Logic.TargetSelector.html": {
    "href": "api/Oasys.Common.Logic.TargetSelector.html",
    "title": "Class TargetSelector | Oasys SDK",
    "keywords": "Class TargetSelector Inheritance System.Object TargetSelector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic Assembly : Oasys.Common.dll Syntax public static class TargetSelector Methods AttacksToKill(GameObjectBase) Declaration public static float AttacksToKill(GameObjectBase target) Parameters Type Name Description GameObjectBase target Returns Type Description System.Single GetBestHeroTarget(GameObjectBase) Declaration public static GameObjectBase GetBestHeroTarget(GameObjectBase selectedHero = null) Parameters Type Name Description GameObjectBase selectedHero Returns Type Description GameObjectBase GetBestHeroTarget(GameObjectBase, Func<GameObjectBase, Boolean>) Declaration public static GameObjectBase GetBestHeroTarget(GameObjectBase selectedHero, Func<GameObjectBase, bool> isInRange) Parameters Type Name Description GameObjectBase selectedHero System.Func < GameObjectBase , System.Boolean > isInRange Returns Type Description GameObjectBase Initialize() Declaration public static void Initialize() IsAttackable(GameObjectBase, Boolean) Declaration public static bool IsAttackable(GameObjectBase target, bool teamCheck = true) Parameters Type Name Description GameObjectBase target System.Boolean teamCheck Returns Type Description System.Boolean IsDisplacementImmune(GameObjectBase) Declaration public static bool IsDisplacementImmune(GameObjectBase target) Parameters Type Name Description GameObjectBase target Returns Type Description System.Boolean IsInRange(GameObjectBase) Declaration public static bool IsInRange(GameObjectBase target) Parameters Type Name Description GameObjectBase target Returns Type Description System.Boolean IsInvulnerable(GameObjectBase, DamageType, Boolean) Declaration public static bool IsInvulnerable(GameObjectBase target, DamageType damageType, bool ignoreShields = true) Parameters Type Name Description GameObjectBase target DamageType damageType System.Boolean ignoreShields Returns Type Description System.Boolean IsKillable(GameObjectBase, Func<GameObjectBase, Boolean>) Declaration public static bool IsKillable(GameObjectBase target, Func<GameObjectBase, bool> isInRange) Parameters Type Name Description GameObjectBase target System.Func < GameObjectBase , System.Boolean > isInRange Returns Type Description System.Boolean IsTotalCCImmune(GameObjectBase) Declaration public static bool IsTotalCCImmune(GameObjectBase target) Parameters Type Name Description GameObjectBase target Returns Type Description System.Boolean ShouldAttackMinion(GameObjectBase) Declaration public static bool ShouldAttackMinion(GameObjectBase minion) Parameters Type Name Description GameObjectBase minion Returns Type Description System.Boolean"
  },
  "api/Oasys.Common.Logic.Trackers.html": {
    "href": "api/Oasys.Common.Logic.Trackers.html",
    "title": "Namespace Oasys.Common.Logic.Trackers | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Logic.Trackers Classes TrapTracker WardTracker"
  },
  "api/Oasys.Common.Logic.Trackers.TrapTracker.html": {
    "href": "api/Oasys.Common.Logic.Trackers.TrapTracker.html",
    "title": "Class TrapTracker | Oasys SDK",
    "keywords": "Class TrapTracker Inheritance System.Object TrapTracker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic.Trackers Assembly : Oasys.Common.dll Syntax public class TrapTracker Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Logic.Trackers.WardTracker.html": {
    "href": "api/Oasys.Common.Logic.Trackers.WardTracker.html",
    "title": "Class WardTracker | Oasys SDK",
    "keywords": "Class WardTracker Inheritance System.Object WardTracker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Logic.Trackers Assembly : Oasys.Common.dll Syntax public class WardTracker Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Menu.html": {
    "href": "api/Oasys.Common.Menu.html",
    "title": "Namespace Oasys.Common.Menu | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Menu Classes MenuManagerProvider Tab TabItem Delegates TabItem.TabItemChanged"
  },
  "api/Oasys.Common.Menu.ItemComponents.Counter.html": {
    "href": "api/Oasys.Common.Menu.ItemComponents.Counter.html",
    "title": "Class Counter | Oasys SDK",
    "keywords": "Class Counter Controls and sets a value. Inheritance System.Object TabItem Counter Inherited Members TabItem.Title TabItem.TabName TabItem.OnTabItemChange System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Menu.ItemComponents Assembly : Oasys.Common.dll Syntax public class Counter : TabItem Properties MaxValue Declaration public int MaxValue { get; set; } Property Value Type Description System.Int32 MinValue Declaration public int MinValue { get; set; } Property Value Type Description System.Int32 Value Declaration public int Value { get; set; } Property Value Type Description System.Int32 ValueFrequency Declaration public int ValueFrequency { get; set; } Property Value Type Description System.Int32 Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Menu.ItemComponents.html": {
    "href": "api/Oasys.Common.Menu.ItemComponents.html",
    "title": "Namespace Oasys.Common.Menu.ItemComponents | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Menu.ItemComponents Classes Counter Controls and sets a value. InfoDisplay Displays the set information. KeyBinding ModeDisplay Displays and controls a set of modes. Switch A On/Off switch."
  },
  "api/Oasys.Common.Menu.ItemComponents.InfoDisplay.html": {
    "href": "api/Oasys.Common.Menu.ItemComponents.InfoDisplay.html",
    "title": "Class InfoDisplay | Oasys SDK",
    "keywords": "Class InfoDisplay Displays the set information. Inheritance System.Object TabItem InfoDisplay Inherited Members TabItem.Title TabItem.TabName TabItem.OnTabItemChange System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Menu.ItemComponents Assembly : Oasys.Common.dll Syntax public class InfoDisplay : TabItem Properties Information Declaration public string Information { get; set; } Property Value Type Description System.String Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Menu.ItemComponents.KeyBinding.html": {
    "href": "api/Oasys.Common.Menu.ItemComponents.KeyBinding.html",
    "title": "Class KeyBinding | Oasys SDK",
    "keywords": "Class KeyBinding Inheritance System.Object TabItem KeyBinding Inherited Members TabItem.Title TabItem.TabName TabItem.OnTabItemChange System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Menu.ItemComponents Assembly : Oasys.Common.dll Syntax public class KeyBinding : TabItem Constructors KeyBinding() Declaration public KeyBinding() Properties Keys Declaration public List<Keys> Keys { get; } Property Value Type Description System.Collections.Generic.List < System.Windows.Forms.Keys > SelectedKey Declaration public Keys SelectedKey { get; set; } Property Value Type Description System.Windows.Forms.Keys Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Menu.ItemComponents.ModeDisplay.html": {
    "href": "api/Oasys.Common.Menu.ItemComponents.ModeDisplay.html",
    "title": "Class ModeDisplay | Oasys SDK",
    "keywords": "Class ModeDisplay Displays and controls a set of modes. Inheritance System.Object TabItem ModeDisplay Inherited Members TabItem.Title TabItem.TabName TabItem.OnTabItemChange System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Menu.ItemComponents Assembly : Oasys.Common.dll Syntax public class ModeDisplay : TabItem Properties ModeNames Declaration public List<string> ModeNames { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > SelectedModeName Declaration public string SelectedModeName { get; set; } Property Value Type Description System.String Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Menu.ItemComponents.Switch.html": {
    "href": "api/Oasys.Common.Menu.ItemComponents.Switch.html",
    "title": "Class Switch | Oasys SDK",
    "keywords": "Class Switch A On/Off switch. Inheritance System.Object TabItem Switch Inherited Members TabItem.Title TabItem.TabName TabItem.OnTabItemChange System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Menu.ItemComponents Assembly : Oasys.Common.dll Syntax public class Switch : TabItem Properties IsOn Declaration public bool IsOn { get; set; } Property Value Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Menu.MenuManagerProvider.html": {
    "href": "api/Oasys.Common.Menu.MenuManagerProvider.html",
    "title": "Class MenuManagerProvider | Oasys SDK",
    "keywords": "Class MenuManagerProvider Inheritance System.Object MenuManagerProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Menu Assembly : Oasys.Common.dll Syntax public static class MenuManagerProvider Methods AddTab(Tab) Declaration public static int AddTab(Tab tb) Parameters Type Name Description Tab tb Returns Type Description System.Int32 GetTab(Func<Tab, Boolean>) Declaration public static Tab GetTab(Func<Tab, bool> predicate) Parameters Type Name Description System.Func < Tab , System.Boolean > predicate Returns Type Description Tab GetTab(Int32) Declaration public static Tab GetTab(int index) Parameters Type Name Description System.Int32 index Returns Type Description Tab GetTab(String) Declaration public static Tab GetTab(string itemName) Parameters Type Name Description System.String itemName Returns Type Description Tab"
  },
  "api/Oasys.Common.Menu.Tab.html": {
    "href": "api/Oasys.Common.Menu.Tab.html",
    "title": "Class Tab | Oasys SDK",
    "keywords": "Class Tab Inheritance System.Object Tab Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Menu Assembly : Oasys.Common.dll Syntax public class Tab Constructors Tab(String) Declaration public Tab(string title = \"Unknown\") Parameters Type Name Description System.String title Properties Title Declaration public string Title { get; set; } Property Value Type Description System.String Methods AddItem(TabItem) Adds the item in the tab. Declaration public int AddItem(TabItem tbItm) Parameters Type Name Description TabItem tbItm Returns Type Description System.Int32 Index of added item Examples var tab1 = MenuManager.GetTab(\"Tab1\"); tab1.AddItem(new Switch() {Title = \"Item1\"}); GetItem<T>(Func<T, Boolean>) Declaration public T GetItem<T>(Func<T, bool> predicate) where T : TabItem Parameters Type Name Description System.Func <T, System.Boolean > predicate Returns Type Description T Type Parameters Name Description T GetItem<T>(Int32) Declaration public T GetItem<T>(int index) where T : TabItem Parameters Type Name Description System.Int32 index Returns Type Description T Type Parameters Name Description T GetItem<T>(String) Declaration public T GetItem<T>(string itemName) where T : TabItem Parameters Type Name Description System.String itemName Returns Type Description T Type Parameters Name Description T Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Menu.TabItem.html": {
    "href": "api/Oasys.Common.Menu.TabItem.html",
    "title": "Class TabItem | Oasys SDK",
    "keywords": "Class TabItem Inheritance System.Object TabItem Counter InfoDisplay KeyBinding ModeDisplay Switch Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Menu Assembly : Oasys.Common.dll Syntax public class TabItem Constructors TabItem() Declaration public TabItem() Properties TabName Declaration public string TabName { get; set; } Property Value Type Description System.String Title Declaration public string Title { get; set; } Property Value Type Description System.String Events OnTabItemChange Declaration public static event TabItem.TabItemChanged OnTabItemChange Event Type Type Description TabItem.TabItemChanged Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Menu.TabItem.TabItemChanged.html": {
    "href": "api/Oasys.Common.Menu.TabItem.TabItemChanged.html",
    "title": "Delegate TabItem.TabItemChanged | Oasys SDK",
    "keywords": "Delegate TabItem.TabItemChanged Namespace : Oasys.Common.Menu Assembly : Oasys.Common.dll Syntax public delegate void TabItemChanged(string tabName, TabItem tabItem); Parameters Type Name Description System.String tabName TabItem tabItem Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.OasysModuleEntryPoint.html": {
    "href": "api/Oasys.Common.OasysModuleEntryPoint.html",
    "title": "Class OasysModuleEntryPoint | Oasys SDK",
    "keywords": "Class OasysModuleEntryPoint Inheritance System.Object System.Attribute OasysModuleEntryPoint OasysModuleEntryPoint Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common Assembly : Oasys.Common.dll Syntax public class OasysModuleEntryPoint : Attribute Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.ObjectManagerExport.html": {
    "href": "api/Oasys.Common.ObjectManagerExport.html",
    "title": "Class ObjectManagerExport | Oasys SDK",
    "keywords": "Class ObjectManagerExport Inheritance System.Object ObjectManagerExport Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common Assembly : Oasys.Common.dll Syntax public class ObjectManagerExport Fields CollectedNativeMissiles Declaration public static Storage<uint, AIMissileClient> CollectedNativeMissiles Field Value Type Description Storage < System.UInt32 , AIMissileClient > CollectedNativeObjects Declaration public static Storage<uint, AIBaseClient> CollectedNativeObjects Field Value Type Description Storage < System.UInt32 , AIBaseClient > HeroCollection Declaration public static Storage<int, Hero> HeroCollection Field Value Type Description Storage < System.Int32 , Hero > InhibCollection Declaration public static Storage<int, Inhibitor> InhibCollection Field Value Type Description Storage < System.Int32 , Inhibitor > JungleObjectCollection Declaration public static Storage<int, JungleMob> JungleObjectCollection Field Value Type Description Storage < System.Int32 , JungleMob > LocalPlayer Declaration public static Hero LocalPlayer Field Value Type Description Hero MinionCollection Declaration public static Storage<int, Minion> MinionCollection Field Value Type Description Storage < System.Int32 , Minion > NexusCollection Declaration public static Storage<int, Nexus> NexusCollection Field Value Type Description Storage < System.Int32 , Nexus > PlacementCollection Declaration public static Storage<int, AIPlacementClient> PlacementCollection Field Value Type Description Storage < System.Int32 , AIPlacementClient > TurretCollection Declaration public static Storage<int, Turret> TurretCollection Field Value Type Description Storage < System.Int32 , Turret > Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.RenderFactoryProvider.html": {
    "href": "api/Oasys.Common.RenderFactoryProvider.html",
    "title": "Class RenderFactoryProvider | Oasys SDK",
    "keywords": "Class RenderFactoryProvider Inheritance System.Object RenderFactoryProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common Assembly : Oasys.Common.dll Syntax public class RenderFactoryProvider Fields D3D Declaration public static Direct3D D3D Field Value Type Description SharpDX.Direct3D9.Direct3D D3D9Line Declaration public static Line D3D9Line Field Value Type Description SharpDX.Direct3D9.Line RenderDevice Declaration public static Device RenderDevice Field Value Type Description SharpDX.Direct3D9.Device Methods DrawCircle(Vector3, Single, Color, Single, Boolean) Declaration public static void DrawCircle(Vector3 position, float radius, Color color, float thickness, bool filled = false) Parameters Type Name Description SharpDX.Vector3 position System.Single radius SharpDX.Color color System.Single thickness System.Boolean filled Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Settings.Alerts.html": {
    "href": "api/Oasys.Common.Settings.Alerts.html",
    "title": "Class Alerts | Oasys SDK",
    "keywords": "Class Alerts Inheritance System.Object Alerts Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Settings Assembly : Oasys.Common.dll Syntax public static class Alerts Properties DetectionRangeMaximum Declaration public static int DetectionRangeMaximum { get; set; } Property Value Type Description System.Int32 DetectionRangeMinimum Declaration public static int DetectionRangeMinimum { get; set; } Property Value Type Description System.Int32 GankAlerterColor Declaration public static Color GankAlerterColor { get; } Property Value Type Description SharpDX.Color GankAlerterTextColor Declaration public static Color GankAlerterTextColor { get; } Property Value Type Description SharpDX.Color LineThickness Declaration public static int LineThickness { get; set; } Property Value Type Description System.Int32 ShowLine Declaration public static bool ShowLine { get; set; } Property Value Type Description System.Boolean ShowName Declaration public static bool ShowName { get; set; } Property Value Type Description System.Boolean UseBaronAlerter Declaration public static bool UseBaronAlerter { get; set; } Property Value Type Description System.Boolean UseDragonAlerter Declaration public static bool UseDragonAlerter { get; set; } Property Value Type Description System.Boolean UseGankAlerter Declaration public static bool UseGankAlerter { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Oasys.Common.Settings.Core.html": {
    "href": "api/Oasys.Common.Settings.Core.html",
    "title": "Class Core | Oasys SDK",
    "keywords": "Class Core Inheritance System.Object Core Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Settings Assembly : Oasys.Common.dll Syntax public static class Core Properties MenuSelectionColor Declaration public static Color MenuSelectionColor { get; } Property Value Type Description SharpDX.Color UseNativeObjectManagerCaching Declaration public static bool UseNativeObjectManagerCaching { get; set; } Property Value Type Description System.Boolean UseOasysMenuSelectionColor Declaration public static bool UseOasysMenuSelectionColor { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Oasys.Common.Settings.Drawings.CoolDownsDisplayMode.html": {
    "href": "api/Oasys.Common.Settings.Drawings.CoolDownsDisplayMode.html",
    "title": "Enum Drawings.CoolDownsDisplayMode | Oasys SDK",
    "keywords": "Enum Drawings.CoolDownsDisplayMode Namespace : Oasys.Common.Settings Assembly : Oasys.Common.dll Syntax public enum CoolDownsDisplayMode Fields Name Description Image Mixed None Text Extension Methods Extensions.ClearFlags<Drawings.CoolDownsDisplayMode>(Drawings.CoolDownsDisplayMode) Extensions.GetFlagDescription<Drawings.CoolDownsDisplayMode>() Extensions.GetFlags<Drawings.CoolDownsDisplayMode>() Extensions.In<Drawings.CoolDownsDisplayMode>(Drawings.CoolDownsDisplayMode[]) Extensions.SetFlags<Drawings.CoolDownsDisplayMode>(Drawings.CoolDownsDisplayMode, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Settings.Drawings.DrawingMode.html": {
    "href": "api/Oasys.Common.Settings.Drawings.DrawingMode.html",
    "title": "Enum Drawings.DrawingMode | Oasys SDK",
    "keywords": "Enum Drawings.DrawingMode Namespace : Oasys.Common.Settings Assembly : Oasys.Common.dll Syntax public enum DrawingMode Fields Name Description BottomLeft BottomRight Left Right TopLeft TopRight Extension Methods Extensions.ClearFlags<Drawings.DrawingMode>(Drawings.DrawingMode) Extensions.GetFlagDescription<Drawings.DrawingMode>() Extensions.GetFlags<Drawings.DrawingMode>() Extensions.In<Drawings.DrawingMode>(Drawings.DrawingMode[]) Extensions.SetFlags<Drawings.DrawingMode>(Drawings.DrawingMode, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Settings.Drawings.DrawingTeamMode.html": {
    "href": "api/Oasys.Common.Settings.Drawings.DrawingTeamMode.html",
    "title": "Enum Drawings.DrawingTeamMode | Oasys SDK",
    "keywords": "Enum Drawings.DrawingTeamMode Namespace : Oasys.Common.Settings Assembly : Oasys.Common.dll Syntax public enum DrawingTeamMode Fields Name Description Both EnemyTeam MyTeam Extension Methods Extensions.ClearFlags<Drawings.DrawingTeamMode>(Drawings.DrawingTeamMode) Extensions.GetFlagDescription<Drawings.DrawingTeamMode>() Extensions.GetFlags<Drawings.DrawingTeamMode>() Extensions.In<Drawings.DrawingTeamMode>(Drawings.DrawingTeamMode[]) Extensions.SetFlags<Drawings.DrawingTeamMode>(Drawings.DrawingTeamMode, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Settings.Drawings.html": {
    "href": "api/Oasys.Common.Settings.Drawings.html",
    "title": "Class Drawings | Oasys SDK",
    "keywords": "Class Drawings Inheritance System.Object Drawings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Settings Assembly : Oasys.Common.dll Syntax public static class Drawings Properties ChampionHUD Declaration public static bool ChampionHUD { get; set; } Property Value Type Description System.Boolean ChampionHUDDirection Declaration public static Drawings.DrawingMode ChampionHUDDirection { get; } Property Value Type Description Drawings.DrawingMode ChampionHUDScale Declaration public static int ChampionHUDScale { get; set; } Property Value Type Description System.Int32 ChampionHUDX Declaration public static int ChampionHUDX { get; } Property Value Type Description System.Int32 ChampionHUDY Declaration public static int ChampionHUDY { get; } Property Value Type Description System.Int32 Cooldowns Declaration public static bool Cooldowns { get; set; } Property Value Type Description System.Boolean CoolDownsDisplayModeSelected Declaration public static Drawings.CoolDownsDisplayMode CoolDownsDisplayModeSelected { get; } Property Value Type Description Drawings.CoolDownsDisplayMode CoolDownsDrawingMode Declaration public static Drawings.DrawingTeamMode CoolDownsDrawingMode { get; } Property Value Type Description Drawings.DrawingTeamMode DrawingsEnabled Declaration public static bool DrawingsEnabled { get; set; } Property Value Type Description System.Boolean GetAllyHeroRangeColor Declaration public static Color GetAllyHeroRangeColor { get; } Property Value Type Description SharpDX.Color GetAllyTurretRangeColor Declaration public static Color GetAllyTurretRangeColor { get; } Property Value Type Description SharpDX.Color GetEnemyHeroRangeColor Declaration public static Color GetEnemyHeroRangeColor { get; } Property Value Type Description SharpDX.Color GetEnemyTurretRangeColor Declaration public static Color GetEnemyTurretRangeColor { get; } Property Value Type Description SharpDX.Color GetMyHeroRangeColor Declaration public static Color GetMyHeroRangeColor { get; } Property Value Type Description SharpDX.Color HeroRanges Declaration public static bool HeroRanges { get; set; } Property Value Type Description System.Boolean HeroRangesDrawingMode Declaration public static Drawings.DrawingTeamMode HeroRangesDrawingMode { get; } Property Value Type Description Drawings.DrawingTeamMode LocalRangeOasysColor Declaration public static bool LocalRangeOasysColor { get; set; } Property Value Type Description System.Boolean MyRange Declaration public static bool MyRange { get; set; } Property Value Type Description System.Boolean Recalls Declaration public static bool Recalls { get; set; } Property Value Type Description System.Boolean RecallsDrawingMode Declaration public static Drawings.DrawingTeamMode RecallsDrawingMode { get; } Property Value Type Description Drawings.DrawingTeamMode ShowLocalplayer Declaration public static bool ShowLocalplayer { get; set; } Property Value Type Description System.Boolean SimpleChampionHUD Declaration public static bool SimpleChampionHUD { get; set; } Property Value Type Description System.Boolean Traps Declaration public static bool Traps { get; set; } Property Value Type Description System.Boolean TurretRanges Declaration public static bool TurretRanges { get; set; } Property Value Type Description System.Boolean TurretRangesDrawingMode Declaration public static Drawings.DrawingTeamMode TurretRangesDrawingMode { get; } Property Value Type Description Drawings.DrawingTeamMode Wards Declaration public static bool Wards { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Oasys.Common.Settings.html": {
    "href": "api/Oasys.Common.Settings.html",
    "title": "Namespace Oasys.Common.Settings | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Settings Classes Alerts Core Drawings Enums Drawings.CoolDownsDisplayMode Drawings.DrawingMode Drawings.DrawingTeamMode"
  },
  "api/Oasys.Common.Tools.ColorConverter.html": {
    "href": "api/Oasys.Common.Tools.ColorConverter.html",
    "title": "Class ColorConverter | Oasys SDK",
    "keywords": "Class ColorConverter Inheritance System.Object ColorConverter ColorConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Tools Assembly : Oasys.Common.dll Syntax public class ColorConverter Methods GetColor(String) Declaration public static Color GetColor(string colorName) Parameters Type Name Description System.String colorName Returns Type Description SharpDX.Color GetColor(String, Int32) Declaration public static Color GetColor(string colorName, int alpha) Parameters Type Name Description System.String colorName System.Int32 alpha Returns Type Description SharpDX.Color GetColors() Declaration public static List<string> GetColors() Returns Type Description System.Collections.Generic.List < System.String > GetColorWithAlpha(Color, Int32) Declaration public static Color GetColorWithAlpha(Color color, int alpha) Parameters Type Name Description SharpDX.Color color System.Int32 alpha Returns Type Description SharpDX.Color Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Tools.Devices.html": {
    "href": "api/Oasys.Common.Tools.Devices.html",
    "title": "Namespace Oasys.Common.Tools.Devices | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Tools.Devices Classes Keyboard Mouse Enums Keyboard.KeyBoardScanCodes Codes of the keys of a keyboard. Just tested the values for q, w, e, r, 1, 2, 3, 4, 5, 6 and 7, don't use this enum to the other keys. Keyboard.KeyPressState Keyboard.VirtualKeyCodes Delegates Keyboard.OnKeyPressCallback"
  },
  "api/Oasys.Common.Tools.Devices.Keyboard.html": {
    "href": "api/Oasys.Common.Tools.Devices.Keyboard.html",
    "title": "Class Keyboard | Oasys SDK",
    "keywords": "Class Keyboard Inheritance System.Object Keyboard Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Tools.Devices Assembly : Oasys.Common.dll Syntax [Obfuscation(Feature = \"code control flow obfuscation\", Exclude = true)] public class Keyboard Methods GetKey(Keyboard.KeyBoardScanCodes) Declaration public static Keys GetKey(Keyboard.KeyBoardScanCodes keyBoardScanCode) Parameters Type Name Description Keyboard.KeyBoardScanCodes keyBoardScanCode Returns Type Description System.Windows.Forms.Keys GetKeyBoardScanCode(Keys) Declaration public static Keyboard.KeyBoardScanCodes GetKeyBoardScanCode(Keys key) Parameters Type Name Description System.Windows.Forms.Keys key Returns Type Description Keyboard.KeyBoardScanCodes GetKeyState(Keys) Using keyboard event. Declaration public static Keyboard.KeyPressState GetKeyState(Keys keys) Parameters Type Name Description System.Windows.Forms.Keys keys Returns Type Description Keyboard.KeyPressState IsControlPressed() Declaration public static bool IsControlPressed() Returns Type Description System.Boolean IsKeyPressed(Keys) Using async key state Declaration public static bool IsKeyPressed(Keys keys) Parameters Type Name Description System.Windows.Forms.Keys keys Returns Type Description System.Boolean IsPressed(Keys) Using keyboard event. Declaration public static bool IsPressed(Keys keys) Parameters Type Name Description System.Windows.Forms.Keys keys Returns Type Description System.Boolean IsShiftPressed() Declaration public static bool IsShiftPressed() Returns Type Description System.Boolean SendKey(Keyboard.KeyBoardScanCodes) Declaration public static void SendKey(Keyboard.KeyBoardScanCodes scanCode) Parameters Type Name Description Keyboard.KeyBoardScanCodes scanCode SendKey(Int16) Declaration public static void SendKey(short keyBoardScanCode) Parameters Type Name Description System.Int16 keyBoardScanCode SendKeyDown(Keyboard.KeyBoardScanCodes) Declaration public static void SendKeyDown(Keyboard.KeyBoardScanCodes keyBoardScanCode) Parameters Type Name Description Keyboard.KeyBoardScanCodes keyBoardScanCode SendKeyDown(Int16) Declaration public static void SendKeyDown(short keyBoardScanCode) Parameters Type Name Description System.Int16 keyBoardScanCode SendKeyUp(Keyboard.KeyBoardScanCodes) Declaration public static void SendKeyUp(Keyboard.KeyBoardScanCodes keyBoardScanCode) Parameters Type Name Description Keyboard.KeyBoardScanCodes keyBoardScanCode SendKeyUp(Int16) Declaration public static void SendKeyUp(short keyBoardScanCode) Parameters Type Name Description System.Int16 keyBoardScanCode Events OnKeyPress Declaration public static event Keyboard.OnKeyPressCallback OnKeyPress Event Type Type Description Keyboard.OnKeyPressCallback Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Tools.Devices.Keyboard.KeyBoardScanCodes.html": {
    "href": "api/Oasys.Common.Tools.Devices.Keyboard.KeyBoardScanCodes.html",
    "title": "Enum Keyboard.KeyBoardScanCodes | Oasys SDK",
    "keywords": "Enum Keyboard.KeyBoardScanCodes Codes of the keys of a keyboard. Just tested the values for q, w, e, r, 1, 2, 3, 4, 5, 6 and 7, don't use this enum to the other keys. Namespace : Oasys.Common.Tools.Devices Assembly : Oasys.Common.dll Syntax public enum KeyBoardScanCodes : short Fields Name Description KEY_0 KEY_1 KEY_2 KEY_3 KEY_4 KEY_5 KEY_6 KEY_7 KEY_8 KEY_9 KEY_A KEY_ALT KEY_APOSTROF KEY_B KEY_BACKSLASH KEY_BACKSPACE KEY_C KEY_CAPS KEY_CLOSENING_BRACKETS KEY_COMMA KEY_CONTROL KEY_D KEY_DIACRITIC KEY_E KEY_ENTER KEY_EQUAL KEY_ESC KEY_F KEY_F1 KEY_F10 KEY_F2 KEY_F3 KEY_F4 KEY_F5 KEY_F6 KEY_F7 KEY_F8 KEY_F9 KEY_G KEY_H KEY_I KEY_J KEY_K KEY_L KEY_LSHIFT KEY_M KEY_MINUS KEY_N KEY_NUM KEY_NUMPAD0 KEY_NUMPAD1 KEY_NUMPAD2 KEY_NUMPAD3 KEY_NUMPAD4 KEY_NUMPAD5 KEY_NUMPAD6 KEY_NUMPAD7 KEY_NUMPAD8 KEY_NUMPAD9 KEY_O KEY_OPENING_BRACKETS KEY_P KEY_PERIOD KEY_PLUS KEY_PRINTSCREEN KEY_Q KEY_R KEY_RSHIFT KEY_S KEY_SCROLL KEY_SEMICOLON KEY_SLASH KEY_SPACE KEY_T KEY_TAB KEY_U KEY_V KEY_W KEY_X KEY_Y KEY_Z Extension Methods Extensions.ClearFlags<Keyboard.KeyBoardScanCodes>(Keyboard.KeyBoardScanCodes) Extensions.GetFlagDescription<Keyboard.KeyBoardScanCodes>() Extensions.GetFlags<Keyboard.KeyBoardScanCodes>() Extensions.In<Keyboard.KeyBoardScanCodes>(Keyboard.KeyBoardScanCodes[]) Extensions.SetFlags<Keyboard.KeyBoardScanCodes>(Keyboard.KeyBoardScanCodes, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Tools.Devices.Keyboard.KeyPressState.html": {
    "href": "api/Oasys.Common.Tools.Devices.Keyboard.KeyPressState.html",
    "title": "Enum Keyboard.KeyPressState | Oasys SDK",
    "keywords": "Enum Keyboard.KeyPressState Namespace : Oasys.Common.Tools.Devices Assembly : Oasys.Common.dll Syntax public enum KeyPressState Fields Name Description Down Up Extension Methods Extensions.ClearFlags<Keyboard.KeyPressState>(Keyboard.KeyPressState) Extensions.GetFlagDescription<Keyboard.KeyPressState>() Extensions.GetFlags<Keyboard.KeyPressState>() Extensions.In<Keyboard.KeyPressState>(Keyboard.KeyPressState[]) Extensions.SetFlags<Keyboard.KeyPressState>(Keyboard.KeyPressState, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Tools.Devices.Keyboard.OnKeyPressCallback.html": {
    "href": "api/Oasys.Common.Tools.Devices.Keyboard.OnKeyPressCallback.html",
    "title": "Delegate Keyboard.OnKeyPressCallback | Oasys SDK",
    "keywords": "Delegate Keyboard.OnKeyPressCallback Namespace : Oasys.Common.Tools.Devices Assembly : Oasys.Common.dll Syntax public delegate void OnKeyPressCallback(Keys keyBeingPressed, Keyboard.KeyPressState pressState); Parameters Type Name Description System.Windows.Forms.Keys keyBeingPressed Keyboard.KeyPressState pressState Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Tools.Devices.Keyboard.VirtualKeyCodes.html": {
    "href": "api/Oasys.Common.Tools.Devices.Keyboard.VirtualKeyCodes.html",
    "title": "Enum Keyboard.VirtualKeyCodes | Oasys SDK",
    "keywords": "Enum Keyboard.VirtualKeyCodes Namespace : Oasys.Common.Tools.Devices Assembly : Oasys.Common.dll Syntax public enum VirtualKeyCodes Fields Name Description ACCEPT IME accept ADD Add key APPS Applications key (Natural keyboard) ATTN Attn key BACK BACKSPACE key BROWSER_BACK Windows 2000/XP: Browser Back key BROWSER_FAVORITES Windows 2000/XP: Browser Favorites key BROWSER_FORWARD Windows 2000/XP: Browser Forward key BROWSER_HOME Windows 2000/XP: Browser Start and Home key BROWSER_REFRESH Windows 2000/XP: Browser Refresh key BROWSER_SEARCH Windows 2000/XP: Browser Search key BROWSER_STOP Windows 2000/XP: Browser Stop key CANCEL Control-break processing CAPITAL CAPS LOCK key CLEAR CLEAR key CONTROL CTRL key CONVERT IME convert CRSEL CrSel key DECIMAL Decimal key DELETE DEL key DIVIDE Divide key DOWN DOWN ARROW key END END key EREOF Erase EOF key ESCAPE ESC key EXECUTE EXECUTE key EXSEL ExSel key F1 F1 key F10 F10 key F11 F11 key F12 F12 key F13 F13 key F14 F14 key F15 F15 key F16 F16 key F17 F17 key F18 F18 key F19 F19 key F2 F2 key F20 F20 key F21 F21 key F22 F22 key, (PPC only) Key used to lock device. F23 F23 key F24 F24 key F3 F3 key F4 F4 key F5 F5 key F6 F6 key F7 F7 key F8 F8 key F9 F9 key FINAL IME final mode HANGUL IME Hangul mode HANJA IME Hanja mode HELP HELP key HOME HOME key INSERT INS key JUNJA IME Junja mode KANA Input Method Editor (IME) Kana mode KANJI IME Kanji mode KEY_0 0 key KEY_1 1 key KEY_2 2 key KEY_3 3 key KEY_4 4 key KEY_5 5 key KEY_6 6 key KEY_7 7 key KEY_8 8 key KEY_9 9 key KEY_A A key KEY_B B key KEY_C C key KEY_D D key KEY_E E key KEY_F F key KEY_G G key KEY_H H key KEY_I I key KEY_J J key KEY_K K key KEY_L L key KEY_M M key KEY_N N key KEY_O O key KEY_P P key KEY_Q Q key KEY_R R key KEY_S S key KEY_T T key KEY_U U key KEY_V V key KEY_W W key KEY_X X key KEY_Y Y key KEY_Z Z key LAUNCH_APP1 Windows 2000/XP: Start Application 1 key LAUNCH_APP2 Windows 2000/XP: Start Application 2 key LAUNCH_MAIL Windows 2000/XP: Start Mail key LAUNCH_MEDIA_SELECT Windows 2000/XP: Select Media key LBUTTON Left mouse button LCONTROL Left CONTROL key LEFT LEFT ARROW key LMENU Left MENU key LSHIFT Left SHIFT key LWIN Left Windows key (Microsoft Natural keyboard) MBUTTON Middle mouse button (three-button mouse) MEDIA_NEXT_TRACK Windows 2000/XP: Next Track key MEDIA_PLAY_PAUSE Windows 2000/XP: Play/Pause Media key MEDIA_PREV_TRACK Windows 2000/XP: Previous Track key MEDIA_STOP Windows 2000/XP: Stop Media key MENU ALT key MODECHANGE IME mode change request MULTIPLY Multiply key NEXT PAGE DOWN key NONAME Reserved NONCONVERT IME nonconvert NUMLOCK NUM LOCK key NUMPAD0 Numeric keypad 0 key NUMPAD1 Numeric keypad 1 key NUMPAD2 Numeric keypad 2 key NUMPAD3 Numeric keypad 3 key NUMPAD4 Numeric keypad 4 key NUMPAD5 Numeric keypad 5 key NUMPAD6 Numeric keypad 6 key NUMPAD7 Numeric keypad 7 key NUMPAD8 Numeric keypad 8 key NUMPAD9 Numeric keypad 9 key OEM_1 Used for miscellaneous characters; it can vary by keyboard. OEM_102 Windows 2000/XP: Either the angle bracket key or the backslash key on the RT 102-key keyboard OEM_2 Used for miscellaneous characters; it can vary by keyboard. OEM_3 Used for miscellaneous characters; it can vary by keyboard. OEM_4 Used for miscellaneous characters; it can vary by keyboard. OEM_5 Used for miscellaneous characters; it can vary by keyboard. OEM_6 Used for miscellaneous characters; it can vary by keyboard. OEM_7 Used for miscellaneous characters; it can vary by keyboard. OEM_8 Used for miscellaneous characters; it can vary by keyboard. OEM_CLEAR Clear key OEM_COMMA Windows 2000/XP: For any country/region, the ',' key OEM_MINUS Windows 2000/XP: For any country/region, the '-' key OEM_PERIOD Windows 2000/XP: For any country/region, the '.' key OEM_PLUS Windows 2000/XP: For any country/region, the '+' key PA1 PA1 key PACKET Windows 2000/XP: Used to pass Unicode characters as if they were keystrokes. The VK_PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods. For more information, see Remark in KEYBDINPUT, SendInput, WM_KEYDOWN, and WM_KEYUP PAUSE PAUSE key PLAY Play key PRINT PRINT key PRIOR PAGE UP key PROCESSKEY Windows 95/98/Me, Windows NT 4.0, Windows 2000/XP: IME PROCESS key RBUTTON Right mouse button RCONTROL Right CONTROL key RETURN ENTER key RIGHT RIGHT ARROW key RMENU Right MENU key RSHIFT Right SHIFT key RWIN Right Windows key (Natural keyboard) SCROLL SCROLL LOCK key SELECT SELECT key SEPARATOR Separator key SHIFT SHIFT key SLEEP Computer Sleep key SNAPSHOT PRINT SCREEN key SPACE SPACEBAR SUBTRACT Subtract key TAB TAB key UP UP ARROW key VOLUME_DOWN Windows 2000/XP: Volume Down key VOLUME_MUTE Windows 2000/XP: Volume Mute key VOLUME_UP Windows 2000/XP: Volume Up key XBUTTON1 Windows 2000/XP: X1 mouse button XBUTTON2 Windows 2000/XP: X2 mouse button ZOOM Zoom key Extension Methods Extensions.ClearFlags<Keyboard.VirtualKeyCodes>(Keyboard.VirtualKeyCodes) Extensions.GetFlagDescription<Keyboard.VirtualKeyCodes>() Extensions.GetFlags<Keyboard.VirtualKeyCodes>() Extensions.In<Keyboard.VirtualKeyCodes>(Keyboard.VirtualKeyCodes[]) Extensions.SetFlags<Keyboard.VirtualKeyCodes>(Keyboard.VirtualKeyCodes, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.Common.Tools.Devices.Mouse.html": {
    "href": "api/Oasys.Common.Tools.Devices.Mouse.html",
    "title": "Class Mouse | Oasys SDK",
    "keywords": "Class Mouse Inheritance System.Object Mouse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Tools.Devices Assembly : Oasys.Common.dll Syntax [Obfuscation(Feature = \"code control flow obfuscation\", Exclude = true)] public class Mouse Fields _restore Declaration public static Pos _restore Field Value Type Description Pos Properties Resolution Declaration public static Pos Resolution { get; set; } Property Value Type Description Pos Methods ClickAndBounce(Pos, Boolean, Action) Declaration public static long ClickAndBounce(Pos p, bool left = false, Action callback = null) Parameters Type Name Description Pos p System.Boolean left System.Action callback Returns Type Description System.Int64 ClickAndBounce(Int32, Int32, Boolean, Action) Clicks on target position, and after [delay]ms bounces back to origin location. Declaration public static long ClickAndBounce(int x, int y, bool left = false, Action callback = null) Parameters Type Name Description System.Int32 x System.Int32 y System.Boolean left System.Action callback what to do instead of a right click in case we need a key press or something Returns Type Description System.Int64 has clicked ClickAndBounceAsync(Pos, Int32) Declaration public static void ClickAndBounceAsync(Pos p, int delay) Parameters Type Name Description Pos p System.Int32 delay ClickAndBounceAsync(Int32, Int32, Int32) Moves to target position at a given speed, clicks, and then returns to origin location. Declaration public static void ClickAndBounceAsync(int x, int y, int delay = 4) Parameters Type Name Description System.Int32 x System.Int32 y System.Int32 delay LeftClick() Declaration public static void LeftClick() RightClick(Int32) Declaration public static void RightClick(int delay = 4) Parameters Type Name Description System.Int32 delay SetCursor(Pos) Declaration public static void SetCursor(Pos p) Parameters Type Name Description Pos p SetCursor(Int32, Int32) Sets the cursor position. Note that using SetCursor over SetPosition will not send any input stream events that we might want for certain scenarios. Declaration public static void SetCursor(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y SetCursorRelative(Pos) Declaration public static void SetCursorRelative(Pos p) Parameters Type Name Description Pos p SetCursorRelative(Int32, Int32) Changes the cursor position relatively to its current position. Note that using SetCursor over SetPosition will not send any input stream events that we might want for certain scenarios. Declaration public static void SetCursorRelative(int xOffset, int yOffset) Parameters Type Name Description System.Int32 xOffset System.Int32 yOffset SetMouseClickBlockState(Boolean) Sets a state whether to block the clicks of the mouse. Declaration public static void SetMouseClickBlockState(bool mClickState) Parameters Type Name Description System.Boolean mClickState SetMouseInputBlockState(Boolean) Sets a state whether to block the input of the mouse. Declaration public static void SetMouseInputBlockState(bool mInputBlockState) Parameters Type Name Description System.Boolean mInputBlockState SetMouseMovementBlockState(Boolean) Sets a state whether to block the movement of the mouse. Declaration public static void SetMouseMovementBlockState(bool mState) Parameters Type Name Description System.Boolean mState SetPosition(Pos) Declaration public static void SetPosition(Pos p) Parameters Type Name Description Pos p SetPosition(Int32, Int32) Sets the mouse position using the native mouse_event call. This will also stream all information of mouse movement into the input handler. Declaration public static void SetPosition(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y SetPositionRelative(Pos) Declaration public static void SetPositionRelative(Pos p) Parameters Type Name Description Pos p SetPositionRelative(Int32, Int32) Changes the mouse position relatively to its current position using the native mouse_event call. This will also stream all information of mouse movement into the input handler. Declaration public static void SetPositionRelative(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Tools.html": {
    "href": "api/Oasys.Common.Tools.html",
    "title": "Namespace Oasys.Common.Tools | Oasys SDK",
    "keywords": "Namespace Oasys.Common.Tools Classes ColorConverter Pos StaticChampionInfo StaticChampionInfo.ChampionInfo Storage<K, T> Dictionary wrapper for better workflow Util Delegates Storage<K, T>.FindCallback Storage<K, T>.IterationItemCallback Storage<K, T>.IterationKeyValueCallback"
  },
  "api/Oasys.Common.Tools.Pos.html": {
    "href": "api/Oasys.Common.Tools.Pos.html",
    "title": "Class Pos | Oasys SDK",
    "keywords": "Class Pos Inheritance System.Object Pos Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Oasys.Common.Tools Assembly : Oasys.Common.dll Syntax public class Pos Constructors Pos(Point) Declaration public Pos(Point point) Parameters Type Name Description System.Drawing.Point point Pos(Single, Single) Declaration public Pos(float x = 0F, float y = 0F) Parameters Type Name Description System.Single x System.Single y Fields x Declaration public float x Field Value Type Description System.Single y Declaration public float y Field Value Type Description System.Single Properties Magnitude Declaration public float Magnitude { get; } Property Value Type Description System.Single MousePosition Declaration public static Pos MousePosition { get; } Property Value Type Description Pos X Declaration public int X { get; } Property Value Type Description System.Int32 Y Declaration public int Y { get; } Property Value Type Description System.Int32 Methods Clone() Declaration public Pos Clone() Returns Type Description Pos Distance(Pos) Declaration public float Distance(Pos p) Parameters Type Name Description Pos p Returns Type Description System.Single Normalize(Single) Declaration public Pos Normalize(float factor = 1F) Parameters Type Name Description System.Single factor Returns Type Description Pos ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Operators Addition(Pos, Pos) Declaration public static Pos operator +(Pos a, Pos b) Parameters Type Name Description Pos a Pos b Returns Type Description Pos Division(Pos, Pos) Declaration public static Pos operator /(Pos a, Pos b) Parameters Type Name Description Pos a Pos b Returns Type Description Pos Division(Pos, Single) Declaration public static Pos operator /(Pos a, float b) Parameters Type Name Description Pos a System.Single b Returns Type Description Pos Implicit(Pos to Vector2) Declaration public static implicit operator Vector2(Pos point) Parameters Type Name Description Pos point Returns Type Description SharpDX.Vector2 Implicit(Pos to Vector3) Declaration public static implicit operator Vector3(Pos point) Parameters Type Name Description Pos point Returns Type Description SharpDX.Vector3 Implicit(Pos to Point) Declaration public static implicit operator Point(Pos point) Parameters Type Name Description Pos point Returns Type Description System.Drawing.Point Implicit(Vector2 to Pos) Declaration public static implicit operator Pos(Vector2 vector) Parameters Type Name Description SharpDX.Vector2 vector Returns Type Description Pos Implicit(Vector3 to Pos) Declaration public static implicit operator Pos(Vector3 vector) Parameters Type Name Description SharpDX.Vector3 vector Returns Type Description Pos Implicit(Point to Pos) Declaration public static implicit operator Pos(Point point) Parameters Type Name Description System.Drawing.Point point Returns Type Description Pos Multiply(Pos, Pos) Declaration public static Pos operator *(Pos a, Pos b) Parameters Type Name Description Pos a Pos b Returns Type Description Pos Multiply(Pos, Single) Declaration public static Pos operator *(Pos a, float b) Parameters Type Name Description Pos a System.Single b Returns Type Description Pos Subtraction(Pos, Pos) Declaration public static Pos operator -(Pos a, Pos b) Parameters Type Name Description Pos a Pos b Returns Type Description Pos Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Tools.StaticChampionInfo.ChampionInfo.html": {
    "href": "api/Oasys.Common.Tools.StaticChampionInfo.ChampionInfo.html",
    "title": "Class StaticChampionInfo.ChampionInfo | Oasys SDK",
    "keywords": "Class StaticChampionInfo.ChampionInfo Inheritance System.Object StaticChampionInfo.ChampionInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Tools Assembly : Oasys.Common.dll Syntax public class ChampionInfo Properties AttackSpeedRatio Declaration public float AttackSpeedRatio { get; } Property Value Type Description System.Single BaseAttackSpeed Declaration public float BaseAttackSpeed { get; } Property Value Type Description System.Single Name Declaration public string Name { get; } Property Value Type Description System.String Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Tools.StaticChampionInfo.html": {
    "href": "api/Oasys.Common.Tools.StaticChampionInfo.html",
    "title": "Class StaticChampionInfo | Oasys SDK",
    "keywords": "Class StaticChampionInfo Inheritance System.Object StaticChampionInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Tools Assembly : Oasys.Common.dll Syntax public static class StaticChampionInfo Fields CurrentChampionInfo Declaration public static StaticChampionInfo.ChampionInfo CurrentChampionInfo Field Value Type Description StaticChampionInfo.ChampionInfo Properties Champions Declaration public static List<StaticChampionInfo.ChampionInfo> Champions { get; } Property Value Type Description System.Collections.Generic.List < StaticChampionInfo.ChampionInfo > JhinAttackSpeed Declaration public static Dictionary<int, float> JhinAttackSpeed { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Int32 , System.Single >"
  },
  "api/Oasys.Common.Tools.Storage-2.FindCallback.html": {
    "href": "api/Oasys.Common.Tools.Storage-2.FindCallback.html",
    "title": "Delegate Storage<K, T>.FindCallback | Oasys SDK",
    "keywords": "Delegate Storage<K, T>.FindCallback Namespace : Oasys.Common.Tools Assembly : Oasys.Common.dll Syntax public delegate bool FindCallback(T item); Parameters Type Name Description T item Returns Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Tools.Storage-2.html": {
    "href": "api/Oasys.Common.Tools.Storage-2.html",
    "title": "Class Storage<K, T> | Oasys SDK",
    "keywords": "Class Storage<K, T> Dictionary wrapper for better workflow Inheritance System.Object System.Collections.Concurrent.ConcurrentDictionary <K, T> Storage<K, T> Implements System.Collections.Generic.IDictionary <K, T> System.Collections.Generic.ICollection < System.Collections.Generic.KeyValuePair <K, T>> System.Collections.Generic.IReadOnlyDictionary <K, T> System.Collections.Generic.IReadOnlyCollection < System.Collections.Generic.KeyValuePair <K, T>> System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair <K, T>> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable Inherited Members System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.set_Item(System.Object, System.Object) System.Collections.Concurrent.ConcurrentDictionary<K, T>.AddOrUpdate(K, System.Func<K, T>, System.Func<K, T, T>) System.Collections.Concurrent.ConcurrentDictionary<K, T>.AddOrUpdate(K, T, System.Func<K, T, T>) System.Collections.Concurrent.ConcurrentDictionary<K, T>.AddOrUpdate<TArg>(K, System.Func<K, TArg, T>, System.Func<K, T, TArg, T>, TArg) System.Collections.Concurrent.ConcurrentDictionary<K, T>.Clear() System.Collections.Concurrent.ConcurrentDictionary<K, T>.ContainsKey(K) System.Collections.Concurrent.ConcurrentDictionary<K, T>.GetEnumerator() System.Collections.Concurrent.ConcurrentDictionary<K, T>.GetOrAdd(K, System.Func<K, T>) System.Collections.Concurrent.ConcurrentDictionary<K, T>.GetOrAdd(K, T) System.Collections.Concurrent.ConcurrentDictionary<K, T>.GetOrAdd<TArg>(K, System.Func<K, TArg, T>, TArg) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<K, T>>.Add(System.Collections.Generic.KeyValuePair<K, T>) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<K, T>>.Contains(System.Collections.Generic.KeyValuePair<K, T>) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<K, T>>.CopyTo(System.Collections.Generic.KeyValuePair<K, T>[], System.Int32) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<K, T>>.Remove(System.Collections.Generic.KeyValuePair<K, T>) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.Generic.IDictionary<K, T>.Add(K, T) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.Generic.IDictionary<K, T>.Remove(K) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.Add(System.Object, System.Object) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.Contains(System.Object) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.GetEnumerator() System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.Remove(System.Object) System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Concurrent.ConcurrentDictionary<K, T>.ToArray() System.Collections.Concurrent.ConcurrentDictionary<K, T>.TryAdd(K, T) System.Collections.Concurrent.ConcurrentDictionary<K, T>.TryGetValue(K, T) System.Collections.Concurrent.ConcurrentDictionary<K, T>.TryRemove(System.Collections.Generic.KeyValuePair<K, T>) System.Collections.Concurrent.ConcurrentDictionary<K, T>.TryRemove(K, T) System.Collections.Concurrent.ConcurrentDictionary<K, T>.TryUpdate(K, T, T) System.Collections.Concurrent.ConcurrentDictionary<K, T>.Comparer System.Collections.Concurrent.ConcurrentDictionary<K, T>.Count System.Collections.Concurrent.ConcurrentDictionary<K, T>.IsEmpty System.Collections.Concurrent.ConcurrentDictionary<K, T>.Item[K] System.Collections.Concurrent.ConcurrentDictionary<K, T>.Keys System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<K, T>>.IsReadOnly System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.Generic.IReadOnlyDictionary<K, T>.Keys System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.Generic.IReadOnlyDictionary<K, T>.Values System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.ICollection.IsSynchronized System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.ICollection.SyncRoot System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.IsFixedSize System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.IsReadOnly System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.Item[System.Object] System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.Keys System.Collections.Concurrent.ConcurrentDictionary<K, T>.System.Collections.IDictionary.Values System.Collections.Concurrent.ConcurrentDictionary<K, T>.Values System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Tools Assembly : Oasys.Common.dll Syntax public class Storage<K, T> : ConcurrentDictionary<K, T>, IDictionary<K, T>, ICollection<KeyValuePair<K, T>>, IReadOnlyDictionary<K, T>, IReadOnlyCollection<KeyValuePair<K, T>>, IEnumerable<KeyValuePair<K, T>>, IDictionary, ICollection, IEnumerable Type Parameters Name Description K T Constructors Storage() Declaration public Storage() Storage(Dictionary<K, T>) Declaration public Storage(Dictionary<K, T> data) Parameters Type Name Description System.Collections.Generic.Dictionary <K, T> data Properties Item[K] Declaration public T this[K key] { get; set; } Parameters Type Name Description K key Property Value Type Description T Methods Contains(K) Declaration public bool Contains(K key) Parameters Type Name Description K key Returns Type Description System.Boolean Find(Storage<K, T>.FindCallback) Declaration public T[] Find(Storage<K, T>.FindCallback callback) Parameters Type Name Description Storage.FindCallback <> callback Returns Type Description T[] FindOne(Storage<K, T>.FindCallback) Declaration public T FindOne(Storage<K, T>.FindCallback callback) Parameters Type Name Description Storage.FindCallback <> callback Returns Type Description T ForEach(Storage<K, T>.IterationItemCallback) Declaration public void ForEach(Storage<K, T>.IterationItemCallback callback) Parameters Type Name Description Storage.IterationItemCallback <> callback ForEach(Storage<K, T>.IterationKeyValueCallback) Declaration public void ForEach(Storage<K, T>.IterationKeyValueCallback callback) Parameters Type Name Description Storage.IterationKeyValueCallback <> callback Get(K) Declaration public T Get(K key) Parameters Type Name Description K key Returns Type Description T GetKeys() Declaration public List<K> GetKeys() Returns Type Description System.Collections.Generic.List <K> GetValues() Declaration public List<T> GetValues() Returns Type Description System.Collections.Generic.List <T> Remove(K) Declaration public void Remove(K key) Parameters Type Name Description K key Remove(Storage<K, T>.FindCallback) Declaration public int Remove(Storage<K, T>.FindCallback callback) Parameters Type Name Description Storage.FindCallback <> callback Returns Type Description System.Int32 Set(K, T) Declaration public void Set(K key, T value) Parameters Type Name Description K key T value Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyDictionary<TKey, TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable Extension Methods Extensions.CombineFlags<T>(IEnumerable<T>) Extensions.Find<TSource>(IEnumerable<TSource>, Predicate<TSource>) Extensions.ForEach<T>(IEnumerable<T>, Action<T>) Extensions.In<T>(T, T[]) Extensions.MaxOrDefault<T, TR>(IEnumerable<T>, Func<T, TR>) Extensions.MinOrDefault<T, TR>(IEnumerable<T>, Func<T, TR>)"
  },
  "api/Oasys.Common.Tools.Storage-2.IterationItemCallback.html": {
    "href": "api/Oasys.Common.Tools.Storage-2.IterationItemCallback.html",
    "title": "Delegate Storage<K, T>.IterationItemCallback | Oasys SDK",
    "keywords": "Delegate Storage<K, T>.IterationItemCallback Namespace : Oasys.Common.Tools Assembly : Oasys.Common.dll Syntax public delegate void IterationItemCallback(T item); Parameters Type Name Description T item Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Tools.Storage-2.IterationKeyValueCallback.html": {
    "href": "api/Oasys.Common.Tools.Storage-2.IterationKeyValueCallback.html",
    "title": "Delegate Storage<K, T>.IterationKeyValueCallback | Oasys SDK",
    "keywords": "Delegate Storage<K, T>.IterationKeyValueCallback Namespace : Oasys.Common.Tools Assembly : Oasys.Common.dll Syntax public delegate void IterationKeyValueCallback(K key, T item); Parameters Type Name Description K key T item Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.Common.Tools.Util.html": {
    "href": "api/Oasys.Common.Tools.Util.html",
    "title": "Class Util | Oasys SDK",
    "keywords": "Class Util Inheritance System.Object Util Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.Common.Tools Assembly : Oasys.Common.dll Syntax public class Util Methods Sleep(Int32) Declaration public static void Sleep(int delay = 0) Parameters Type Name Description System.Int32 delay Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.Collision.html": {
    "href": "api/Oasys.SDK.Collision.html",
    "title": "Class Collision | Oasys SDK",
    "keywords": "Class Collision Inheritance System.Object Collision Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public static class Collision Methods IsLineCollision(Vector2, Vector2[], Int32) Declaration public static bool IsLineCollision(Vector2 pos1, Vector2[] line, int spellWidth) Parameters Type Name Description SharpDX.Vector2 pos1 SharpDX.Vector2 [] line System.Int32 spellWidth Returns Type Description System.Boolean MinionCollision(Vector2, Int32) Declaration public static bool MinionCollision(Vector2 targetPosition, int width) Parameters Type Name Description SharpDX.Vector2 targetPosition System.Int32 width Returns Type Description System.Boolean MinionCollision(Vector3, Int32) Declaration public static bool MinionCollision(Vector3 targetPosition, int width) Parameters Type Name Description SharpDX.Vector3 targetPosition System.Int32 width Returns Type Description System.Boolean"
  },
  "api/Oasys.SDK.ColorConverter.html": {
    "href": "api/Oasys.SDK.ColorConverter.html",
    "title": "Class ColorConverter | Oasys SDK",
    "keywords": "Class ColorConverter Inheritance System.Object ColorConverter ColorConverter Inherited Members ColorConverter.GetColor(String) ColorConverter.GetColor(String, Int32) ColorConverter.GetColorWithAlpha(Color, Int32) ColorConverter.GetColors() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class ColorConverter : ColorConverter Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.DamageCalculator.DamageInfo-1.html": {
    "href": "api/Oasys.SDK.DamageCalculator.DamageInfo-1.html",
    "title": "Class DamageCalculator.DamageInfo<TObject> | Oasys SDK",
    "keywords": "Class DamageCalculator.DamageInfo<TObject> Inheritance System.Object DamageCalculator.DamageInfo<TObject> DamageCalculator.MagicDamageInfo<TObject> DamageCalculator.MixedDamageInfo<TObject> DamageCalculator.PhysicalDamageInfo<TObject> DamageCalculator.TrueDamageInfo<TObject> Implements System.IEquatable < DamageCalculator.DamageInfo <TObject>> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class DamageInfo<TObject> : IEquatable<DamageCalculator.DamageInfo<TObject>> where TObject : GameObjectBase Type Parameters Name Description TObject Constructors DamageInfo(TObject, TObject, Single, Single, Single) Declaration public DamageInfo(TObject attacker, TObject target, float physicalDamage, float magicDamage, float trueDamage) Parameters Type Name Description TObject attacker TObject target System.Single physicalDamage System.Single magicDamage System.Single trueDamage Properties attacker Declaration public TObject attacker { get; set; } Property Value Type Description TObject magicDamage Declaration public float magicDamage { get; set; } Property Value Type Description System.Single physicalDamage Declaration public float physicalDamage { get; set; } Property Value Type Description System.Single target Declaration public TObject target { get; set; } Property Value Type Description TObject trueDamage Declaration public float trueDamage { get; set; } Property Value Type Description System.Single Implements System.IEquatable<T> Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.DamageCalculator.html": {
    "href": "api/Oasys.SDK.DamageCalculator.html",
    "title": "Class DamageCalculator | Oasys SDK",
    "keywords": "Class DamageCalculator Standard damage calculator Inheritance System.Object DamageCalculator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class DamageCalculator Methods CalculateActualDamage<TObject>(TObject, TObject, Single) Declaration public static float CalculateActualDamage<TObject>(TObject attacker, TObject target, float physicalDamage) where TObject : GameObjectBase Parameters Type Name Description TObject attacker TObject target System.Single physicalDamage Returns Type Description System.Single Type Parameters Name Description TObject CalculateActualDamage<TObject>(TObject, TObject, Single, Single, Single) Declaration public static float CalculateActualDamage<TObject>(TObject attacker, TObject target, float physicalDamage, float magicDamage, float trueDamage) where TObject : GameObjectBase Parameters Type Name Description TObject attacker TObject target System.Single physicalDamage System.Single magicDamage System.Single trueDamage Returns Type Description System.Single Type Parameters Name Description TObject CalculateActualDamage<TDamageInfo, TObject>(TDamageInfo) Declaration public static float CalculateActualDamage<TDamageInfo, TObject>(TDamageInfo damageInfo) where TDamageInfo : DamageCalculator.DamageInfo<TObject> where TObject : GameObjectBase Parameters Type Name Description TDamageInfo damageInfo Returns Type Description System.Single Type Parameters Name Description TDamageInfo TObject GetArmorMod(GameObjectBase, GameObjectBase) Declaration public static float GetArmorMod(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single GetCombatArmor(GameObjectBase, GameObjectBase) Declaration public static float GetCombatArmor(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single GetCombatMagicResist(GameObjectBase, GameObjectBase) Declaration public static float GetCombatMagicResist(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single GetGeneralDamageReductionModifier<T>(T) Declaration public static float GetGeneralDamageReductionModifier<T>(T target) where T : GameObjectBase Parameters Type Name Description T target Returns Type Description System.Single Type Parameters Name Description T GetMagicDamageReductionModifier<T>(T) Declaration public static float GetMagicDamageReductionModifier<T>(T target) where T : GameObjectBase Parameters Type Name Description T target Returns Type Description System.Single Type Parameters Name Description T GetMagicResistMod(GameObjectBase, GameObjectBase) Declaration public static float GetMagicResistMod(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single GetNextBasicAttackDamage(GameObjectBase, GameObjectBase) Gets the player's next attack damage to be dealt to the target. Declaration public static float GetNextBasicAttackDamage(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single GetPhysicalDamageReductionModifier<T>(T) Declaration public static float GetPhysicalDamageReductionModifier<T>(T target) where T : GameObjectBase Parameters Type Name Description T target Returns Type Description System.Single Type Parameters Name Description T GetTargetHealthAfterBasicAttack(GameObjectBase, GameObjectBase) Gets the target's health after player's basic attack. Declaration public static float GetTargetHealthAfterBasicAttack(GameObjectBase attacker, GameObjectBase target) Parameters Type Name Description GameObjectBase attacker GameObjectBase target Returns Type Description System.Single Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.DamageCalculator.MagicDamageInfo-1.html": {
    "href": "api/Oasys.SDK.DamageCalculator.MagicDamageInfo-1.html",
    "title": "Class DamageCalculator.MagicDamageInfo<TObject> | Oasys SDK",
    "keywords": "Class DamageCalculator.MagicDamageInfo<TObject> Inheritance System.Object DamageCalculator.DamageInfo <TObject> DamageCalculator.MagicDamageInfo<TObject> Implements System.IEquatable < DamageCalculator.DamageInfo <TObject>> System.IEquatable < DamageCalculator.MagicDamageInfo <TObject>> Inherited Members DamageCalculator.DamageInfo<TObject>.attacker DamageCalculator.DamageInfo<TObject>.target DamageCalculator.DamageInfo<TObject>.physicalDamage DamageCalculator.DamageInfo<TObject>.magicDamage DamageCalculator.DamageInfo<TObject>.trueDamage System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class MagicDamageInfo<TObject> : DamageCalculator.DamageInfo<TObject>, IEquatable<DamageCalculator.DamageInfo<TObject>>, IEquatable<DamageCalculator.MagicDamageInfo<TObject>> where TObject : GameObjectBase Type Parameters Name Description TObject Constructors MagicDamageInfo(TObject, TObject, Single) Declaration public MagicDamageInfo(TObject attacker, TObject target, float magicDamage) Parameters Type Name Description TObject attacker TObject target System.Single magicDamage Implements System.IEquatable<T> System.IEquatable<T> Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.DamageCalculator.MixedDamageInfo-1.html": {
    "href": "api/Oasys.SDK.DamageCalculator.MixedDamageInfo-1.html",
    "title": "Class DamageCalculator.MixedDamageInfo<TObject> | Oasys SDK",
    "keywords": "Class DamageCalculator.MixedDamageInfo<TObject> Inheritance System.Object DamageCalculator.DamageInfo <TObject> DamageCalculator.MixedDamageInfo<TObject> Implements System.IEquatable < DamageCalculator.DamageInfo <TObject>> System.IEquatable < DamageCalculator.MixedDamageInfo <TObject>> Inherited Members DamageCalculator.DamageInfo<TObject>.attacker DamageCalculator.DamageInfo<TObject>.target DamageCalculator.DamageInfo<TObject>.physicalDamage DamageCalculator.DamageInfo<TObject>.magicDamage DamageCalculator.DamageInfo<TObject>.trueDamage System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class MixedDamageInfo<TObject> : DamageCalculator.DamageInfo<TObject>, IEquatable<DamageCalculator.DamageInfo<TObject>>, IEquatable<DamageCalculator.MixedDamageInfo<TObject>> where TObject : GameObjectBase Type Parameters Name Description TObject Constructors MixedDamageInfo(TObject, TObject, Single, Single) Declaration public MixedDamageInfo(TObject attacker, TObject target, float physicalDamage, float magicDamage) Parameters Type Name Description TObject attacker TObject target System.Single physicalDamage System.Single magicDamage Implements System.IEquatable<T> System.IEquatable<T> Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.DamageCalculator.PhysicalDamageInfo-1.html": {
    "href": "api/Oasys.SDK.DamageCalculator.PhysicalDamageInfo-1.html",
    "title": "Class DamageCalculator.PhysicalDamageInfo<TObject> | Oasys SDK",
    "keywords": "Class DamageCalculator.PhysicalDamageInfo<TObject> Inheritance System.Object DamageCalculator.DamageInfo <TObject> DamageCalculator.PhysicalDamageInfo<TObject> Implements System.IEquatable < DamageCalculator.DamageInfo <TObject>> System.IEquatable < DamageCalculator.PhysicalDamageInfo <TObject>> Inherited Members DamageCalculator.DamageInfo<TObject>.attacker DamageCalculator.DamageInfo<TObject>.target DamageCalculator.DamageInfo<TObject>.physicalDamage DamageCalculator.DamageInfo<TObject>.magicDamage DamageCalculator.DamageInfo<TObject>.trueDamage System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class PhysicalDamageInfo<TObject> : DamageCalculator.DamageInfo<TObject>, IEquatable<DamageCalculator.DamageInfo<TObject>>, IEquatable<DamageCalculator.PhysicalDamageInfo<TObject>> where TObject : GameObjectBase Type Parameters Name Description TObject Constructors PhysicalDamageInfo(TObject, TObject, Single) Declaration public PhysicalDamageInfo(TObject attacker, TObject target, float physicalDamage) Parameters Type Name Description TObject attacker TObject target System.Single physicalDamage Implements System.IEquatable<T> System.IEquatable<T> Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.DamageCalculator.TrueDamageInfo-1.html": {
    "href": "api/Oasys.SDK.DamageCalculator.TrueDamageInfo-1.html",
    "title": "Class DamageCalculator.TrueDamageInfo<TObject> | Oasys SDK",
    "keywords": "Class DamageCalculator.TrueDamageInfo<TObject> Inheritance System.Object DamageCalculator.DamageInfo <TObject> DamageCalculator.TrueDamageInfo<TObject> Implements System.IEquatable < DamageCalculator.DamageInfo <TObject>> System.IEquatable < DamageCalculator.TrueDamageInfo <TObject>> Inherited Members DamageCalculator.DamageInfo<TObject>.attacker DamageCalculator.DamageInfo<TObject>.target DamageCalculator.DamageInfo<TObject>.physicalDamage DamageCalculator.DamageInfo<TObject>.magicDamage DamageCalculator.DamageInfo<TObject>.trueDamage System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class TrueDamageInfo<TObject> : DamageCalculator.DamageInfo<TObject>, IEquatable<DamageCalculator.DamageInfo<TObject>>, IEquatable<DamageCalculator.TrueDamageInfo<TObject>> where TObject : GameObjectBase Type Parameters Name Description TObject Constructors TrueDamageInfo(TObject, TObject, Single) Declaration public TrueDamageInfo(TObject attacker, TObject target, float trueDamage) Parameters Type Name Description TObject attacker TObject target System.Single trueDamage Implements System.IEquatable<T> System.IEquatable<T> Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.Events.CoreEvents.html": {
    "href": "api/Oasys.SDK.Events.CoreEvents.html",
    "title": "Class CoreEvents | Oasys SDK",
    "keywords": "Class CoreEvents Core related events Inheritance System.Object CoreEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK.Events Assembly : Oasys.SDK.dll Syntax public class CoreEvents Events OnCoreHarassInputAsync This event is raised whenever the harass input(x key for default) is pressed. Declaration public static event CoreEvents.AsyncEventHandler OnCoreHarassInputAsync Event Type Type Description CoreEvents.AsyncEventHandler OnCoreLaneclearInputAsync This event is raised whenever the laneclear input(v key for default) is pressed. Declaration public static event CoreEvents.AsyncEventHandler OnCoreLaneclearInputAsync Event Type Type Description CoreEvents.AsyncEventHandler OnCoreLasthitInputAsync This event is raised whenever the laasthit input(c key for default) is pressed. Declaration public static event CoreEvents.AsyncEventHandler OnCoreLasthitInputAsync Event Type Type Description CoreEvents.AsyncEventHandler OnCoreMainInputAsync This event is raised whenever the main input(space key for default) is pressed. Declaration public static event CoreEvents.AsyncEventHandler OnCoreMainInputAsync Event Type Type Description CoreEvents.AsyncEventHandler OnCoreMainInputRelease This event is raised whenever the main input(space key for default) is released. Declaration public static event CoreEvents.CoreEventTemplate OnCoreMainInputRelease Event Type Type Description CoreEvents.CoreEventTemplate OnCoreMainTick This event is raised multiple times per second. To be specific, it is raised every 10ms. This event is useful for custom caching and calculations executing every each of tick. Declaration public static event CoreEvents.CoreEventTemplate OnCoreMainTick Event Type Type Description CoreEvents.CoreEventTemplate OnCoreRender This event is raised whenever the rendering occurs. If you want to draw, this is the event you want to subscribe to. Declaration public static event CoreEvents.RenderEventTemplate OnCoreRender Event Type Type Description CoreEvents.RenderEventTemplate Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.Events.GameEvents.html": {
    "href": "api/Oasys.SDK.Events.GameEvents.html",
    "title": "Class GameEvents | Oasys SDK",
    "keywords": "Class GameEvents Game related events. Inheritance System.Object GameEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK.Events Assembly : Oasys.SDK.dll Syntax public class GameEvents Events OnBuyItem This event is raised whenever a hero object buys an item. Declaration public static event GameEvents.HeroItemEventTemplate OnBuyItem Event Type Type Description GameEvents.HeroItemEventTemplate OnCreateObject This event is raised whenever there is an object that is created by the game. To activate this event, please refer to Common.Settings.Core.UseNativeObjectManagerCaching (It is disabled by default) Declaration public static event GameEvents.ObjectManagerCallbackDelegate OnCreateObject Event Type Type Description GameEvents.ObjectManagerCallbackDelegate OnDeleteObject This event is raised whenever there is an object that is deleted by the game. To activate this event, please refer to Common.Settings.Core.UseNativeObjectManagerCaching (It is disabled by default) Declaration public static event GameEvents.ObjectManagerCallbackDelegate OnDeleteObject Event Type Type Description GameEvents.ObjectManagerCallbackDelegate OnGameDash This event is raised whenever a champion is dashing. Declaration public static event GameEvents.DashEventTemplate OnGameDash Event Type Type Description GameEvents.DashEventTemplate OnGameLoadComplete This event is raised when the loading of the game finishes, where a user is inside the lobby. If the game has already started, then it is raised immediately after the core has initialized. Declaration public static event GameEvents.GameEventTemplate OnGameLoadComplete Event Type Type Description GameEvents.GameEventTemplate OnGameMatchComplete This event is raised when a game match finishes. Declaration public static event GameEvents.GameEventTemplate OnGameMatchComplete Event Type Type Description GameEvents.GameEventTemplate OnGameNewPath This event is raised whenever a champion changes pathing. Declaration public static event GameEvents.PathChangeEventTemplate OnGameNewPath Event Type Type Description GameEvents.PathChangeEventTemplate OnItemSlotChanged This event is raised whenever a hero object changes the slot of an item. Declaration public static event GameEvents.HeroItemEventTemplate OnItemSlotChanged Event Type Type Description GameEvents.HeroItemEventTemplate OnItemUpgrade This event is raised whenever a hero object upgrades an item. Declaration public static event GameEvents.HeroItemEventTemplate OnItemUpgrade Event Type Type Description GameEvents.HeroItemEventTemplate OnProcessRecall This event is raised whenever enemy champion recalls. Declaration public static event GameEvents.RecallEventTemplate OnProcessRecall Event Type Type Description GameEvents.RecallEventTemplate OnProcessSpell This event is raised whenever enemy champion casts a spell. Declaration public static event GameEvents.SpellEventTemplate OnProcessSpell Event Type Type Description GameEvents.SpellEventTemplate OnSellItem This event is raised whenever a hero object sells an item. Declaration public static event GameEvents.HeroItemEventTemplate OnSellItem Event Type Type Description GameEvents.HeroItemEventTemplate Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.Events.html": {
    "href": "api/Oasys.SDK.Events.html",
    "title": "Namespace Oasys.SDK.Events | Oasys SDK",
    "keywords": "Namespace Oasys.SDK.Events Classes CoreEvents Core related events GameEvents Game related events."
  },
  "api/Oasys.SDK.GameEngine.html": {
    "href": "api/Oasys.SDK.GameEngine.html",
    "title": "Class GameEngine | Oasys SDK",
    "keywords": "Class GameEngine Provides information related to the game engine. Inheritance System.Object GameEngine Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class GameEngine Properties ChatBox Gets information about the chatbox. Declaration public static ChatClient ChatBox { get; } Property Value Type Description ChatClient GamePing The local ping to server. Declaration public static int GamePing { get; } Property Value Type Description System.Int32 GameStatus Gets the current game status. Declaration public static GameStatusFlag GameStatus { get; } Property Value Type Description GameStatusFlag GameTick Gets the current game tick. This is equal to gametime * 1000 Declaration public static int GameTick { get; } Property Value Type Description System.Int32 GameTime Gets the current game time in milliseconds format. Declaration public static float GameTime { get; } Property Value Type Description System.Single GameVersion Gets the current game version. Declaration public static string GameVersion { get; } Property Value Type Description System.String HoveredGameObjectUnderMouse Gets the game object that is underneath the mouse. It will return last cached game object if no object is found. Declaration public static AIBaseClient HoveredGameObjectUnderMouse { get; } Property Value Type Description AIBaseClient InGameInfo Gets information about the current game match. Declaration public static MissionInfo InGameInfo { get; } Property Value Type Description MissionInfo MaxZoomValue Maz zoomable value in game. Declaration public static float MaxZoomValue { get; } Property Value Type Description System.Single Minimap Gets information about the minimap. Declaration public static MinimapInfo Minimap { get; } Property Value Type Description MinimapInfo ScreenMousePosition Position of the cursor in screen projection relative to the world position. Declaration public static Vector2 ScreenMousePosition { get; } Property Value Type Description SharpDX.Vector2 WorldMousePosition Position of the cursor in game world projection. Declaration public static Vector3 WorldMousePosition { get; } Property Value Type Description SharpDX.Vector3 ZoomValue Current zoom value in game. Declaration public static float ZoomValue { get; } Property Value Type Description System.Single Methods IssueOrder(GameEngine.OrderType, Vector2) Issue an order for the player(me) act on. Declaration public static void IssueOrder(GameEngine.OrderType issuedOrder, Vector2 positionOrdered) Parameters Type Name Description GameEngine.OrderType issuedOrder SharpDX.Vector2 positionOrdered IssueOrder(GameEngine.OrderType, Vector3) Issue an order for the player(me) act on. Declaration public static void IssueOrder(GameEngine.OrderType issuedOrder, Vector3 positionOrdered) Parameters Type Name Description GameEngine.OrderType issuedOrder SharpDX.Vector3 positionOrdered IsWall(Vector3) Checks whether the given vector3 position is a wall. Declaration public static bool IsWall(Vector3 vec3Pos) Parameters Type Name Description SharpDX.Vector3 vec3Pos Returns Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.GameEngine.OrderType.html": {
    "href": "api/Oasys.SDK.GameEngine.OrderType.html",
    "title": "Enum GameEngine.OrderType | Oasys SDK",
    "keywords": "Enum GameEngine.OrderType Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public enum OrderType Fields Name Description MoveTo Recall Stop Extension Methods Extensions.ClearFlags<GameEngine.OrderType>(GameEngine.OrderType) Extensions.GetFlagDescription<GameEngine.OrderType>() Extensions.GetFlags<GameEngine.OrderType>() Extensions.In<GameEngine.OrderType>(GameEngine.OrderType[]) Extensions.SetFlags<GameEngine.OrderType>(GameEngine.OrderType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.SDK.Geometry.html": {
    "href": "api/Oasys.SDK.Geometry.html",
    "title": "Class Geometry | Oasys SDK",
    "keywords": "Class Geometry Inheritance System.Object Geometry Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public static class Geometry Methods DistanceFromPointToLine(Vector2, Vector2[]) Declaration public static double DistanceFromPointToLine(Vector2 point, Vector2[] Line) Parameters Type Name Description SharpDX.Vector2 point SharpDX.Vector2 [] Line Returns Type Description System.Double Extend(Vector2, Vector2, Single) Extends the vector. Declaration public static Vector2 Extend(this Vector2 v, Vector2 to, float distance) Parameters Type Name Description SharpDX.Vector2 v The vector. SharpDX.Vector2 to The vector to extend to System.Single distance The distance to extend. Returns Type Description SharpDX.Vector2 Extend(Vector3, Vector3, Single) Extends the specified vector. Declaration public static Vector3 Extend(this Vector3 v, Vector3 to, float distance) Parameters Type Name Description SharpDX.Vector3 v The vector. SharpDX.Vector3 to The vector to extend to. System.Single distance The distance. Returns Type Description SharpDX.Vector3"
  },
  "api/Oasys.SDK.html": {
    "href": "api/Oasys.SDK.html",
    "title": "Namespace Oasys.SDK | Oasys SDK",
    "keywords": "Namespace Oasys.SDK Classes Collision ColorConverter DamageCalculator Standard damage calculator DamageCalculator.DamageInfo<TObject> DamageCalculator.MagicDamageInfo<TObject> DamageCalculator.MixedDamageInfo<TObject> DamageCalculator.PhysicalDamageInfo<TObject> DamageCalculator.TrueDamageInfo<TObject> GameEngine Provides information related to the game engine. Geometry OasysModuleEntryPoint Without this entrypoint, module won't execute. Orbwalker TargetSelector Standard target selector. UnitManager Manages the units. Enums GameEngine.OrderType Orbwalker.OrbWalkingModeType"
  },
  "api/Oasys.SDK.InputProviders.html": {
    "href": "api/Oasys.SDK.InputProviders.html",
    "title": "Namespace Oasys.SDK.InputProviders | Oasys SDK",
    "keywords": "Namespace Oasys.SDK.InputProviders Classes KeyboardProvider Provides keyboard input emulation. MouseProvider Provides mouse input emulation. Enums KeyboardProvider.KeyBoardScanCodes"
  },
  "api/Oasys.SDK.InputProviders.KeyboardProvider.html": {
    "href": "api/Oasys.SDK.InputProviders.KeyboardProvider.html",
    "title": "Class KeyboardProvider | Oasys SDK",
    "keywords": "Class KeyboardProvider Provides keyboard input emulation. Inheritance System.Object KeyboardProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK.InputProviders Assembly : Oasys.SDK.dll Syntax public class KeyboardProvider Methods IsControlPressed() Checks whether if control is pressed. Declaration public static bool IsControlPressed() Returns Type Description System.Boolean IsKeyPressed(Keys) Checks whether if a key is pressed. Declaration public static bool IsKeyPressed(Keys key) Parameters Type Name Description System.Windows.Forms.Keys key Returns Type Description System.Boolean IsShiftPressed() Checks whether if shift is pressed. Declaration public static bool IsShiftPressed() Returns Type Description System.Boolean PressKey(KeyboardProvider.KeyBoardScanCodes) Simulates a key press. Declaration public static void PressKey(KeyboardProvider.KeyBoardScanCodes keyboardScanCode) Parameters Type Name Description KeyboardProvider.KeyBoardScanCodes keyboardScanCode PressKey(Int16) Simulates a key press. Declaration public static void PressKey(short keyboardScanCode) Parameters Type Name Description System.Int16 keyboardScanCode PressKeyDown(KeyboardProvider.KeyBoardScanCodes) Presses a key down. Declaration public static void PressKeyDown(KeyboardProvider.KeyBoardScanCodes keyBoardScanCode) Parameters Type Name Description KeyboardProvider.KeyBoardScanCodes keyBoardScanCode PressKeyDown(Int16) Presses a key down. Declaration public static void PressKeyDown(short keyBoardScanCode) Parameters Type Name Description System.Int16 keyBoardScanCode PressKeyUp(KeyboardProvider.KeyBoardScanCodes) Presses a key up. Declaration public static void PressKeyUp(KeyboardProvider.KeyBoardScanCodes keyBoardScanCode) Parameters Type Name Description KeyboardProvider.KeyBoardScanCodes keyBoardScanCode PressKeyUp(Int16) Presses a key up. Declaration public static void PressKeyUp(short keyBoardScanCode) Parameters Type Name Description System.Int16 keyBoardScanCode Events OnKeyPress This event is raised whenever a key is pressed. Declaration public static event Keyboard.OnKeyPressCallback OnKeyPress Event Type Type Description Keyboard.OnKeyPressCallback Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.InputProviders.KeyboardProvider.KeyBoardScanCodes.html": {
    "href": "api/Oasys.SDK.InputProviders.KeyboardProvider.KeyBoardScanCodes.html",
    "title": "Enum KeyboardProvider.KeyBoardScanCodes | Oasys SDK",
    "keywords": "Enum KeyboardProvider.KeyBoardScanCodes Namespace : Oasys.SDK.InputProviders Assembly : Oasys.SDK.dll Syntax public enum KeyBoardScanCodes : short Fields Name Description ESC KEY_0 KEY_1 KEY_2 KEY_3 KEY_4 KEY_5 KEY_6 KEY_7 KEY_8 KEY_9 KEY_A KEY_BACKSPACE KEY_CLOSENING_BRACKETS KEY_CONTROL KEY_D KEY_E KEY_ENTER KEY_EQUAL KEY_F KEY_G KEY_H KEY_I KEY_J KEY_K KEY_L KEY_MINUS KEY_NUMPAD0 KEY_NUMPAD1 KEY_NUMPAD2 KEY_NUMPAD3 KEY_NUMPAD4 KEY_NUMPAD5 KEY_NUMPAD6 KEY_NUMPAD7 KEY_NUMPAD8 KEY_NUMPAD9 KEY_O KEY_OPENING_BRACKETS KEY_P KEY_Q KEY_R KEY_S KEY_T KEY_TAB KEY_U KEY_W KEY_Y Extension Methods Extensions.ClearFlags<KeyboardProvider.KeyBoardScanCodes>(KeyboardProvider.KeyBoardScanCodes) Extensions.GetFlagDescription<KeyboardProvider.KeyBoardScanCodes>() Extensions.GetFlags<KeyboardProvider.KeyBoardScanCodes>() Extensions.In<KeyboardProvider.KeyBoardScanCodes>(KeyboardProvider.KeyBoardScanCodes[]) Extensions.SetFlags<KeyboardProvider.KeyBoardScanCodes>(KeyboardProvider.KeyBoardScanCodes, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.SDK.InputProviders.MouseProvider.html": {
    "href": "api/Oasys.SDK.InputProviders.MouseProvider.html",
    "title": "Class MouseProvider | Oasys SDK",
    "keywords": "Class MouseProvider Provides mouse input emulation. Inheritance System.Object MouseProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK.InputProviders Assembly : Oasys.SDK.dll Syntax public class MouseProvider Methods ClickAndBounce(Pos, Boolean, Action) Clicks on target position, and after [delay]ms bounces back to origin location. Declaration public static bool ClickAndBounce(Pos p, bool left = false, Action callback = null) Parameters Type Name Description Pos p System.Boolean left System.Action callback what to do instead of a right click in case we need a key press or something Returns Type Description System.Boolean has clicked ClickAndBounce(Int32, Int32, Boolean, Action) Clicks on target position, and after [delay]ms bounces back to origin location. Declaration public static bool ClickAndBounce(int x, int y, bool left = false, Action callback = null) Parameters Type Name Description System.Int32 x System.Int32 y System.Boolean left System.Action callback what to do instead of a right click in case we need a key press or something Returns Type Description System.Boolean has clicked SetCursor(Pos) Sets the cursor position. Note that using SetCursor over SetPosition will not send any input stream events that we might want for certain scenarios. Declaration public static void SetCursor(Pos p) Parameters Type Name Description Pos p SetCursor(Int32, Int32) Sets the cursor position. Note that using SetCursor over SetPosition will not send any input stream events that we might want for certain scenarios. Declaration public static void SetCursor(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y SetCursorRelative(Pos) Changes the cursor position relatively to its current position. Note that using SetCursor over SetPosition will not send any input stream events that we might want for certain scenarios. Declaration public static void SetCursorRelative(Pos p) Parameters Type Name Description Pos p SetCursorRelative(Int32, Int32) Changes the cursor position relatively to its current position. Note that using SetCursor over SetPosition will not send any input stream events that we might want for certain scenarios. Declaration public static void SetCursorRelative(int xOffset, int yOffset) Parameters Type Name Description System.Int32 xOffset System.Int32 yOffset SetPosition(Pos) Sets the mouse position using the native mouse_event call. This will also stream all information of mouse movement into the input handler. Declaration public static void SetPosition(Pos p) Parameters Type Name Description Pos p SetPosition(Int32, Int32) Sets the mouse position using the native mouse_event call. This will also stream all information of mouse movement into the input handler. Declaration public static void SetPosition(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y SetPositionRelative(Pos) Changes the mouse position relatively to its current position using the native mouse_event call. This will also stream all information of mouse movement into the input handler. Declaration public static void SetPositionRelative(Pos p) Parameters Type Name Description Pos p SetPositionRelative(Int32, Int32) Changes the mouse position relatively to its current position using the native mouse_event call. This will also stream all information of mouse movement into the input handler. Declaration public static void SetPositionRelative(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.Menu.html": {
    "href": "api/Oasys.SDK.Menu.html",
    "title": "Namespace Oasys.SDK.Menu | Oasys SDK",
    "keywords": "Namespace Oasys.SDK.Menu Classes MenuManager"
  },
  "api/Oasys.SDK.Menu.MenuManager.html": {
    "href": "api/Oasys.SDK.Menu.MenuManager.html",
    "title": "Class MenuManager | Oasys SDK",
    "keywords": "Class MenuManager Inheritance System.Object MenuManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK.Menu Assembly : Oasys.SDK.dll Syntax public class MenuManager Methods AddTab(Tab) Adds the tab to the menu. Declaration public static int AddTab(Tab tab) Parameters Type Name Description Tab tab Returns Type Description System.Int32 Index of tab Examples MenuManager.AddTab(new Tab(\"Tab1\")); GetTab(Func<Tab, Boolean>) Declaration public static Tab GetTab(Func<Tab, bool> predicate) Parameters Type Name Description System.Func < Tab , System.Boolean > predicate Returns Type Description Tab GetTab(Int32) Gets a tab by its index. Declaration public static Tab GetTab(int index) Parameters Type Name Description System.Int32 index Returns Type Description Tab Requested item Examples var tab1 = MenuManager.GetTab(1); GetTab(String) Gets a tab with the name from the menu. Declaration public static Tab GetTab(string tabName) Parameters Type Name Description System.String tabName Returns Type Description Tab Examples MenuManager.GetTab(\"Tab1\"); Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.OasysModuleEntryPoint.html": {
    "href": "api/Oasys.SDK.OasysModuleEntryPoint.html",
    "title": "Class OasysModuleEntryPoint | Oasys SDK",
    "keywords": "Class OasysModuleEntryPoint Without this entrypoint, module won't execute. Inheritance System.Object System.Attribute OasysModuleEntryPoint OasysModuleEntryPoint Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class OasysModuleEntryPoint : OasysModuleEntryPoint Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.Orbwalker.html": {
    "href": "api/Oasys.SDK.Orbwalker.html",
    "title": "Class Orbwalker | Oasys SDK",
    "keywords": "Class Orbwalker Inheritance System.Object Orbwalker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class Orbwalker Properties AllowAttacking Enable/disable the orbwalker to being able to attack Declaration public static bool AllowAttacking { get; set; } Property Value Type Description System.Boolean AllowMoving Enable/disable the orbwalker to being able to move Declaration public static bool AllowMoving { get; set; } Property Value Type Description System.Boolean AttackCooldownRemaining Remaining time in seconds before basic attack is possible Declaration public static float AttackCooldownRemaining { get; } Property Value Type Description System.Single CanBasicAttack Can my champion basic attack Declaration public static bool CanBasicAttack { get; } Property Value Type Description System.Boolean CanMove Can my champion move after basic attack Declaration public static bool CanMove { get; } Property Value Type Description System.Boolean ForceMovePosition Set this to force move to a screen position when can walk, remember to reset the value to Vector2.Zero. Declaration public static Vector2 ForceMovePosition { get; set; } Property Value Type Description SharpDX.Vector2 LaneClearTarget Current selected laneclear target Declaration public static GameObjectBase LaneClearTarget { get; } Property Value Type Description GameObjectBase LastBasicAttack Last basic attack in game time Declaration public static float LastBasicAttack { get; } Property Value Type Description System.Single LastMove Last move in game time Declaration public static float LastMove { get; } Property Value Type Description System.Single OrbwalkingMode Orbwalking mode Declaration public static Orbwalker.OrbWalkingModeType OrbwalkingMode { get; set; } Property Value Type Description Orbwalker.OrbWalkingModeType PreviousMinion Previous attacked minion with orbwalker Declaration public static GameObjectBase PreviousMinion { get; } Property Value Type Description GameObjectBase SelectedHero Manually overrided hero targetselection Declaration public static GameObjectBase SelectedHero { get; set; } Property Value Type Description GameObjectBase SelectedTarget Manually overrided target Declaration public static GameObjectBase SelectedTarget { get; set; } Property Value Type Description GameObjectBase TargetChampionsOnly Is target champions only being pressed. Set to true for holding target champions only, set to false to stop holding target champions only. Declaration public static bool TargetChampionsOnly { get; set; } Property Value Type Description System.Boolean TargetHero Current selected hero target Declaration public static GameObjectBase TargetHero { get; } Property Value Type Description GameObjectBase Methods AttackReset() Reset attack timer Declaration public static void AttackReset() GetTarget(Orbwalker.OrbWalkingModeType) Get a orbwalking target Declaration public static GameObjectBase GetTarget(Orbwalker.OrbWalkingModeType orbwalkingMode) Parameters Type Name Description Orbwalker.OrbWalkingModeType orbwalkingMode Returns Type Description GameObjectBase GetTarget(Orbwalker.OrbWalkingModeType, Single) Get a orbwalking target with custom range, usecase fx: Zeri Q Declaration public static GameObjectBase GetTarget(Orbwalker.OrbWalkingModeType orbwalkingMode, float range = 0F) Parameters Type Name Description Orbwalker.OrbWalkingModeType orbwalkingMode System.Single range Returns Type Description GameObjectBase Events OnOrbwalkerAfterBasicAttack This event is raised when orbwalker has just processed a basicattack. Declaration public static event Orbwalker.BasicAttackCommand OnOrbwalkerAfterBasicAttack Event Type Type Description Orbwalker.BasicAttackCommand OnOrbwalkerBasicAttack This event is raised when orbwalker is processing a basicattack. Declaration public static event Orbwalker.BasicAttackCommand OnOrbwalkerBasicAttack Event Type Type Description Orbwalker.BasicAttackCommand Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.Orbwalker.OrbWalkingModeType.html": {
    "href": "api/Oasys.SDK.Orbwalker.OrbWalkingModeType.html",
    "title": "Enum Orbwalker.OrbWalkingModeType | Oasys SDK",
    "keywords": "Enum Orbwalker.OrbWalkingModeType Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public enum OrbWalkingModeType Fields Name Description Combo The orbwalker will only attack champions. Evade The orbwalker will not attack while evading. Freeze The orbwalker will only last hit minions as late as possible. LaneClear The orbwalker will clear the lane of minions as fast as possible while attempting to get the last hit. But also targetting champions, monsters, turrrets, etc... LastHit The orbwalker will only last hit minions. Mixed The orbwalker will alternate between last hitting and auto attacking champions. Move The orbwalker will only move. None The orbwalker does nothing. Extension Methods Extensions.ClearFlags<Orbwalker.OrbWalkingModeType>(Orbwalker.OrbWalkingModeType) Extensions.GetFlagDescription<Orbwalker.OrbWalkingModeType>() Extensions.GetFlags<Orbwalker.OrbWalkingModeType>() Extensions.In<Orbwalker.OrbWalkingModeType>(Orbwalker.OrbWalkingModeType[]) Extensions.SetFlags<Orbwalker.OrbWalkingModeType>(Orbwalker.OrbWalkingModeType, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.SDK.Rendering.html": {
    "href": "api/Oasys.SDK.Rendering.html",
    "title": "Namespace Oasys.SDK.Rendering | Oasys SDK",
    "keywords": "Namespace Oasys.SDK.Rendering Classes RenderFactory Rendering for the core."
  },
  "api/Oasys.SDK.Rendering.RenderFactory.html": {
    "href": "api/Oasys.SDK.Rendering.RenderFactory.html",
    "title": "Class RenderFactory | Oasys SDK",
    "keywords": "Class RenderFactory Rendering for the core. Inheritance System.Object RenderFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK.Rendering Assembly : Oasys.SDK.dll Syntax public class RenderFactory Fields D3D9BoxLine Gets the D3D9 Line to draw a box. Declaration public static Line D3D9BoxLine Field Value Type Description SharpDX.Direct3D9.Line D3D9Font Gets the D3D9 Font to draw. Declaration public static Font D3D9Font Field Value Type Description SharpDX.Direct3D9.Font D3D9Line Gets the D3D9 Line to draw a line. Declaration public static Line D3D9Line Field Value Type Description SharpDX.Direct3D9.Line Properties RenderDevice Gets the render device. Declaration public static Device RenderDevice { get; } Property Value Type Description SharpDX.Direct3D9.Device Methods DrawBox(Single, Single, Single, Single, Color) Draws a box/rectangle. Declaration public static void DrawBox(float x, float y, float w, float h, Color color) Parameters Type Name Description System.Single x System.Single y System.Single w System.Single h SharpDX.Color color DrawBoxMidPoint(Vector2, Single, Single, Color) Draws a box/rectangle from the middle point of the vector position given. Declaration public static void DrawBoxMidPoint(Vector2 pos, float width, float height, Color color) Parameters Type Name Description SharpDX.Vector2 pos System.Single width System.Single height SharpDX.Color color DrawLine(Single, Single, Single, Single, Single, Color) Draws a line on the screen. Declaration public static void DrawLine(float x1, float y1, float x2, float y2, float w, Color Color) Parameters Type Name Description System.Single x1 System.Single y1 System.Single x2 System.Single y2 System.Single w SharpDX.Color Color DrawNativeCircle(Vector3, Single, Color, Single, Boolean) Draws a native circle relative to the game position and viewmatrix. Declaration public static void DrawNativeCircle(Vector3 position, float radius, Color color, float thickness, bool filled = false) Parameters Type Name Description SharpDX.Vector3 position System.Single radius SharpDX.Color color System.Single thickness System.Boolean filled DrawSpellBoxedLine(Vector2, Vector2, Single, Color) Draws a straight hollowed boxed line. Declaration public static void DrawSpellBoxedLine(Vector2 sPos, Vector2 ePos, float sWidth, Color cl) Parameters Type Name Description SharpDX.Vector2 sPos SharpDX.Vector2 ePos System.Single sWidth SharpDX.Color cl DrawText(Font, String, Int32, Vector2, Color, Boolean) Draws a text on the screen. Declaration public static void DrawText(Font providedFont, string text, int FontSize, Vector2 position, Color color, bool centered = true) Parameters Type Name Description SharpDX.Direct3D9.Font providedFont System.String text System.Int32 FontSize SharpDX.Vector2 position SharpDX.Color color System.Boolean centered DrawText(String, Int32, Vector2, Color, Boolean) Draws a text on the screen. Declaration public static void DrawText(string text, int FontSize, Vector2 position, Color color, bool centered = true) Parameters Type Name Description System.String text System.Int32 FontSize SharpDX.Vector2 position SharpDX.Color color System.Boolean centered GenerateD3D9Font(FontDescription) Generates a new font with the given FontDescription parameter. Declaration public static Font GenerateD3D9Font(FontDescription ftDesc) Parameters Type Name Description SharpDX.Direct3D9.FontDescription ftDesc Returns Type Description SharpDX.Direct3D9.Font SharpDX.Direct3D9.Font Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.SpellCasting.CastSlot.html": {
    "href": "api/Oasys.SDK.SpellCasting.CastSlot.html",
    "title": "Enum CastSlot | Oasys SDK",
    "keywords": "Enum CastSlot Namespace : Oasys.SDK.SpellCasting Assembly : Oasys.SDK.dll Syntax public enum CastSlot Fields Name Description E Q R Summoner1 Summoner2 W Extension Methods Extensions.ClearFlags<CastSlot>(CastSlot) Extensions.GetFlagDescription<CastSlot>() Extensions.GetFlags<CastSlot>() Extensions.In<CastSlot>(CastSlot[]) Extensions.SetFlags<CastSlot>(CastSlot, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.SDK.SpellCasting.html": {
    "href": "api/Oasys.SDK.SpellCasting.html",
    "title": "Namespace Oasys.SDK.SpellCasting | Oasys SDK",
    "keywords": "Namespace Oasys.SDK.SpellCasting Classes ItemCastProvider Provides item casting emulation. SpellCastProvider Provides spell casting emulation. SummonerSpellsProvider Provides summoner spell information. Enums CastSlot SummonerSpellsEnum SummonerSpellSlot"
  },
  "api/Oasys.SDK.SpellCasting.ItemCastProvider.html": {
    "href": "api/Oasys.SDK.SpellCasting.ItemCastProvider.html",
    "title": "Class ItemCastProvider | Oasys SDK",
    "keywords": "Class ItemCastProvider Provides item casting emulation. Inheritance System.Object ItemCastProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK.SpellCasting Assembly : Oasys.SDK.dll Syntax public class ItemCastProvider Methods CastItem(ItemID) Casts an item at/towards the position of the mouse, or self casts. Declaration public static void CastItem(ItemID iID) Parameters Type Name Description ItemID iID CastItem(ItemID, GameObjectBase) Casts an item at/towards the given target. Declaration public static void CastItem(ItemID iID, GameObjectBase target) Parameters Type Name Description ItemID iID GameObjectBase target CastItem(ItemID, Vector2) Casts an item at/towards the given vector3 position parameter Declaration public static void CastItem(ItemID iID, Vector2 screenPosition) Parameters Type Name Description ItemID iID SharpDX.Vector2 screenPosition CastItem(ItemID, Vector3) Casts an item at/towards the given vector3 position parameter Declaration public static void CastItem(ItemID iID, Vector3 objectPosition) Parameters Type Name Description ItemID iID SharpDX.Vector3 objectPosition Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.SpellCasting.SpellCastProvider.html": {
    "href": "api/Oasys.SDK.SpellCasting.SpellCastProvider.html",
    "title": "Class SpellCastProvider | Oasys SDK",
    "keywords": "Class SpellCastProvider Provides spell casting emulation. Inheritance System.Object SpellCastProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK.SpellCasting Assembly : Oasys.SDK.dll Syntax public class SpellCastProvider Methods CastMultiSpell(CastSlot[]) Casts multiple spells at/towards the position of the mouse. Declaration public static void CastMultiSpell(CastSlot[] slotArray) Parameters Type Name Description CastSlot [] slotArray CastMultiSpell(CastSlot[], Vector2) Casts multiple spells at/towards the given vector2 position parameter. Declaration public static void CastMultiSpell(CastSlot[] slotArray, Vector2 screenPosition) Parameters Type Name Description CastSlot [] slotArray SharpDX.Vector2 screenPosition CastMultiSpell(CastSlot[], Vector3) Casts multiple spells at/towards the given vector3 position parameter. Declaration public static void CastMultiSpell(CastSlot[] slotArray, Vector3 objectPosition) Parameters Type Name Description CastSlot [] slotArray SharpDX.Vector3 objectPosition CastMultiSpell(Tuple<CastSlot, Vector2>[]) Casts multiple spells at/towards the given each vector2 position array in a tuple. Declaration public static void CastMultiSpell(Tuple<CastSlot, Vector2>[] respectiveSpells) Parameters Type Name Description System.Tuple < CastSlot , SharpDX.Vector2 >[] respectiveSpells CastMultiSpell(Tuple<CastSlot, Vector3>[]) Casts multiple spells at/towards the given each vector3 position array in a tuple. Declaration public static void CastMultiSpell(Tuple<CastSlot, Vector3>[] respectiveSpells) Parameters Type Name Description System.Tuple < CastSlot , SharpDX.Vector3 >[] respectiveSpells CastSpell(CastSlot) Casts a spell at/towards the position of the mouse. Declaration public static bool CastSpell(CastSlot slot) Parameters Type Name Description CastSlot slot Returns Type Description System.Boolean CastSpell(CastSlot, Vector2) Casts a spell at/towards the given vector2 position parameter. Declaration public static bool CastSpell(CastSlot slot, Vector2 screenPosition) Parameters Type Name Description CastSlot slot SharpDX.Vector2 screenPosition Returns Type Description System.Boolean CastSpell(CastSlot, Vector2, Single) Casts a spell at/towards the given vector2 position parameter. Declaration public static bool CastSpell(CastSlot slot, Vector2 screenPosition, float castTime) Parameters Type Name Description CastSlot slot SharpDX.Vector2 screenPosition System.Single castTime Returns Type Description System.Boolean CastSpell(CastSlot, Vector3) Casts a spell at/towards the given vector3 position parameter Declaration public static bool CastSpell(CastSlot slot, Vector3 objectPosition) Parameters Type Name Description CastSlot slot SharpDX.Vector3 objectPosition Returns Type Description System.Boolean CastSpell(CastSlot, Vector3, Single) Casts a spell at/towards the given vector3 position parameter Declaration public static bool CastSpell(CastSlot slot, Vector3 objectPosition, float castTime) Parameters Type Name Description CastSlot slot SharpDX.Vector3 objectPosition System.Single castTime Returns Type Description System.Boolean CastSpell(CastSlot, Single) Casts a spell at/towards the position of the mouse. Declaration public static bool CastSpell(CastSlot slot, float castTime) Parameters Type Name Description CastSlot slot System.Single castTime Returns Type Description System.Boolean ReleaseChargeSpell(SpellCastSlot) Release charged spell Declaration public static bool ReleaseChargeSpell(SpellCastSlot slot) Parameters Type Name Description SpellCastSlot slot Returns Type Description System.Boolean ReleaseChargeSpell(SpellCastSlot, Vector2, Single) Release charged spell that has cast time Declaration public static bool ReleaseChargeSpell(SpellCastSlot slot, Vector2 screenPosition, float castTime) Parameters Type Name Description SpellCastSlot slot SharpDX.Vector2 screenPosition System.Single castTime Returns Type Description System.Boolean ReleaseChargeSpell(SpellCastSlot, Vector3, Single) Release charged spell that has cast time Declaration public static bool ReleaseChargeSpell(SpellCastSlot slot, Vector3 objectPosition, float castTime) Parameters Type Name Description SpellCastSlot slot SharpDX.Vector3 objectPosition System.Single castTime Returns Type Description System.Boolean ReleaseChargeSpell(SpellCastSlot, Single) Release charged spell that has cast time Declaration public static bool ReleaseChargeSpell(SpellCastSlot slot, float castTime) Parameters Type Name Description SpellCastSlot slot System.Single castTime Returns Type Description System.Boolean StartChargeSpell(SpellCastSlot) Start charging spell Declaration public static bool StartChargeSpell(SpellCastSlot slot) Parameters Type Name Description SpellCastSlot slot Returns Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.SpellCasting.SummonerSpellsEnum.html": {
    "href": "api/Oasys.SDK.SpellCasting.SummonerSpellsEnum.html",
    "title": "Enum SummonerSpellsEnum | Oasys SDK",
    "keywords": "Enum SummonerSpellsEnum Namespace : Oasys.SDK.SpellCasting Assembly : Oasys.SDK.dll Syntax public enum SummonerSpellsEnum Fields Name Description Barrier Clarity Cleanse Exhaust Flash Ghost Heal Ignite Mark PoroToss Smite ToTheKing Extension Methods Extensions.ClearFlags<SummonerSpellsEnum>(SummonerSpellsEnum) Extensions.GetFlagDescription<SummonerSpellsEnum>() Extensions.GetFlags<SummonerSpellsEnum>() Extensions.In<SummonerSpellsEnum>(SummonerSpellsEnum[]) Extensions.SetFlags<SummonerSpellsEnum>(SummonerSpellsEnum, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.SDK.SpellCasting.SummonerSpellSlot.html": {
    "href": "api/Oasys.SDK.SpellCasting.SummonerSpellSlot.html",
    "title": "Enum SummonerSpellSlot | Oasys SDK",
    "keywords": "Enum SummonerSpellSlot Namespace : Oasys.SDK.SpellCasting Assembly : Oasys.SDK.dll Syntax public enum SummonerSpellSlot Fields Name Description First Second Extension Methods Extensions.ClearFlags<SummonerSpellSlot>(SummonerSpellSlot) Extensions.GetFlagDescription<SummonerSpellSlot>() Extensions.GetFlags<SummonerSpellSlot>() Extensions.In<SummonerSpellSlot>(SummonerSpellSlot[]) Extensions.SetFlags<SummonerSpellSlot>(SummonerSpellSlot, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.SDK.SpellCasting.SummonerSpellsProvider.html": {
    "href": "api/Oasys.SDK.SpellCasting.SummonerSpellsProvider.html",
    "title": "Class SummonerSpellsProvider | Oasys SDK",
    "keywords": "Class SummonerSpellsProvider Provides summoner spell information. Inheritance System.Object SummonerSpellsProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK.SpellCasting Assembly : Oasys.SDK.dll Syntax public class SummonerSpellsProvider Methods IHaveSpellOnSlot(SummonerSpellsEnum, SummonerSpellSlot) Checks whether if I(player) have a given summoner spell on the slot provided. Declaration public static bool IHaveSpellOnSlot(SummonerSpellsEnum summSpell, SummonerSpellSlot summSpellSlot) Parameters Type Name Description SummonerSpellsEnum summSpell SummonerSpellSlot summSpellSlot Returns Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.TargetSelector.html": {
    "href": "api/Oasys.SDK.TargetSelector.html",
    "title": "Class TargetSelector | Oasys SDK",
    "keywords": "Class TargetSelector Standard target selector. Inheritance System.Object TargetSelector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class TargetSelector Methods AttacksLeftToKill(GameObjectBase) Gets the amount of attacks left to kill. Declaration public static float AttacksLeftToKill(GameObjectBase target) Parameters Type Name Description GameObjectBase target Returns Type Description System.Single GetBestChampionTarget(GameObjectBase) Gets the best considered champion to target. Declaration public static GameObjectBase GetBestChampionTarget(GameObjectBase selectedChampion = null) Parameters Type Name Description GameObjectBase selectedChampion Returns Type Description GameObjectBase IsAttackable(GameObjectBase) Checks whether if the player can attack the target. Declaration public static bool IsAttackable(GameObjectBase target) Parameters Type Name Description GameObjectBase target Returns Type Description System.Boolean IsAttackable(GameObjectBase, Boolean) Checks whether if the player can attack the target. Declaration public static bool IsAttackable(GameObjectBase target, bool teamCheck = true) Parameters Type Name Description GameObjectBase target System.Boolean teamCheck Returns Type Description System.Boolean IsDisplacementImmune(GameObjectBase) https://leagueoflegends.fandom.com/wiki/Crowd_control#Displacement_Immunity Declaration public static bool IsDisplacementImmune(GameObjectBase target) Parameters Type Name Description GameObjectBase target Returns Type Description System.Boolean IsInRange(GameObjectBase) Checks whether if the target is in the player's base(attackable) range. Declaration public static bool IsInRange(GameObjectBase target) Parameters Type Name Description GameObjectBase target Returns Type Description System.Boolean IsInvulnerable(GameObjectBase, DamageType, Boolean) Checks whether if the target is invulnerable to damage of the specified damagetype, ignore shields default. Declaration public static bool IsInvulnerable(GameObjectBase target, DamageType damageType, bool ignoreShields = true) Parameters Type Name Description GameObjectBase target DamageType damageType System.Boolean ignoreShields Default true. Ignores spell shields like Sivir E Returns Type Description System.Boolean IsKillable(GameObjectBase) Checks whether if the target is killable. Declaration public static bool IsKillable(GameObjectBase target) Parameters Type Name Description GameObjectBase target Returns Type Description System.Boolean IsTotalCCImmune(GameObjectBase) https://leagueoflegends.fandom.com/wiki/Crowd_control#Immunity Declaration public static bool IsTotalCCImmune(GameObjectBase target) Parameters Type Name Description GameObjectBase target Returns Type Description System.Boolean ShouldAttackMinion(GameObjectBase) Checks whether if the target is in the player's base(attackable) range. Declaration public static bool ShouldAttackMinion(GameObjectBase minion) Parameters Type Name Description GameObjectBase minion Returns Type Description System.Boolean Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.Tools.html": {
    "href": "api/Oasys.SDK.Tools.html",
    "title": "Namespace Oasys.SDK.Tools | Oasys SDK",
    "keywords": "Namespace Oasys.SDK.Tools Classes Logger Standard console logger. Enums LogSeverity"
  },
  "api/Oasys.SDK.Tools.Logger.html": {
    "href": "api/Oasys.SDK.Tools.Logger.html",
    "title": "Class Logger | Oasys SDK",
    "keywords": "Class Logger Standard console logger. Inheritance System.Object Logger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK.Tools Assembly : Oasys.SDK.dll Syntax public class Logger Methods Log(Object, LogSeverity) Logs the given data to the console. Declaration public static void Log(object dataToLog, LogSeverity severity = LogSeverity.Neutral) Parameters Type Name Description System.Object dataToLog LogSeverity severity Extension Methods Extensions.In<T>(T, T[])"
  },
  "api/Oasys.SDK.Tools.LogSeverity.html": {
    "href": "api/Oasys.SDK.Tools.LogSeverity.html",
    "title": "Enum LogSeverity | Oasys SDK",
    "keywords": "Enum LogSeverity Namespace : Oasys.SDK.Tools Assembly : Oasys.SDK.dll Syntax public enum LogSeverity Fields Name Description Danger Neutral Warning Extension Methods Extensions.ClearFlags<LogSeverity>(LogSeverity) Extensions.GetFlagDescription<LogSeverity>() Extensions.GetFlags<LogSeverity>() Extensions.In<LogSeverity>(LogSeverity[]) Extensions.SetFlags<LogSeverity>(LogSeverity, Boolean) Extensions.To<T>()"
  },
  "api/Oasys.SDK.UnitManager.html": {
    "href": "api/Oasys.SDK.UnitManager.html",
    "title": "Class UnitManager | Oasys SDK",
    "keywords": "Class UnitManager Manages the units. Inheritance System.Object UnitManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Oasys.SDK Assembly : Oasys.SDK.dll Syntax public class UnitManager Fields MyChampion Simply the champion the player is playing as. Declaration public static AIHeroClient MyChampion Field Value Type Description AIHeroClient Properties Allies Gets all the ally game objects. This includes champions, minions, jungle mobs, towers and inhibitors. Declaration public static List<GameObjectBase> Allies { get; } Property Value Type Description System.Collections.Generic.List < GameObjectBase > AllNativeObjects Gets all native objects collected from OnCreateObject and OnDeleteObject. To actively use this list, please refer to Common.Settings.Core.UseNativeObjectManagerCaching (It is disabled by default). Declaration public static List<AIBaseClient> AllNativeObjects { get; } Property Value Type Description System.Collections.Generic.List < AIBaseClient > AllyChampions Gets all the ally champions, including the player champion. Declaration public static List<Hero> AllyChampions { get; } Property Value Type Description System.Collections.Generic.List < Hero > AllyInhibitors Gets all the ally inhibitors. Declaration public static List<Inhibitor> AllyInhibitors { get; } Property Value Type Description System.Collections.Generic.List < Inhibitor > AllyJungleMobs Gets all the ally jungle mobs. Declaration public static List<JungleMob> AllyJungleMobs { get; } Property Value Type Description System.Collections.Generic.List < JungleMob > AllyMinions Gets all the ally minions. Declaration public static List<Minion> AllyMinions { get; } Property Value Type Description System.Collections.Generic.List < Minion > AllyNexus Gets ally nexus if UseNativeObjectManagerCaching is enabled Declaration public static Nexus AllyNexus { get; } Property Value Type Description Nexus AllyTowers Gets all the ally towers. Declaration public static List<Turret> AllyTowers { get; } Property Value Type Description System.Collections.Generic.List < Turret > Enemies Gets all the enemy game objects. This includes champions, minions, jungle mobs, towers and inhibitors. Declaration public static List<GameObjectBase> Enemies { get; } Property Value Type Description System.Collections.Generic.List < GameObjectBase > EnemyChampions Gets all the enemy champions. Declaration public static List<Hero> EnemyChampions { get; } Property Value Type Description System.Collections.Generic.List < Hero > EnemyInhibitors Gets all the enemy inhibitors. Declaration public static List<Inhibitor> EnemyInhibitors { get; } Property Value Type Description System.Collections.Generic.List < Inhibitor > EnemyJungleMobs Gets all the enemy jungle mobs. Declaration public static List<JungleMob> EnemyJungleMobs { get; } Property Value Type Description System.Collections.Generic.List < JungleMob > EnemyMinions Gets all the enemy minions. Declaration public static List<Minion> EnemyMinions { get; } Property Value Type Description System.Collections.Generic.List < Minion > EnemyNexus Gets enemy nexus if UseNativeObjectManagerCaching is enabled Declaration public static Nexus EnemyNexus { get; } Property Value Type Description Nexus EnemyTowers Gets all the enemy towers. Declaration public static List<Turret> EnemyTowers { get; } Property Value Type Description System.Collections.Generic.List < Turret > Nexuses Gets all nexuses in game if UseNativeObjectManagerCaching is enabled Declaration public static List<Nexus> Nexuses { get; } Property Value Type Description System.Collections.Generic.List < Nexus > PlacementObjects Declaration public static List<AIPlacementClient> PlacementObjects { get; } Property Value Type Description System.Collections.Generic.List < AIPlacementClient > Wards Gets all the wards present in game. Declaration public static List<AIPlacementClient> Wards { get; } Property Value Type Description System.Collections.Generic.List < AIPlacementClient > Extension Methods Extensions.In<T>(T, T[])"
  },
  "blog/index.html": {
    "href": "blog/index.html",
    "title": "More to come soon! | Oasys SDK",
    "keywords": "More to come soon!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome! | Oasys SDK",
    "keywords": "Welcome! Welcome to the OASYS SDK Guide. About OASYS SDK allows you to develop modules(scripts as we refer to) with our api equipped with vast amount of features. Our SDK is written in C#, and therefor you will be writing the modules in C#. Please follow the C# Language and Coding Convention . Prerequisites Your brain At minimum, foundation level of knowledge in C# An IDE (Strongly recommend Visual Studio) .NET 6.0 Runtime .NET 6.0 SDK Installation Head over to the releases tab and download the latest release build. After unpacking the zip file, You will see a set of DLLs: Oasys.SDK.dll : is our primary API and module development library. This is what you will be using mainly. Oasys.Common.dll : is our bridging API library between the SDK and our Core. Although you won't be using it directly, it is required for namespace and class references. SharpDX.dll : is our primary third-party rendering library. SharpDX.Direct3D9.dll : same purpose as SharpDX.dll. SharpDX.Mathematics.dll : is our third-party maths library used in rendering and object positions. Newtonsoft.Json.dll : is our third-party serialization library. Those are the DLLs you are required to reference in your module project. Namespace and Class Documentation For namespace and class definitions and code documentation, please refer to here . Creating A Module To begin, create a blank .NET Class Library project and add the DLLs you have downloaded earlier as references. Next, create a class named \"Main\" and reference the needed namespaces: /*Default .NET BCL references here and above*/ using Oasys.SDK; using Oasys.SDK.Events; namespace SampleModule { class Main { } } Create a public static method \"Execute\" and attach OasysModuleEntryPoint attribute to the method. namespace SampleModule { class Main { [OasysModuleEntryPoint] public static void Execute() { } } } Inside this method, you will need to subscribe to the required events: GameEvents.OnGameLoadComplete : this event is raised when the loading of the game finishes, where a user is inside the lobby. If the game has already started, then it is raised immediately after the core has initialized. GameEvents.OnGameMatchComplete : this event is raised when a game match finishes. CoreEvents.OnCoreMainTick : this event is raised multiple times per second. To be specific, it is raised every 10ms. This event is useful for custom caching and calculations executing every each of tick. CoreEvents.OnCoreMainInputAsync : this event is raised whenever the main input(space key for default) is registered. CoreEvents.OnCoreRender : this event is raised whenever the rendering occurs. If you want to draw, this is the event you want to subscribe to. namespace SampleModule { class Main { [OasysModuleEntryPoint] public static void Execute() { GameEvents.OnGameLoadComplete += GameEvents_OnGameLoadComplete; GameEvents.OnGameMatchComplete += GameEvents_OnGameMatchComplete; } private static Task GameEvents_OnGameLoadComplete() { //This is where you want to initialize your stuffs. if(UnitManager.MyChampion.ModelName == \"ChampionName\") { CoreEvents.OnCoreMainTick += CoreEvents_OnCoreMainTick; CoreEvents.OnCoreMainInputAsync += CoreEvents_OnCoreMainInputAsync; CoreEvents.OnCoreRender += CoreEvents_OnCoreRender; } } private static Task GameEvents_OnGameMatchComplete() { //This is where you want to dispose and unload your stuffs. } private static Task CoreEvents_OnCoreMainTick() { //This is where you want to cache and calculate your stuffs. } private static Task CoreEvents_OnCoreMainInputAsync() { //This is where you can do stuffs whenever the main input is registered. } private static void CoreEvents_OnCoreRender() { //This is where you want to draw your stuffs. } } } Compiling Add the below commands into the post-build event and compile the library as normal. This will copy your module into the loader and your current project directory as .omod extension. copy /Y \"$(TargetDir)$(ProjectName).dll\" \"%ProgramW6432%\\Oasys\\Modules\\$(ProjectName).omod\" copy /Y \"$(TargetDir)$(ProjectName).dll\" \"$(TargetDir)$(ProjectName).omod\""
  }
}